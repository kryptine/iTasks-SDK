|| ?module? BitSet


BitSet.NewBitSet !n_elements_0 = let !n_map_1_0 = <{StdInt./_10}> (<{StdInt.*_9}> (<{StdInt./_10}> (<{StdInt.-_7}> (<{StdInt.+_6}> n_elements_0 m_1_2) StdInt.one_11) m_1_2) m_1_2) 32, !set_1_1 = BitSet._BitSet n_elements_0 (_SystemArray.createArray_9 n_map_1_0 0), m_1_2 = 32 in set_1_1
BitSet.EmptyBitSet = BitSet.NewBitSet 0
<{BitSet.cu;78;29_10}> !_vArray_0 !_vArray_1 c_a_2 !g_i_3 !g_s_4 g_a_5 = if (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 (_SystemArray.get_uselect_6 _vArray_0 g_a_5 g_i_3)) in <{BitSet.cu;78;29_10}> _vArray_0 _vArray_1 (_SystemArray.get_update_5 _vArray_1 c_a_2 g_i_3 0) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_0) c_a_2
<{BitSet.cu;78;29_39}> !_vArray_0 c_a_1 !g_i_2 !g_s_3 g_a_4 = if (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 (_SystemArray.uselect_14 g_a_4 g_i_2)) in <{BitSet.cu;78;29_39}> _vArray_0 (_SystemArray.get_update_5 _vArray_0 c_a_1 g_i_2 0) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_0) c_a_1
<{BitSet.cu;78;29_40}> !c_a_0 !g_i_1 !g_s_2 g_a_3 = if (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 (_SystemArray.uselect_14 g_a_3 g_i_1)) in <{BitSet.cu;78;29_40}> (_SystemArray.update_13 c_a_0 g_i_1 0) (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_0) c_a_0
BitSet.ClearBitSet !bitset_0 = select bitset_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let _x_2_0 = _SystemArray.usize_15 map_1_1, g_s2_2_1 = <{StdInt.-_7}> (_predefined.tupsels2v0 _x_2_0) 1 in BitSet.set_map_1 bitset_0 (<{BitSet.cu;78;29_40}> (_SystemArray._createArray_8 (<{StdInt.+_6}> g_s2_2_1 StdInt.one_11)) 0 g_s2_2_1 (_predefined.tupsels2v1 _x_2_0))) 
BitSet.equal_fset_11 !_vArray_0 !_vArray_1 !<{_v==_2}> !i_3 !limit_4 map1_5 map2_6 = if (<{StdInt.==_16}> i_3 limit_4) (_Tuple3 True map1_5 map2_6) (let !_x_1_0 = _SystemArray.get_uselect_6 _vArray_0 map1_5 i_3, !_x_1_1 = _SystemArray.get_uselect_6 _vArray_1 map2_6 i_3 in if (StdBool.not (<{StdOverloaded.get_==_6}> <{_v==_2}> (_predefined.tupsels2v0 _x_1_0) (_predefined.tupsels2v0 _x_1_1))) (_Tuple3 False (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)) (BitSet.equal_fset_11 _vArray_0 _vArray_1 <{_v==_2}> (<{StdInt.+_6}> i_3 StdInt.one_11) limit_4 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)))
BitSet.equal_fset_41 !_vArray_0 !<{_v==_1}> !i_2 !limit_3 map1_4 map2_5 = if (<{StdInt.==_16}> i_2 limit_3) (_Tuple3 True map1_4 map2_5) (let !_x_1_0 = _SystemArray.uselect_14 map1_4 i_2, !_x_1_1 = _SystemArray.get_uselect_6 _vArray_0 map2_5 i_2 in if (StdBool.not (<{StdOverloaded.get_==_6}> <{_v==_1}> (_predefined.tupsels2v0 _x_1_0) (_predefined.tupsels2v0 _x_1_1))) (_Tuple3 False (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)) (BitSet.equal_fset_41 _vArray_0 <{_v==_1}> (<{StdInt.+_6}> i_2 StdInt.one_11) limit_3 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)))
BitSet.equal_fset_42 !<{_v==_0}> !i_1 !limit_2 map1_3 map2_4 = if (<{StdInt.==_16}> i_1 limit_2) (_Tuple3 True map1_3 map2_4) (let !_x_1_0 = _SystemArray.uselect_14 map1_3 i_1, !_x_1_1 = _SystemArray.uselect_14 map2_4 i_1 in if (StdBool.not (<{StdOverloaded.get_==_6}> <{_v==_0}> (_predefined.tupsels2v0 _x_1_0) (_predefined.tupsels2v0 _x_1_1))) (_Tuple3 False (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)) (BitSet.equal_fset_42 <{_v==_0}> (<{StdInt.+_6}> i_1 StdInt.one_11) limit_2 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)))
BitSet.equal_fset_43 !i_0 !limit_1 map1_2 map2_3 = if (<{StdInt.==_16}> i_0 limit_1) (_Tuple3 True map1_2 map2_3) (let !_x_1_0 = _SystemArray.uselect_14 map1_2 i_0, !_x_1_1 = _SystemArray.uselect_14 map2_3 i_0 in if (StdBool.not (<{StdInt.==_16}> (_predefined.tupsels2v0 _x_1_0) (_predefined.tupsels2v0 _x_1_1))) (_Tuple3 False (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)) (BitSet.equal_fset_43 (<{StdInt.+_6}> i_0 StdInt.one_11) limit_1 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v1 _x_1_1)))
BitSet.EqualBitSet !fset1_0 !fset2_1 = select fset1_0 (BitSet._BitSet n_elements1_1_0 map1_1_1 -> select fset2_1 (BitSet._BitSet n_elements2_2_0 map2_2_1 -> if (StdBool.not (<{StdInt.==_16}> n_elements1_1_0 n_elements2_2_0)) (<{_Tuple3!7}> False fset1_0 fset2_1) (let !n_ints_3_0 = <{StdInt./_10}> (<{StdInt.*_9}> (<{StdInt./_10}> (<{StdInt.-_7}> (<{StdInt.+_6}> n_elements1_1_0 m_3_2) StdInt.one_11) m_3_2) m_3_2) 32, !_x_3_1 = BitSet.equal_fset_43 0 n_ints_3_0 map1_1_1 map2_2_1, m_3_2 = 32 in <{_Tuple3!7}> (_predefined.tupsels3v0 _x_3_1) (BitSet.set_map_1 fset1_0 (_predefined.tupsels3v1 _x_3_1)) (BitSet.set_map_1 fset2_1 (_predefined.tupsels3v2 _x_3_1)))) ) 
BitSet.gbit_34 !fs_0 !x_1 !op_2 = select fs_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !div_wsize_2_0 = <{StdInt.>>}> x_1 5, !_x_2_1 = _SystemArray.uselect_14 map_1_1 div_wsize_2_0 in BitSet.set_map_1 fs_0 (_SystemArray.update_13 (_predefined.tupsels2v1 _x_2_1) div_wsize_2_0 (op_2 (_predefined.tupsels2v0 _x_2_1) (<{StdInt.<<}> 1 (StdInt.bitand x_1 (<{StdInt.-_7}> 32 StdInt.one_11)))))) 
BitSet.range_check_33 !_vto_0 !s_1 x_2 id_3 = select s_1 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !i_elem_2_0 = StdOverloaded.get_toInt_21 _vto_0 x_2 in if (BitSet.range_check_33_select0 i_elem_2_0 n_elements_1_0 map_1_1 _vto_0 s_1 x_2 id_3) (StdMisc.abort (<{StdString.+++_11}> "RANGE_CHECK!: " (<{StdString.+++_11}> id_3 (<{StdString.+++_11}> " set t!oo! small, set size: " (<{StdString.+++_11}> (StdString.toString_5 n_elements_1_0) (<{StdString.+++_11}> " asked for element: " (StdString.toString_5 i_elem_2_0))))))) (_Tuple2 i_elem_2_0 s_1)) 
BitSet.range_check_33_select0 i_elem_2_0 n_elements_1_0 map_1_1 !_vto_0 !s_1 x_2 id_3 = if (<{StdInt.<_17}> i_elem_2_0 0) True (StdBool.not (<{StdInt.<_17}> i_elem_2_0 n_elements_1_0))
BitSet.anon_12 !a1_0 !a2_1 = StdInt.bitand a1_0 (StdInt.bitnot a2_1)
BitSet.gbit_44 !fs_0 !x_1 = select fs_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !div_wsize_2_0 = <{StdInt.>>}> x_1 5, !_x_2_1 = _SystemArray.uselect_14 map_1_1 div_wsize_2_0 in BitSet.set_map_1 fs_0 (_SystemArray.update_13 (_predefined.tupsels2v1 _x_2_1) div_wsize_2_0 (BitSet.anon_12 (_predefined.tupsels2v0 _x_2_1) (<{StdInt.<<}> 1 (StdInt.bitand x_1 (<{StdInt.-_7}> 32 StdInt.one_11)))))) 
BitSet.DelBitSet !_vfrom_0 !_vto_1 !fset_2 !elem_3 = let !_x_1_0 = BitSet.range_check_33 _vto_1 fset_2 elem_3 "DelBitSet" in BitSet.gbit_44 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v0 _x_1_0)
BitSet.gbit_36 !fs_0 !x_1 !op_2 = select fs_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !div_wsize_2_0 = <{StdInt.>>}> x_1 5, !_x_2_1 = _SystemArray.uselect_14 map_1_1 div_wsize_2_0 in BitSet.set_map_1 fs_0 (_SystemArray.update_13 (_predefined.tupsels2v1 _x_2_1) div_wsize_2_0 (op_2 (_predefined.tupsels2v0 _x_2_1) (<{StdInt.<<}> 1 (StdInt.bitand x_1 (<{StdInt.-_7}> 32 StdInt.one_11)))))) 
BitSet.range_check_35 !_vto_0 !s_1 x_2 id_3 = select s_1 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !i_elem_2_0 = StdOverloaded.get_toInt_21 _vto_0 x_2 in if (BitSet.range_check_35_select0 i_elem_2_0 n_elements_1_0 map_1_1 _vto_0 s_1 x_2 id_3) (StdMisc.abort (<{StdString.+++_11}> "RANGE_CHECK!: " (<{StdString.+++_11}> id_3 (<{StdString.+++_11}> " set t!oo! small, set size: " (<{StdString.+++_11}> (StdString.toString_5 n_elements_1_0) (<{StdString.+++_11}> " asked for element: " (StdString.toString_5 i_elem_2_0))))))) (_Tuple2 i_elem_2_0 s_1)) 
BitSet.range_check_35_select0 i_elem_2_0 n_elements_1_0 map_1_1 !_vto_0 !s_1 x_2 id_3 = if (<{StdInt.<_17}> i_elem_2_0 0) True (StdBool.not (<{StdInt.<_17}> i_elem_2_0 n_elements_1_0))
BitSet.gbit_45 !fs_0 !x_1 = select fs_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !div_wsize_2_0 = <{StdInt.>>}> x_1 5, !_x_2_1 = _SystemArray.uselect_14 map_1_1 div_wsize_2_0 in BitSet.set_map_1 fs_0 (_SystemArray.update_13 (_predefined.tupsels2v1 _x_2_1) div_wsize_2_0 (StdInt.bitor (_predefined.tupsels2v0 _x_2_1) (<{StdInt.<<}> 1 (StdInt.bitand x_1 (<{StdInt.-_7}> 32 StdInt.one_11)))))) 
BitSet.AddBitSet !_vto_0 !fset_1 !elem_2 = let !_x_1_0 = BitSet.range_check_35 _vto_0 fset_1 elem_2 "AddBitSet" in BitSet.gbit_45 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v0 _x_1_0)
BitSet.complement_fset_loop_13 !i_0 !limit_1 !map_2 = if (<{StdInt.==_16}> i_0 limit_1) map_2 (let !_x_1_0 = _SystemArray.uselect_14 map_2 i_0, !map_1_1 = _SystemArray.update_13 (_predefined.tupsels2v1 _x_1_0) i_0 (StdInt.bitnot (_predefined.tupsels2v0 _x_1_0)) in BitSet.complement_fset_loop_13 (<{StdInt.+_6}> i_0 StdInt.one_11) limit_1 map_1_1)
BitSet.ComplementBitSet !fset_0 = select fset_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !_x_2_0 = _SystemArray.usize_15 map_1_1, !fset_2_1 = BitSet.set_map_1 fset_0 (BitSet.complement_fset_loop_13 0 (_predefined.tupsels2v0 _x_2_0) (_predefined.tupsels2v1 _x_2_0)) in fset_2_1) 
BitSet.gbit_38 !fs_0 !x_1 op_2 = select fs_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !div_wsize_2_0 = <{StdInt.>>}> x_1 5, !_x_2_1 = _SystemArray.uselect_14 map_1_1 div_wsize_2_0 in _Tuple2 (op_2 (_predefined.tupsels2v0 _x_2_1) (<{StdInt.<<}> 1 (StdInt.bitand x_1 (<{StdInt.-_7}> 32 StdInt.one_11)))) (BitSet.set_map_1 fs_0 (_predefined.tupsels2v1 _x_2_1))) 
BitSet.range_check_37 !_vto_0 !s_1 x_2 id_3 = select s_1 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !i_elem_2_0 = StdOverloaded.get_toInt_21 _vto_0 x_2 in if (BitSet.range_check_37_select0 i_elem_2_0 n_elements_1_0 map_1_1 _vto_0 s_1 x_2 id_3) (StdMisc.abort (<{StdString.+++_11}> "RANGE_CHECK!: " (<{StdString.+++_11}> id_3 (<{StdString.+++_11}> " set t!oo! small, set size: " (<{StdString.+++_11}> (StdString.toString_5 n_elements_1_0) (<{StdString.+++_11}> " asked for element: " (StdString.toString_5 i_elem_2_0))))))) (_Tuple2 i_elem_2_0 s_1)) 
BitSet.range_check_37_select0 i_elem_2_0 n_elements_1_0 map_1_1 !_vto_0 !s_1 x_2 id_3 = if (<{StdInt.<_17}> i_elem_2_0 0) True (StdBool.not (<{StdInt.<_17}> i_elem_2_0 n_elements_1_0))
BitSet.range_check_46 !s_0 !x_1 id_2 = select s_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !i_elem_2_0 = StdInt.toInt_21 x_1 in if (BitSet.range_check_46_select0 i_elem_2_0 n_elements_1_0 map_1_1 s_0 x_1 id_2) (StdMisc.abort (<{StdString.+++_11}> "RANGE_CHECK!: " (<{StdString.+++_11}> id_2 (<{StdString.+++_11}> " set t!oo! small, set size: " (<{StdString.+++_11}> (StdString.toString_5 n_elements_1_0) (<{StdString.+++_11}> " asked for element: " (StdString.toString_5 i_elem_2_0))))))) (_Tuple2 i_elem_2_0 s_0)) 
BitSet.range_check_46_select0 i_elem_2_0 n_elements_1_0 map_1_1 !s_0 !x_1 id_2 = if (<{StdInt.<_17}> i_elem_2_0 0) True (StdBool.not (<{StdInt.<_17}> i_elem_2_0 n_elements_1_0))
BitSet.gbit_47 !fs_0 !x_1 = select fs_0 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !div_wsize_2_0 = <{StdInt.>>}> x_1 5, !_x_2_1 = _SystemArray.uselect_14 map_1_1 div_wsize_2_0 in _Tuple2 (StdInt.bitand (_predefined.tupsels2v0 _x_2_1) (<{StdInt.<<}> 1 (StdInt.bitand x_1 (<{StdInt.-_7}> 32 StdInt.one_11)))) (BitSet.set_map_1 fs_0 (_predefined.tupsels2v1 _x_2_1))) 
BitSet.isBitSetMember !fset_0 !elem_1 = let !_x_1_0 = BitSet.range_check_46 fset_0 elem_1 "isBitSetMember", !_x_1_1 = BitSet.gbit_47 (_predefined.tupsels2v1 _x_1_0) (_predefined.tupsels2v0 _x_1_0) in _Tuple2 (StdBool.not (<{StdInt.==_16}> (_predefined.tupsels2v0 _x_1_1) 0)) (_predefined.tupsels2v1 _x_1_1)
BitSet.enum_setSt_14 f_0 !n_elements_1 !i_2 fset_3 state_4 = if (<{StdInt.==_16}> i_2 n_elements_1) (_Tuple2 fset_3 state_4) (let !_x_1_0 = BitSet.isBitSetMember fset_3 i_2 in if (_predefined.tupsels2v0 _x_1_0) (BitSet.enum_setSt_14 f_0 n_elements_1 (<{StdInt.+_6}> i_2 StdInt.one_11) (_predefined.tupsels2v1 _x_1_0) (f_0 i_2 state_4)) (BitSet.enum_setSt_14 f_0 n_elements_1 (<{StdInt.+_6}> i_2 StdInt.one_11) (_predefined.tupsels2v1 _x_1_0) state_4))
BitSet.enum_setSt f_0 !fset_1 state_2 = select fset_1 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !_x_2_0 = BitSet.enum_setSt_14 f_0 n_elements_1_0 0 fset_1 state_2 in _Tuple2 (_predefined.tupsels2v0 _x_2_0) (_predefined.tupsels2v1 _x_2_0)) 
BitSet.get_bit_set_word_at_index_31 !index_0 !bitset_1 = select bitset_1 (BitSet._BitSet n_elements_1_0 map_1_1 -> let !_x_2_0 = _SystemArray.uselect_14 map_1_1 index_0 in <{_Tuple2!3}> (_predefined.tupsels2v0 _x_2_0) (BitSet.set_map_1 bitset_1 (_predefined.tupsels2v1 _x_2_0))) 
<{BitSet.TD;BitSet}> _x_0 = _predefined._Nil
<{BitSet.TD;BitSetAccessors;}> _x_0 = _predefined._Nil


|| Converted Records
:: BitSet._BitSet = {!BitSet.n_elements, !BitSet.map}
BitSet.get_n_elements_0 rec = select rec (BitSet._BitSet a1 a2 -> a1)
BitSet.get_map_1 rec = select rec (BitSet._BitSet a1 a2 -> a2)
BitSet.set_n_elements_0 rec !val = select rec (BitSet._BitSet  a1 a2 -> BitSet._BitSet val a2)
BitSet.set_map_1 rec !val = select rec (BitSet._BitSet  a1 a2 -> BitSet._BitSet a1 val)

:: <{BitSet.BitSetAccessors;}> = {BitSet.get_bit_set_word_at_index}
BitSet.get_get_bit_set_word_at_index_2 rec = select rec (<{BitSet.BitSetAccessors;}> a1 -> a1)
BitSet.set_get_bit_set_word_at_index_2 rec val = select rec (<{BitSet.BitSetAccessors;}>  a1 -> <{BitSet.BitSetAccessors;}> val)

