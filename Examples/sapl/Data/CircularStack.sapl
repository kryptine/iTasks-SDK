|| ?module? Data.CircularStack


Data.CircularStack.newStack !n_0 = Data.CircularStack._CircularStack n_0 0 0 Data.IntMap.Strict.newMap
Data.CircularStack.modulo !i_0 !n_1 = if (<{StdInt.==_16}> n_1 0) (StdMisc.abort "Division by zero") (if (<{StdInt.==_16}> n_1 -1) 0 (if (<{StdInt.==_16}> i_0 n_1) 0 (if (<{StdInt.<_17}> i_0 n_1) i_0 (<{StdInt.-_7}> i_0 (<{StdInt.*_9}> (<{StdInt./_10}> i_0 n_1) n_1)))))
Data.CircularStack.push !x_0 !stack_1 = Data.CircularStack.set_stackData_3 (Data.CircularStack.set_nextIdx_2 (Data.CircularStack.set_actualSize_1 stack_1 (<{Data.CircularStack._if;21;20_94}> (<{StdInt.==_16}> (Data.CircularStack.get_actualSize_1 stack_1) (Data.CircularStack.get_maxSize_0 stack_1)) stack_1)) (Data.CircularStack.modulo (<{StdInt.+_6}> (Data.CircularStack.get_nextIdx_2 stack_1) 1) (Data.CircularStack.get_maxSize_0 stack_1))) (Data.IntMap.Strict.put (Data.CircularStack.get_nextIdx_2 stack_1) x_0 (Data.CircularStack.get_stackData_3 stack_1))
<{Data.CircularStack._if;21;20_94}> !_x_0 !stack_1 = select _x_0 (True -> Data.CircularStack.get_actualSize_1 stack_1) (_ -> <{StdInt.+_6}> (Data.CircularStack.get_actualSize_1 stack_1) 1)
Data.CircularStack.emptyStack !stack_0 = <{StdInt.==_16}> (Data.CircularStack.get_actualSize_1 stack_0) 0
Data.CircularStack.topElemIdx !stack_0 = if (<{StdInt.==_16}> (Data.CircularStack.get_nextIdx_2 stack_0) 0) (<{StdInt.-_7}> (Data.CircularStack.get_maxSize_0 stack_0) 1) (<{StdInt.-_7}> (Data.CircularStack.get_nextIdx_2 stack_0) 1)
Data.CircularStack.pop !stack_0 = if (Data.CircularStack.emptyStack stack_0) (_Tuple2 Data.Maybe.Nothing stack_0) (let top_1_0 = Data.CircularStack.topElemIdx stack_0 in _Tuple2 (Data.IntMap.Strict.get top_1_0 (Data.CircularStack.get_stackData_3 stack_0)) (Data.CircularStack.set_nextIdx_2 (Data.CircularStack.set_actualSize_1 stack_0 (<{StdInt.-_7}> (Data.CircularStack.get_actualSize_1 stack_0) 1)) top_1_0))
Data.CircularStack.peek !stack_0 = if (Data.CircularStack.emptyStack stack_0) Data.Maybe.Nothing (Data.IntMap.Strict.get (Data.CircularStack.topElemIdx stack_0) (Data.CircularStack.get_stackData_3 stack_0))
Data.CircularStack.foldr_10 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (Data.CircularStack.foldr_10 op_0 r_1 x_1_1)) 
Data.CircularStack.foldr_93 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Data.CircularStack.push a_1_0 (Data.CircularStack.foldr_93 r_0 x_1_1)) 
Data.CircularStack.fromList !xs_0 = Data.CircularStack.foldr_93 (Data.CircularStack.newStack (StdList.length_47 xs_0)) xs_0
Data.CircularStack.toList !stack_0 = if (Data.CircularStack.emptyStack stack_0) _predefined._Nil (let _x_1_0 = Data.CircularStack.pop stack_0, stack_1_1 = _predefined.tupsels2v1 _x_1_0 in <{Data.CircularStack._c;55;9_95}> (_predefined.tupsels2v0 _x_1_0) stack_1_1)
<{Data.CircularStack._c;55;9_95}> !_x_0 stack_1 = select _x_0 (Data.Maybe.Just x_1_0 -> _predefined._Cons x_1_0 (Data.CircularStack.toList stack_1)) (_ -> Data.CircularStack.toList stack_1)
<{Data.CircularStack.TD;CircularStack}> _x_0 = _predefined._Nil


|| Converted Records
:: Data.CircularStack._CircularStack = {!Data.CircularStack.maxSize, !Data.CircularStack.actualSize, !Data.CircularStack.nextIdx, !Data.CircularStack.stackData}
Data.CircularStack.get_maxSize_0 rec = select rec (Data.CircularStack._CircularStack a1 a2 a3 a4 -> a1)
Data.CircularStack.get_actualSize_1 rec = select rec (Data.CircularStack._CircularStack a1 a2 a3 a4 -> a2)
Data.CircularStack.get_nextIdx_2 rec = select rec (Data.CircularStack._CircularStack a1 a2 a3 a4 -> a3)
Data.CircularStack.get_stackData_3 rec = select rec (Data.CircularStack._CircularStack a1 a2 a3 a4 -> a4)
Data.CircularStack.set_maxSize_0 rec !val = select rec (Data.CircularStack._CircularStack  a1 a2 a3 a4 -> Data.CircularStack._CircularStack val a2 a3 a4)
Data.CircularStack.set_actualSize_1 rec !val = select rec (Data.CircularStack._CircularStack  a1 a2 a3 a4 -> Data.CircularStack._CircularStack a1 val a3 a4)
Data.CircularStack.set_nextIdx_2 rec !val = select rec (Data.CircularStack._CircularStack  a1 a2 a3 a4 -> Data.CircularStack._CircularStack a1 a2 val a4)
Data.CircularStack.set_stackData_3 rec !val = select rec (Data.CircularStack._CircularStack  a1 a2 a3 a4 -> Data.CircularStack._CircularStack a1 a2 a3 val)

:: <{Data.CircularStack.JSONEncode_s;}> = {Data.CircularStack.JSONEncode_s}
Data.CircularStack.get_JSONEncode_s_4 rec = select rec (<{Data.CircularStack.JSONEncode_s;}> a1 -> a1)
Data.CircularStack.set_JSONEncode_s_4 rec val = select rec (<{Data.CircularStack.JSONEncode_s;}>  a1 -> <{Data.CircularStack.JSONEncode_s;}> val)

:: <{Data.CircularStack.JSONEncode_ss;}> = {Data.CircularStack.JSONEncode_ss}
Data.CircularStack.get_JSONEncode_ss_5 rec = select rec (<{Data.CircularStack.JSONEncode_ss;}> a1 -> a1)
Data.CircularStack.set_JSONEncode_ss_5 rec val = select rec (<{Data.CircularStack.JSONEncode_ss;}>  a1 -> <{Data.CircularStack.JSONEncode_ss;}> val)

:: <{Data.CircularStack.JSONEncode_sss;}> = {Data.CircularStack.JSONEncode_sss}
Data.CircularStack.get_JSONEncode_sss_6 rec = select rec (<{Data.CircularStack.JSONEncode_sss;}> a1 -> a1)
Data.CircularStack.set_JSONEncode_sss_6 rec val = select rec (<{Data.CircularStack.JSONEncode_sss;}>  a1 -> <{Data.CircularStack.JSONEncode_sss;}> val)

:: <{Data.CircularStack.JSONEncode_ssss;}> = {Data.CircularStack.JSONEncode_ssss}
Data.CircularStack.get_JSONEncode_ssss_7 rec = select rec (<{Data.CircularStack.JSONEncode_ssss;}> a1 -> a1)
Data.CircularStack.set_JSONEncode_ssss_7 rec val = select rec (<{Data.CircularStack.JSONEncode_ssss;}>  a1 -> <{Data.CircularStack.JSONEncode_ssss;}> val)

:: <{Data.CircularStack.JSONEncode_sssss;}> = {Data.CircularStack.JSONEncode_sssss}
Data.CircularStack.get_JSONEncode_sssss_8 rec = select rec (<{Data.CircularStack.JSONEncode_sssss;}> a1 -> a1)
Data.CircularStack.set_JSONEncode_sssss_8 rec val = select rec (<{Data.CircularStack.JSONEncode_sssss;}>  a1 -> <{Data.CircularStack.JSONEncode_sssss;}> val)

:: <{Data.CircularStack.JSONEncode_ssssss;}> = {Data.CircularStack.JSONEncode_ssssss}
Data.CircularStack.get_JSONEncode_ssssss_9 rec = select rec (<{Data.CircularStack.JSONEncode_ssssss;}> a1 -> a1)
Data.CircularStack.set_JSONEncode_ssssss_9 rec val = select rec (<{Data.CircularStack.JSONEncode_ssssss;}>  a1 -> <{Data.CircularStack.JSONEncode_ssssss;}> val)

:: <{Data.CircularStack.JSONDecode_s;}> = {Data.CircularStack.JSONDecode_s}
Data.CircularStack.get_JSONDecode_s_10 rec = select rec (<{Data.CircularStack.JSONDecode_s;}> a1 -> a1)
Data.CircularStack.set_JSONDecode_s_10 rec val = select rec (<{Data.CircularStack.JSONDecode_s;}>  a1 -> <{Data.CircularStack.JSONDecode_s;}> val)

:: <{Data.CircularStack.JSONDecode_ss;}> = {Data.CircularStack.JSONDecode_ss}
Data.CircularStack.get_JSONDecode_ss_11 rec = select rec (<{Data.CircularStack.JSONDecode_ss;}> a1 -> a1)
Data.CircularStack.set_JSONDecode_ss_11 rec val = select rec (<{Data.CircularStack.JSONDecode_ss;}>  a1 -> <{Data.CircularStack.JSONDecode_ss;}> val)

:: <{Data.CircularStack.JSONDecode_sss;}> = {Data.CircularStack.JSONDecode_sss}
Data.CircularStack.get_JSONDecode_sss_12 rec = select rec (<{Data.CircularStack.JSONDecode_sss;}> a1 -> a1)
Data.CircularStack.set_JSONDecode_sss_12 rec val = select rec (<{Data.CircularStack.JSONDecode_sss;}>  a1 -> <{Data.CircularStack.JSONDecode_sss;}> val)

:: <{Data.CircularStack.JSONDecode_ssss;}> = {Data.CircularStack.JSONDecode_ssss}
Data.CircularStack.get_JSONDecode_ssss_13 rec = select rec (<{Data.CircularStack.JSONDecode_ssss;}> a1 -> a1)
Data.CircularStack.set_JSONDecode_ssss_13 rec val = select rec (<{Data.CircularStack.JSONDecode_ssss;}>  a1 -> <{Data.CircularStack.JSONDecode_ssss;}> val)

:: <{Data.CircularStack.JSONDecode_sssss;}> = {Data.CircularStack.JSONDecode_sssss}
Data.CircularStack.get_JSONDecode_sssss_14 rec = select rec (<{Data.CircularStack.JSONDecode_sssss;}> a1 -> a1)
Data.CircularStack.set_JSONDecode_sssss_14 rec val = select rec (<{Data.CircularStack.JSONDecode_sssss;}>  a1 -> <{Data.CircularStack.JSONDecode_sssss;}> val)

:: <{Data.CircularStack.JSONDecode_ssssss;}> = {Data.CircularStack.JSONDecode_ssssss}
Data.CircularStack.get_JSONDecode_ssssss_15 rec = select rec (<{Data.CircularStack.JSONDecode_ssssss;}> a1 -> a1)
Data.CircularStack.set_JSONDecode_ssssss_15 rec val = select rec (<{Data.CircularStack.JSONDecode_ssssss;}>  a1 -> <{Data.CircularStack.JSONDecode_ssssss;}> val)

:: <{Data.CircularStack.bimap_s;}> = {Data.CircularStack.bimap_s}
Data.CircularStack.get_bimap_s_16 rec = select rec (<{Data.CircularStack.bimap_s;}> a1 -> a1)
Data.CircularStack.set_bimap_s_16 rec val = select rec (<{Data.CircularStack.bimap_s;}>  a1 -> <{Data.CircularStack.bimap_s;}> val)

:: <{Data.CircularStack.bimap_ss;}> = {Data.CircularStack.bimap_ss}
Data.CircularStack.get_bimap_ss_17 rec = select rec (<{Data.CircularStack.bimap_ss;}> a1 -> a1)
Data.CircularStack.set_bimap_ss_17 rec val = select rec (<{Data.CircularStack.bimap_ss;}>  a1 -> <{Data.CircularStack.bimap_ss;}> val)

:: <{Data.CircularStack.bimap_sss;}> = {Data.CircularStack.bimap_sss}
Data.CircularStack.get_bimap_sss_18 rec = select rec (<{Data.CircularStack.bimap_sss;}> a1 -> a1)
Data.CircularStack.set_bimap_sss_18 rec val = select rec (<{Data.CircularStack.bimap_sss;}>  a1 -> <{Data.CircularStack.bimap_sss;}> val)

:: <{Data.CircularStack.gEq_s;}> = {Data.CircularStack.gEq_s}
Data.CircularStack.get_gEq_s_19 rec = select rec (<{Data.CircularStack.gEq_s;}> a1 -> a1)
Data.CircularStack.set_gEq_s_19 rec val = select rec (<{Data.CircularStack.gEq_s;}>  a1 -> <{Data.CircularStack.gEq_s;}> val)

:: <{Data.CircularStack.gEq_ss;}> = {Data.CircularStack.gEq_ss}
Data.CircularStack.get_gEq_ss_20 rec = select rec (<{Data.CircularStack.gEq_ss;}> a1 -> a1)
Data.CircularStack.set_gEq_ss_20 rec val = select rec (<{Data.CircularStack.gEq_ss;}>  a1 -> <{Data.CircularStack.gEq_ss;}> val)

:: <{Data.CircularStack.gEq_sss;}> = {Data.CircularStack.gEq_sss}
Data.CircularStack.get_gEq_sss_21 rec = select rec (<{Data.CircularStack.gEq_sss;}> a1 -> a1)
Data.CircularStack.set_gEq_sss_21 rec val = select rec (<{Data.CircularStack.gEq_sss;}>  a1 -> <{Data.CircularStack.gEq_sss;}> val)

:: <{Data.CircularStack.gEq_ssss;}> = {Data.CircularStack.gEq_ssss}
Data.CircularStack.get_gEq_ssss_22 rec = select rec (<{Data.CircularStack.gEq_ssss;}> a1 -> a1)
Data.CircularStack.set_gEq_ssss_22 rec val = select rec (<{Data.CircularStack.gEq_ssss;}>  a1 -> <{Data.CircularStack.gEq_ssss;}> val)

:: <{Data.CircularStack.gEq_sssss;}> = {Data.CircularStack.gEq_sssss}
Data.CircularStack.get_gEq_sssss_23 rec = select rec (<{Data.CircularStack.gEq_sssss;}> a1 -> a1)
Data.CircularStack.set_gEq_sssss_23 rec val = select rec (<{Data.CircularStack.gEq_sssss;}>  a1 -> <{Data.CircularStack.gEq_sssss;}> val)

:: <{Data.CircularStack.gEq_ssssss;}> = {Data.CircularStack.gEq_ssssss}
Data.CircularStack.get_gEq_ssssss_24 rec = select rec (<{Data.CircularStack.gEq_ssssss;}> a1 -> a1)
Data.CircularStack.set_gEq_ssssss_24 rec val = select rec (<{Data.CircularStack.gEq_ssssss;}>  a1 -> <{Data.CircularStack.gEq_ssssss;}> val)

:: <{Data.CircularStack.gEq_sssssss;}> = {Data.CircularStack.gEq_sssssss}
Data.CircularStack.get_gEq_sssssss_25 rec = select rec (<{Data.CircularStack.gEq_sssssss;}> a1 -> a1)
Data.CircularStack.set_gEq_sssssss_25 rec val = select rec (<{Data.CircularStack.gEq_sssssss;}>  a1 -> <{Data.CircularStack.gEq_sssssss;}> val)

:: <{Data.CircularStack.gEq_ssssssss;}> = {Data.CircularStack.gEq_ssssssss}
Data.CircularStack.get_gEq_ssssssss_26 rec = select rec (<{Data.CircularStack.gEq_ssssssss;}> a1 -> a1)
Data.CircularStack.set_gEq_ssssssss_26 rec val = select rec (<{Data.CircularStack.gEq_ssssssss;}>  a1 -> <{Data.CircularStack.gEq_ssssssss;}> val)

:: <{Data.CircularStack.gEq_sssssssss;}> = {Data.CircularStack.gEq_sssssssss}
Data.CircularStack.get_gEq_sssssssss_27 rec = select rec (<{Data.CircularStack.gEq_sssssssss;}> a1 -> a1)
Data.CircularStack.set_gEq_sssssssss_27 rec val = select rec (<{Data.CircularStack.gEq_sssssssss;}>  a1 -> <{Data.CircularStack.gEq_sssssssss;}> val)

