|| ?module? Data.Functor


<{Data.Functor.<$>}> !_vFunctor_0 f_1 fa_2 = Data.Functor.get_fmap_0 _vFunctor_0 f_1 fa_2
Data.Functor.anon_5 !f_0 g_1 x_2 = f_0 (g_1 x_2)
Data.Functor.anon_4 !f_0 g_1 x_2 = Data.Functor.anon_5 f_0 g_1 x_2
Data.Functor.fmap_1 f_0 g_1 = Data.Functor.anon_4 f_0 g_1
Data.Functor.fmap_2 f_0 !_x_1 = select _x_1 (_Tuple2 x_1_0 y_1_1 -> _Tuple2 x_1_0 (f_0 y_1_1)) 
<{Data.Functor.TD;Functor;}> _x_0 = _predefined._Nil


|| Converted Records
:: <{Data.Functor.Functor;}> = {!Data.Functor.fmap}
Data.Functor.get_fmap_0 rec = select rec (<{Data.Functor.Functor;}> a1 -> a1)
Data.Functor.set_fmap_0 rec !val = select rec (<{Data.Functor.Functor;}>  a1 -> <{Data.Functor.Functor;}> val)

:: <{Data.Functor.bimap_s;}> = {Data.Functor.bimap_s}
Data.Functor.get_bimap_s_1 rec = select rec (<{Data.Functor.bimap_s;}> a1 -> a1)
Data.Functor.set_bimap_s_1 rec val = select rec (<{Data.Functor.bimap_s;}>  a1 -> <{Data.Functor.bimap_s;}> val)

:: <{Data.Functor.bimap_ss;}> = {Data.Functor.bimap_ss}
Data.Functor.get_bimap_ss_2 rec = select rec (<{Data.Functor.bimap_ss;}> a1 -> a1)
Data.Functor.set_bimap_ss_2 rec val = select rec (<{Data.Functor.bimap_ss;}>  a1 -> <{Data.Functor.bimap_ss;}> val)

:: <{Data.Functor.bimap_sss;}> = {Data.Functor.bimap_sss}
Data.Functor.get_bimap_sss_3 rec = select rec (<{Data.Functor.bimap_sss;}> a1 -> a1)
Data.Functor.set_bimap_sss_3 rec val = select rec (<{Data.Functor.bimap_sss;}>  a1 -> <{Data.Functor.bimap_sss;}> val)

:: <{Data.Functor.gEq_s;}> = {Data.Functor.gEq_s}
Data.Functor.get_gEq_s_4 rec = select rec (<{Data.Functor.gEq_s;}> a1 -> a1)
Data.Functor.set_gEq_s_4 rec val = select rec (<{Data.Functor.gEq_s;}>  a1 -> <{Data.Functor.gEq_s;}> val)

:: <{Data.Functor.gEq_ss;}> = {Data.Functor.gEq_ss}
Data.Functor.get_gEq_ss_5 rec = select rec (<{Data.Functor.gEq_ss;}> a1 -> a1)
Data.Functor.set_gEq_ss_5 rec val = select rec (<{Data.Functor.gEq_ss;}>  a1 -> <{Data.Functor.gEq_ss;}> val)

:: <{Data.Functor.gEq_sss;}> = {Data.Functor.gEq_sss}
Data.Functor.get_gEq_sss_6 rec = select rec (<{Data.Functor.gEq_sss;}> a1 -> a1)
Data.Functor.set_gEq_sss_6 rec val = select rec (<{Data.Functor.gEq_sss;}>  a1 -> <{Data.Functor.gEq_sss;}> val)

:: <{Data.Functor.gEq_ssss;}> = {Data.Functor.gEq_ssss}
Data.Functor.get_gEq_ssss_7 rec = select rec (<{Data.Functor.gEq_ssss;}> a1 -> a1)
Data.Functor.set_gEq_ssss_7 rec val = select rec (<{Data.Functor.gEq_ssss;}>  a1 -> <{Data.Functor.gEq_ssss;}> val)

:: <{Data.Functor.gEq_sssss;}> = {Data.Functor.gEq_sssss}
Data.Functor.get_gEq_sssss_8 rec = select rec (<{Data.Functor.gEq_sssss;}> a1 -> a1)
Data.Functor.set_gEq_sssss_8 rec val = select rec (<{Data.Functor.gEq_sssss;}>  a1 -> <{Data.Functor.gEq_sssss;}> val)

:: <{Data.Functor.gEq_ssssss;}> = {Data.Functor.gEq_ssssss}
Data.Functor.get_gEq_ssssss_9 rec = select rec (<{Data.Functor.gEq_ssssss;}> a1 -> a1)
Data.Functor.set_gEq_ssssss_9 rec val = select rec (<{Data.Functor.gEq_ssssss;}>  a1 -> <{Data.Functor.gEq_ssssss;}> val)

:: <{Data.Functor.gEq_sssssss;}> = {Data.Functor.gEq_sssssss}
Data.Functor.get_gEq_sssssss_10 rec = select rec (<{Data.Functor.gEq_sssssss;}> a1 -> a1)
Data.Functor.set_gEq_sssssss_10 rec val = select rec (<{Data.Functor.gEq_sssssss;}>  a1 -> <{Data.Functor.gEq_sssssss;}> val)

:: <{Data.Functor.gEq_ssssssss;}> = {Data.Functor.gEq_ssssssss}
Data.Functor.get_gEq_ssssssss_11 rec = select rec (<{Data.Functor.gEq_ssssssss;}> a1 -> a1)
Data.Functor.set_gEq_ssssssss_11 rec val = select rec (<{Data.Functor.gEq_ssssssss;}>  a1 -> <{Data.Functor.gEq_ssssssss;}> val)

:: <{Data.Functor.gEq_sssssssss;}> = {Data.Functor.gEq_sssssssss}
Data.Functor.get_gEq_sssssssss_12 rec = select rec (<{Data.Functor.gEq_sssssssss;}> a1 -> a1)
Data.Functor.set_gEq_sssssssss_12 rec val = select rec (<{Data.Functor.gEq_sssssssss;}>  a1 -> <{Data.Functor.gEq_sssssssss;}> val)

