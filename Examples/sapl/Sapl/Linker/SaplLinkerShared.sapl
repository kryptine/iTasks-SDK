|| ?module? Sapl.Linker.SaplLinkerShared


Sapl.Linker.SaplLinkerShared.isGlobalFunction !name_0 = _predefined.tupsels2v0 (Sapl.FastString.charIndex name_0 1 '.')
Sapl.Linker.SaplLinkerShared.generate_dependencies !_x_0 ds_1 = select _x_0 (_predefined._Cons _x_1_0 ts_1_1 -> select _x_1_0 (Sapl.SaplTokenizer.TIdentifier name_2_0 -> if (Sapl.Linker.SaplLinkerShared.isGlobalFunction name_2_0) (Sapl.Linker.SaplLinkerShared.generate_dependencies ts_1_1 (_predefined._Cons name_2_0 ds_1)) (Sapl.Linker.SaplLinkerShared.generate_dependencies ts_1_1 ds_1)) (_ -> Sapl.Linker.SaplLinkerShared.generate_dependencies ts_1_1 ds_1)) (_predefined._Nil -> ds_1) 
Sapl.Linker.SaplLinkerShared.foldl_34 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_34 op_0 (op_0 r_1 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.skip_arguments_22 !_x_0 = select _x_0 (_predefined._Cons _x_1_0 ts_1_1 -> select _x_1_0 (Sapl.SaplTokenizer.TIdentifier _x_2_0 -> Sapl.Linker.SaplLinkerShared.skip_arguments_22 ts_1_1) (Sapl.SaplTokenizer.TStrictIdentifier _x_2_0 -> Sapl.Linker.SaplLinkerShared.skip_arguments_22 ts_1_1) ) (_ -> _x_0)
Sapl.Linker.SaplLinkerShared.macroTokens_24 !_x_0 = select _x_0 (Sapl.SaplTokenizer.TComment _x_1_0 -> False) (Sapl.SaplTokenizer.TEndOfLine -> False) (_ -> True)
Sapl.Linker.SaplLinkerShared.macroBody__21 !_vtoString_0 !_x_1 a_2 = select _x_1 (_predefined._Cons t_1_0 _x_1_1 -> select _x_1_1 (_predefined._Nil -> <{Text.StringAppender.<++_5}> a_2 (StdOverloaded.get_toString_25 _vtoString_0 t_1_0)) (_ -> <{Text.StringAppender.<++_5}> (<{Text.StringAppender.<++_5}> a_2 (StdOverloaded.get_toString_25 _vtoString_0 t_1_0)) " ")) (_predefined._Nil -> a_2) 
Sapl.Linker.SaplLinkerShared.macroBody__123 !_x_0 a_1 = select _x_0 (_predefined._Cons t_1_0 _x_1_1 -> select _x_1_1 (_predefined._Nil -> <{Text.StringAppender.<++_5}> a_1 (Sapl.SaplTokenizer.toString_4 t_1_0)) (_ -> <{Text.StringAppender.<++_5}> (<{Text.StringAppender.<++_5}> a_1 (Sapl.SaplTokenizer.toString_4 t_1_0)) " ")) (_predefined._Nil -> a_1) 
Sapl.Linker.SaplLinkerShared.macroBody_23 !ts_0 = Text.StringAppender.toString_4 (Sapl.Linker.SaplLinkerShared.macroBody__123 (StdList.filter Sapl.Linker.SaplLinkerShared.macroTokens_24 ts_0) Text.StringAppender.newAppender)
Sapl.Linker.SaplLinkerShared.unpackName !_x_0 = select _x_0 (Sapl.SaplTokenizer.TIdentifier name_1_0 -> name_1_0) (_ -> "")
Sapl.Linker.SaplLinkerShared.skip_to_next_const_25 !_x_0 = select _x_0 (_predefined._Cons _x_1_0 ts_1_1 -> select _x_1_0 (Sapl.SaplTokenizer.TVerticalBar -> ts_1_1) (_ -> Sapl.Linker.SaplLinkerShared.skip_to_next_const_25 ts_1_1)) (_predefined._Nil -> _predefined._Nil) 
Sapl.Linker.SaplLinkerShared.parse_ADT !_x_0 fn_1 !lmap_2 = select _x_0 (_predefined._Cons _x_1_0 ts_1_1 -> select _x_1_0 (Sapl.SaplTokenizer.TIdentifier name_2_0 -> Sapl.Linker.SaplLinkerShared.parse_ADT (Sapl.Linker.SaplLinkerShared.skip_to_next_const_25 ts_1_1) fn_1 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_2_0 (Sapl.Linker.SaplLinkerShared.LT_REDIRECT fn_1) lmap_2)) (_ -> lmap_2)) (_predefined._Nil -> lmap_2) 
Sapl.Linker.SaplLinkerShared.parse_record !_x_0 fn_1 !lmap_2 = select _x_0 (_predefined._Cons _x_1_0 ts_1_1 -> select _x_1_0 (Sapl.SaplTokenizer.TIdentifier name_2_0 -> Sapl.Linker.SaplLinkerShared.parse_record ts_1_1 fn_1 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_2_0 (Sapl.Linker.SaplLinkerShared.LT_REDIRECT fn_1) lmap_2)) (_ -> Sapl.Linker.SaplLinkerShared.parse_record ts_1_1 fn_1 lmap_2)) (_predefined._Nil -> lmap_2) 
Sapl.Linker.SaplLinkerShared.read_line !_x_0 !line_1 = select _x_0 (_Tuple3 lmap_1_0 startfn_1_1 id_1_2 -> let ts_2_0 = Sapl.SaplTokenizer.tokens line_1 in <{Sapl.Linker.SaplLinkerShared._c;63;7_135}> (StdList.hd ts_2_0) ts_2_0 line_1 lmap_1_0 id_1_2 startfn_1_1) 
<{Sapl.Linker.SaplLinkerShared._c;63;7_135}> !_x_0 ts_1 line_2 lmap_3 id_4 startfn_5 = select _x_0 (Sapl.SaplTokenizer.TTypeDef -> let next_2_0 = StdList.tl ts_1, next_2_1 = StdList.tl next_2_0, next_2_2 = StdList.tl next_2_1 in _Tuple3 (<{Sapl.Linker.SaplLinkerShared._c;69;26_131}> (StdList.hd next_2_2) next_2_0 next_2_2 line_2 lmap_3 id_4) startfn_5 (<{StdInt.+_6}> id_4 1)) (Sapl.SaplTokenizer.TIdentifier name_1_0 -> _Tuple3 (<{Sapl.Linker.SaplLinkerShared._c;81;26_132}> (Sapl.Linker.SaplLinkerShared.skip_arguments_22 (StdList.tl ts_1)) lmap_3 name_1_0 line_2) (<{Sapl.Linker.SaplLinkerShared._if;91;26_134}> (Sapl.Linker.SaplLinkerShared._f133_133 (Data.Maybe.isNothing startfn_5) name_1_0) name_1_0 startfn_5) (<{StdInt.+_6}> id_4 1)) (_ -> _Tuple3 lmap_3 startfn_5 (<{StdInt.+_6}> id_4 1))
<{Sapl.Linker.SaplLinkerShared._if;91;26_134}> !_x_0 name_1 startfn_2 = select _x_0 (True -> Data.Maybe.Just name_1) (_ -> startfn_2)
Sapl.Linker.SaplLinkerShared._f133_133 !_x_0 name_1 = select _x_0 (True -> Sapl.FastString.endsWith ".Start" name_1) (_ -> False)
<{Sapl.Linker.SaplLinkerShared._c;81;26_132}> !_x_0 !lmap_1 name_2 line_3 = select _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Sapl.SaplTokenizer.TAssignmentOp -> select _x_1_1 (_predefined._Cons _x_3_0 _x_3_1 -> select _x_3_0 (Sapl.SaplTokenizer.TIdentifier _x_4_0 -> select _x_4_0 ("StdMisc.undef" -> lmap_1) ) ) (_ -> Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_2 (Sapl.Linker.SaplLinkerShared.LT_FUNC line_3 (Sapl.Linker.SaplLinkerShared.DT_NEED_PROCESS _x_1_1)) lmap_1)) (Sapl.SaplTokenizer.TCAFAssignmentOp -> Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_2 (Sapl.Linker.SaplLinkerShared.LT_FUNC line_3 (Sapl.Linker.SaplLinkerShared.DT_NEED_PROCESS _x_1_1)) lmap_1) (Sapl.SaplTokenizer.TMacroAssignmentOp -> Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_2 (Sapl.Linker.SaplLinkerShared.LT_MACRO (Sapl.Linker.SaplLinkerShared.macroBody_23 _x_1_1) (Sapl.Linker.SaplLinkerShared.DT_NEED_PROCESS _x_1_1)) lmap_1) ) (_ -> lmap_1)
<{Sapl.Linker.SaplLinkerShared._c;69;26_131}> !_x_0 next_1 !next_2 line_3 !lmap_4 id_5 = select _x_0 (Sapl.SaplTokenizer.TOpenBracket -> let type_name_2_0 = Sapl.Linker.SaplLinkerShared.unpackName (StdList.hd next_1) in Sapl.Linker.SaplLinkerShared.parse_record (StdList.tl next_2) type_name_2_0 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) type_name_2_0 (Sapl.Linker.SaplLinkerShared.LT_FUNC line_3 Sapl.Linker.SaplLinkerShared.DT_NO_DEPENDENCY) lmap_4)) (_ -> let tid_1_0 = <{StdString.+++_11}> "_" (StdString.toString_5 id_5) in Sapl.Linker.SaplLinkerShared.parse_ADT next_2 tid_1_0 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) tid_1_0 (Sapl.Linker.SaplLinkerShared.LT_FUNC line_3 Sapl.Linker.SaplLinkerShared.DT_NO_DEPENDENCY) lmap_4))
Sapl.Linker.SaplLinkerShared.foldl_124 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_124 (Sapl.Linker.SaplLinkerShared.read_line r_0 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.read_module !m_0 lmap_1 messages_2 id_3 !world_4 = let _x_1_0 = System.File.readFileLines (<{StdFile.FileSystem;}> StdFile.fclose_30 StdFile.fopen_31 StdFile.sfopen_32 StdFile.stdio_33) m_0 world_4, res_1_1 = _predefined.tupsels2v0 _x_1_0 in if (Data.Error.isOk res_1_1) (let _x_2_0 = Sapl.Linker.SaplLinkerShared.foldl_124 (_Tuple3 lmap_1 (Data.Maybe.Just "dummy") id_3) (Data.Error.fromOk res_1_1) in _Tuple4 (_predefined.tupsels3v0 _x_2_0) (_predefined.tupsels3v2 _x_2_0) messages_2 (_predefined.tupsels2v1 _x_1_0)) (_Tuple4 lmap_1 id_3 (_predefined._Cons (<{StdString.+++_11}> "Warning: " (<{StdString.+++_11}> m_0 " not found.")) messages_2) (_predefined.tupsels2v1 _x_1_0))
Sapl.Linker.SaplLinkerShared.foldl_36 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_36 op_0 (op_0 r_1 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.foldl_35 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_35 op_0 (op_0 r_1 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.gendep_29 fn_0 !_x_1 = select _x_1 (Sapl.Linker.SaplLinkerShared.DT_NO_DEPENDENCY -> _predefined._Nil) (Sapl.Linker.SaplLinkerShared.DT_NEED_PROCESS ts_1_0 -> StdList.removeMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) fn_0 (StdList.removeDup (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) (Sapl.Linker.SaplLinkerShared.generate_dependencies ts_1_0 _predefined._Nil))) 
Sapl.Linker.SaplLinkerShared.load_dependencies !lmap_0 !_x_1 !mlines_2 !_x_3 world_4 = select _x_1 (_predefined._Cons m_1_0 ms_1_1 -> select _x_3 (_Tuple2 lf_2_0 ls_2_1 -> let _x_3_0 = lf_2_0 ls_2_1 m_1_0 lmap_0 world_4 in Sapl.Linker.SaplLinkerShared.load_dependencies (_predefined.tupsels4v1 _x_3_0) ms_1_1 (_predefined._Cons (_Tuple2 m_1_0 (_predefined.tupsels4v0 _x_3_0)) mlines_2) (_Tuple2 lf_2_0 (_predefined.tupsels4v2 _x_3_0)) (_predefined.tupsels4v3 _x_3_0)) ) (_predefined._Nil -> <{_Tuple4!15}> lmap_0 mlines_2 _x_3 world_4) 
Sapl.Linker.SaplLinkerShared.is_macro_33 !_x_0 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_1 (Data.Maybe.Just _x_2_0 -> select _x_2_0 (Sapl.Linker.SaplLinkerShared.LT_MACRO _x_3_0 _x_3_1 -> True) ) ) (_ -> False)
Sapl.Linker.SaplLinkerShared.anon_30 !_x_0 = select _x_0 (_Tuple2 name_1_0 _x_1_1 -> select _x_1_1 (Data.Maybe.Just _x_2_0 -> select _x_2_0 (Sapl.Linker.SaplLinkerShared.LT_MACRO body_3_0 _x_3_1 -> _Tuple2 name_1_0 body_3_0) ) ) 
Sapl.Linker.SaplLinkerShared.trythem_32 !<{_v==_0}> what_1 !_x_2 = select _x_2 (_predefined._Cons _x_1_0 ms_1_1 -> select _x_1_0 (_Tuple2 macroname_2_0 body_2_1 -> if (<{StdOverloaded.get_==_6}> <{_v==_0}> what_1 macroname_2_0) (Data.Maybe.Just body_2_1) (Sapl.Linker.SaplLinkerShared.trythem_32 <{_v==_0}> what_1 ms_1_1)) ) (_predefined._Nil -> Data.Maybe.Nothing) 
Sapl.Linker.SaplLinkerShared.trythem_125 what_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 ms_1_1 -> select _x_1_0 (_Tuple2 macroname_2_0 body_2_1 -> if (<{StdString.==_2}> what_0 macroname_2_0) (Data.Maybe.Just body_2_1) (Sapl.Linker.SaplLinkerShared.trythem_125 what_0 ms_1_1)) ) (_predefined._Nil -> Data.Maybe.Nothing) 
Sapl.Linker.SaplLinkerShared.substitute_macros__31 !_vAppendable_0 !line_1 macros_2 !base_3 last_4 a_5 = if (<{StdInt.<_17}> base_3 (_SystemArray.size_20 line_1)) (let _x_1_0 = Sapl.SaplTokenizer.read_token base_3 line_1, newbase_1_1 = _predefined.tupsels3v1 _x_1_0, start_1_2 = _predefined.tupsels3v0 _x_1_0 in <{Sapl.Linker.SaplLinkerShared._c;200;19_137}> (_predefined.tupsels3v2 _x_1_0) macros_2 _vAppendable_0 line_1 newbase_1_1 a_5 last_4 start_1_2) (<{Text.StringAppender.<++_5}> a_5 (<{StdString.%_10}> line_1 (_Tuple2 last_4 (_SystemArray.size_20 line_1))))
<{Sapl.Linker.SaplLinkerShared._c;200;19_137}> !_x_0 macros_1 !_vAppendable_2 !line_3 !newbase_4 a_5 last_6 start_7 = select _x_0 (Sapl.SaplTokenizer.TIdentifier name_1_0 -> <{Sapl.Linker.SaplLinkerShared._c;201;42_136}> (Sapl.Linker.SaplLinkerShared.trythem_125 name_1_0 macros_1) _vAppendable_2 line_3 macros_1 newbase_4 a_5 last_6 start_7) (_ -> Sapl.Linker.SaplLinkerShared.substitute_macros__31 _vAppendable_2 line_3 macros_1 newbase_4 last_6 a_5)
<{Sapl.Linker.SaplLinkerShared._c;201;42_136}> !_x_0 !_vAppendable_1 !line_2 macros_3 !newbase_4 a_5 last_6 start_7 = select _x_0 (Data.Maybe.Just body_1_0 -> Sapl.Linker.SaplLinkerShared.substitute_macros__31 _vAppendable_1 line_2 macros_3 newbase_4 newbase_4 (<{Text.StringAppender.get_<++_0}> _vAppendable_1 (<{Text.StringAppender.<++_5}> a_5 (<{StdString.%_10}> line_2 (_Tuple2 last_6 (<{StdInt.-_7}> start_7 1)))) body_1_0)) (_ -> Sapl.Linker.SaplLinkerShared.substitute_macros__31 _vAppendable_1 line_2 macros_3 newbase_4 last_6 a_5)
Sapl.Linker.SaplLinkerShared.substitute_macros__126 !line_0 macros_1 !base_2 last_3 a_4 = if (<{StdInt.<_17}> base_2 (_SystemArray.size_20 line_0)) (let _x_1_0 = Sapl.SaplTokenizer.read_token base_2 line_0, newbase_1_1 = _predefined.tupsels3v1 _x_1_0, start_1_2 = _predefined.tupsels3v0 _x_1_0 in <{Sapl.Linker.SaplLinkerShared._c;200;19_139}> (_predefined.tupsels3v2 _x_1_0) macros_1 line_0 newbase_1_1 a_4 last_3 start_1_2) (<{Text.StringAppender.<++_5}> a_4 (<{StdString.%_10}> line_0 (_Tuple2 last_3 (_SystemArray.size_20 line_0))))
<{Sapl.Linker.SaplLinkerShared._c;200;19_139}> !_x_0 macros_1 !line_2 !newbase_3 a_4 last_5 start_6 = select _x_0 (Sapl.SaplTokenizer.TIdentifier name_1_0 -> <{Sapl.Linker.SaplLinkerShared._c;201;42_138}> (Sapl.Linker.SaplLinkerShared.trythem_125 name_1_0 macros_1) line_2 macros_1 newbase_3 a_4 last_5 start_6) (_ -> Sapl.Linker.SaplLinkerShared.substitute_macros__126 line_2 macros_1 newbase_3 last_5 a_4)
<{Sapl.Linker.SaplLinkerShared._c;201;42_138}> !_x_0 !line_1 macros_2 !newbase_3 a_4 last_5 start_6 = select _x_0 (Data.Maybe.Just body_1_0 -> Sapl.Linker.SaplLinkerShared.substitute_macros__126 line_1 macros_2 newbase_3 newbase_3 (<{Text.StringAppender.<++_5}> (<{Text.StringAppender.<++_5}> a_4 (<{StdString.%_10}> line_1 (_Tuple2 last_5 (<{StdInt.-_7}> start_6 1)))) body_1_0)) (_ -> Sapl.Linker.SaplLinkerShared.substitute_macros__126 line_1 macros_2 newbase_3 last_5 a_4)
Sapl.Linker.SaplLinkerShared.substitute_macros !lmap_0 !deps_1 !loader_2 !line_3 !a_4 !world_5 = let _x_1_0 = Sapl.Linker.SaplLinkerShared.load_dependencies lmap_0 deps_1 _predefined._Nil loader_2 world_5, depbodies_1_1 = _predefined.tupsels4v1 _x_1_0, macros_1_2 = StdList.map Sapl.Linker.SaplLinkerShared.anon_30 (StdList.filter Sapl.Linker.SaplLinkerShared.is_macro_33 depbodies_1_1) in <{_Tuple4!15}> (_predefined.tupsels4v0 _x_1_0) (_predefined.tupsels4v2 _x_1_0) (<{Sapl.Linker.SaplLinkerShared._c;191;15_140}> (StdList.isEmpty macros_1_2) a_4 line_3 macros_1_2) (_predefined.tupsels4v3 _x_1_0)
<{Sapl.Linker.SaplLinkerShared._c;191;15_140}> !_x_0 a_1 line_2 macros_3 = select _x_0 (True -> <{Text.StringAppender.<++_5}> a_1 line_2) (_ -> Sapl.Linker.SaplLinkerShared.substitute_macros__126 line_2 macros_3 0 0 a_1)
Sapl.Linker.SaplLinkerShared.anon_26 !_x_0 !t_1 = select _x_0 (_Tuple5 lmap_1_0 skipset_1_1 loader_1_2 a_1_3 world_1_4 -> Sapl.Linker.SaplLinkerShared.generate_source lmap_1_0 skipset_1_1 loader_1_2 t_1 a_1_3 world_1_4) 
Sapl.Linker.SaplLinkerShared.foldl_127 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_127 (Sapl.Linker.SaplLinkerShared.anon_26 r_0 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.anon_27 !_x_0 !t_1 = select _x_0 (_Tuple5 lmap_1_0 skipset_1_1 loader_1_2 a_1_3 world_1_4 -> Sapl.Linker.SaplLinkerShared.generate_source lmap_1_0 skipset_1_1 loader_1_2 t_1 a_1_3 world_1_4) 
Sapl.Linker.SaplLinkerShared.foldl_128 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_128 (Sapl.Linker.SaplLinkerShared.anon_27 r_0 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.generate_source__28 lmap_0 skipset_1 !loader_2 fn_3 !_x_4 a_5 world_6 = select _x_4 (Data.Maybe.Just _x_1_0 -> select _x_1_0 (Sapl.Linker.SaplLinkerShared.LT_REDIRECT name_2_0 -> let skipset_3_0 = Data.Set.insert (<{StdOverloaded.<;}> <{StdString.<_3}>) (<{StdOverloaded.==;}> <{StdString.==_2}>) fn_3 skipset_1 in Sapl.Linker.SaplLinkerShared.generate_source__28 lmap_0 skipset_3_0 loader_2 name_2_0 (<{Sapl.Linker.SaplLinkerShared._if;144;18_142}> (Data.Set.member (<{StdOverloaded.<;}> <{StdString.<_3}>) (<{StdOverloaded.==;}> <{StdString.==_2}>) name_2_0 skipset_3_0) name_2_0 lmap_0) a_5 world_6) (Sapl.Linker.SaplLinkerShared.LT_FUNC line_2_0 dt_2_1 -> select loader_2 (_Tuple2 lf_3_0 ls_3_1 -> let deps_4_0 = Sapl.Linker.SaplLinkerShared.gendep_29 fn_3 dt_2_1, _x_4_1 = Sapl.Linker.SaplLinkerShared.substitute_macros lmap_0 deps_4_0 (_Tuple2 lf_3_0 ls_3_1) line_2_0 a_5 world_6, _x_4_2 = _predefined.tupsels4v1 _x_4_1 in Sapl.Linker.SaplLinkerShared.foldl_127 (_Tuple5 (_predefined.tupsels4v0 _x_4_1) (Data.Set.insert (<{StdOverloaded.<;}> <{StdString.<_3}>) (<{StdOverloaded.==;}> <{StdString.==_2}>) fn_3 skipset_1) (_Tuple2 (_predefined.tupsels2v0 _x_4_2) (_predefined.tupsels2v1 _x_4_2)) (_predefined.tupsels4v2 _x_4_1) (_predefined.tupsels4v3 _x_4_1)) deps_4_0) ) (Sapl.Linker.SaplLinkerShared.LT_MACRO _x_2_0 _x_2_1 -> select _x_2_1 (Sapl.Linker.SaplLinkerShared.DT_NO_DEPENDENCY -> <{_Tuple5!31}> lmap_0 skipset_1 loader_2 a_5 world_6) (_ -> let _x_3_0 = Sapl.Linker.SaplLinkerShared.foldl_128 (_Tuple5 lmap_0 skipset_1 loader_2 a_5 world_6) (Sapl.Linker.SaplLinkerShared.gendep_29 fn_3 _x_2_1) in <{_Tuple5!31}> (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) fn_3 (Sapl.Linker.SaplLinkerShared.LT_MACRO _x_2_0 Sapl.Linker.SaplLinkerShared.DT_NO_DEPENDENCY) (_predefined.tupsels5v0 _x_3_0)) (_predefined.tupsels5v1 _x_3_0) (_predefined.tupsels5v2 _x_3_0) (_predefined.tupsels5v3 _x_3_0) (_predefined.tupsels5v4 _x_3_0))) ) (Data.Maybe.Nothing -> <{_Tuple5!31}> lmap_0 skipset_1 loader_2 a_5 world_6) 
Sapl.Linker.SaplLinkerShared.generate_source !lmap_0 !skipset_1 !loader_2 !fn_3 !a_4 !world_5 = select loader_2 (_Tuple2 lf_1_0 ls_1_1 -> let _x_2_0 = <{Sapl.Linker.SaplLinkerShared._if;135;33_141}> (Data.Set.member (<{StdOverloaded.<;}> <{StdString.<_3}>) (<{StdOverloaded.==;}> <{StdString.==_2}>) fn_3 skipset_1) lmap_0 ls_1_1 world_5 lf_1_0 fn_3 in Sapl.Linker.SaplLinkerShared.generate_source__28 (_predefined.tupsels4v1 _x_2_0) skipset_1 (_Tuple2 lf_1_0 (_predefined.tupsels4v2 _x_2_0)) fn_3 (_predefined.tupsels4v0 _x_2_0) a_4 (_predefined.tupsels4v3 _x_2_0)) 
<{Sapl.Linker.SaplLinkerShared._if;144;18_142}> !_x_0 name_1 lmap_2 = select _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Map.get (<{StdOverloaded.<;}> <{StdString.<_3}>) name_1 lmap_2)
<{Sapl.Linker.SaplLinkerShared._if;135;33_141}> !_x_0 lmap_1 ls_2 world_3 lf_4 fn_5 = select _x_0 (True -> _Tuple4 Data.Maybe.Nothing lmap_1 ls_2 world_3) (_ -> lf_4 ls_2 fn_5 lmap_1 world_3)
Sapl.Linker.SaplLinkerShared.foldl_37 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_37 op_0 (op_0 r_1 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.foldl_129 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Linker.SaplLinkerShared.foldl_129 (Sapl.Linker.SaplLinkerShared.read_line r_0 a_1_0) x_1_1) 
Sapl.Linker.SaplLinkerShared.read_modules__20 !_vFileSystem_0 !_x_1 lmap_2 messages_3 startfn_4 id_5 world_6 = select _x_1 (_predefined._Cons m_1_0 ms_1_1 -> let _x_2_0 = System.File.readFileLines _vFileSystem_0 m_1_0 world_6, res_2_1 = _predefined.tupsels2v0 _x_2_0 in if (Data.Error.isOk res_2_1) (let _x_3_0 = Sapl.Linker.SaplLinkerShared.foldl_129 (_Tuple3 lmap_2 startfn_4 id_5) (Data.Error.fromOk res_2_1) in Sapl.Linker.SaplLinkerShared.read_modules__20 _vFileSystem_0 ms_1_1 (_predefined.tupsels3v0 _x_3_0) messages_3 (_predefined.tupsels3v1 _x_3_0) (_predefined.tupsels3v2 _x_3_0) (_predefined.tupsels2v1 _x_2_0)) (Sapl.Linker.SaplLinkerShared.read_modules__20 _vFileSystem_0 ms_1_1 lmap_2 (_predefined._Cons (<{StdString.+++_11}> "Warning: " (<{StdString.+++_11}> m_1_0 " not found.")) messages_3) startfn_4 id_5 (_predefined.tupsels2v1 _x_2_0))) (_predefined._Nil -> _Tuple4 lmap_2 messages_3 startfn_4 world_6) 
Sapl.Linker.SaplLinkerShared.read_modules__130 !_x_0 lmap_1 messages_2 startfn_3 id_4 world_5 = select _x_0 (_predefined._Cons m_1_0 ms_1_1 -> let _x_2_0 = System.File.readFileLines (<{StdFile.FileSystem;}> StdFile.fclose_30 StdFile.fopen_31 StdFile.sfopen_32 StdFile.stdio_33) m_1_0 world_5, res_2_1 = _predefined.tupsels2v0 _x_2_0 in if (Data.Error.isOk res_2_1) (let _x_3_0 = Sapl.Linker.SaplLinkerShared.foldl_129 (_Tuple3 lmap_1 startfn_3 id_4) (Data.Error.fromOk res_2_1) in Sapl.Linker.SaplLinkerShared.read_modules__130 ms_1_1 (_predefined.tupsels3v0 _x_3_0) messages_2 (_predefined.tupsels3v1 _x_3_0) (_predefined.tupsels3v2 _x_3_0) (_predefined.tupsels2v1 _x_2_0)) (Sapl.Linker.SaplLinkerShared.read_modules__130 ms_1_1 lmap_1 (_predefined._Cons (<{StdString.+++_11}> "Warning: " (<{StdString.+++_11}> m_1_0 " not found.")) messages_2) startfn_3 id_4 (_predefined.tupsels2v1 _x_2_0))) (_predefined._Nil -> _Tuple4 lmap_1 messages_2 startfn_3 world_5) 
Sapl.Linker.SaplLinkerShared.read_modules !_x_0 llmap_1 messages_2 !world_3 = select _x_0 (_predefined._Cons m_1_0 ms_1_1 -> Sapl.Linker.SaplLinkerShared.read_modules__130 (_predefined._Cons m_1_0 ms_1_1) llmap_1 messages_2 Data.Maybe.Nothing 0 world_3) 
Sapl.Linker.SaplLinkerShared.toString_4 !_x_0 = select _x_0 (Sapl.Linker.SaplLinkerShared.LT_REDIRECT name_1_0 -> name_1_0) (Sapl.Linker.SaplLinkerShared.LT_FUNC line_1_0 _x_1_1 -> line_1_0) (Sapl.Linker.SaplLinkerShared.LT_MACRO line_1_0 _x_1_1 -> line_1_0) 
<{Sapl.Linker.SaplLinkerShared.TD;LineType}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;DependencyType}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;FuncTypeMap}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;IdGenerator}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;Warnings}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;LoaderFunction}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;Loader}> _x_0 = _predefined._Nil
<{Sapl.Linker.SaplLinkerShared.TD;SkipSet}> _x_0 = _predefined._Nil

:: Sapl.Linker.SaplLinkerShared.LineType = Sapl.Linker.SaplLinkerShared.LT_REDIRECT a1 | Sapl.Linker.SaplLinkerShared.LT_FUNC a1 a2 | Sapl.Linker.SaplLinkerShared.LT_MACRO a1 a2
:: Sapl.Linker.SaplLinkerShared.DependencyType = Sapl.Linker.SaplLinkerShared.DT_NO_DEPENDENCY | Sapl.Linker.SaplLinkerShared.DT_NEED_PROCESS a1

|| Converted Records
:: <{Sapl.Linker.SaplLinkerShared.JSONEncode_s;}> = {!Sapl.Linker.SaplLinkerShared.JSONEncode_s}
Sapl.Linker.SaplLinkerShared.get_JSONEncode_s_0 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_s;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONEncode_s_0 rec !val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_s;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONEncode_s;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONEncode_ss;}> = {Sapl.Linker.SaplLinkerShared.JSONEncode_ss}
Sapl.Linker.SaplLinkerShared.get_JSONEncode_ss_1 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_ss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONEncode_ss_1 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_ss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONEncode_ss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONEncode_sss;}> = {Sapl.Linker.SaplLinkerShared.JSONEncode_sss}
Sapl.Linker.SaplLinkerShared.get_JSONEncode_sss_2 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_sss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONEncode_sss_2 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_sss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONEncode_sss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONEncode_ssss;}> = {Sapl.Linker.SaplLinkerShared.JSONEncode_ssss}
Sapl.Linker.SaplLinkerShared.get_JSONEncode_ssss_3 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_ssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONEncode_ssss_3 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_ssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONEncode_ssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONEncode_sssss;}> = {Sapl.Linker.SaplLinkerShared.JSONEncode_sssss}
Sapl.Linker.SaplLinkerShared.get_JSONEncode_sssss_4 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_sssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONEncode_sssss_4 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_sssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONEncode_sssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONEncode_ssssss;}> = {Sapl.Linker.SaplLinkerShared.JSONEncode_ssssss}
Sapl.Linker.SaplLinkerShared.get_JSONEncode_ssssss_5 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_ssssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONEncode_ssssss_5 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONEncode_ssssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONEncode_ssssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONDecode_s;}> = {Sapl.Linker.SaplLinkerShared.JSONDecode_s}
Sapl.Linker.SaplLinkerShared.get_JSONDecode_s_6 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_s;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONDecode_s_6 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_s;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONDecode_s;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONDecode_ss;}> = {Sapl.Linker.SaplLinkerShared.JSONDecode_ss}
Sapl.Linker.SaplLinkerShared.get_JSONDecode_ss_7 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_ss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONDecode_ss_7 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_ss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONDecode_ss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONDecode_sss;}> = {Sapl.Linker.SaplLinkerShared.JSONDecode_sss}
Sapl.Linker.SaplLinkerShared.get_JSONDecode_sss_8 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_sss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONDecode_sss_8 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_sss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONDecode_sss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONDecode_ssss;}> = {Sapl.Linker.SaplLinkerShared.JSONDecode_ssss}
Sapl.Linker.SaplLinkerShared.get_JSONDecode_ssss_9 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_ssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONDecode_ssss_9 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_ssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONDecode_ssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONDecode_sssss;}> = {Sapl.Linker.SaplLinkerShared.JSONDecode_sssss}
Sapl.Linker.SaplLinkerShared.get_JSONDecode_sssss_10 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_sssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONDecode_sssss_10 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_sssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONDecode_sssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.JSONDecode_ssssss;}> = {Sapl.Linker.SaplLinkerShared.JSONDecode_ssssss}
Sapl.Linker.SaplLinkerShared.get_JSONDecode_ssssss_11 rec = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_ssssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_JSONDecode_ssssss_11 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.JSONDecode_ssssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.JSONDecode_ssssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.bimap_s;}> = {Sapl.Linker.SaplLinkerShared.bimap_s}
Sapl.Linker.SaplLinkerShared.get_bimap_s_12 rec = select rec (<{Sapl.Linker.SaplLinkerShared.bimap_s;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_bimap_s_12 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.bimap_s;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.bimap_s;}> val)

:: <{Sapl.Linker.SaplLinkerShared.bimap_ss;}> = {Sapl.Linker.SaplLinkerShared.bimap_ss}
Sapl.Linker.SaplLinkerShared.get_bimap_ss_13 rec = select rec (<{Sapl.Linker.SaplLinkerShared.bimap_ss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_bimap_ss_13 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.bimap_ss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.bimap_ss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.bimap_sss;}> = {Sapl.Linker.SaplLinkerShared.bimap_sss}
Sapl.Linker.SaplLinkerShared.get_bimap_sss_14 rec = select rec (<{Sapl.Linker.SaplLinkerShared.bimap_sss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_bimap_sss_14 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.bimap_sss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.bimap_sss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_s;}> = {Sapl.Linker.SaplLinkerShared.gEq_s}
Sapl.Linker.SaplLinkerShared.get_gEq_s_15 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_s;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_s_15 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_s;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_s;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_ss;}> = {Sapl.Linker.SaplLinkerShared.gEq_ss}
Sapl.Linker.SaplLinkerShared.get_gEq_ss_16 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_ss_16 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_ss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_sss;}> = {Sapl.Linker.SaplLinkerShared.gEq_sss}
Sapl.Linker.SaplLinkerShared.get_gEq_sss_17 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_sss_17 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_sss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_ssss;}> = {Sapl.Linker.SaplLinkerShared.gEq_ssss}
Sapl.Linker.SaplLinkerShared.get_gEq_ssss_18 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_ssss_18 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_ssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_sssss;}> = {Sapl.Linker.SaplLinkerShared.gEq_sssss}
Sapl.Linker.SaplLinkerShared.get_gEq_sssss_19 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_sssss_19 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_sssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_ssssss;}> = {Sapl.Linker.SaplLinkerShared.gEq_ssssss}
Sapl.Linker.SaplLinkerShared.get_gEq_ssssss_20 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ssssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_ssssss_20 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ssssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_ssssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_sssssss;}> = {Sapl.Linker.SaplLinkerShared.gEq_sssssss}
Sapl.Linker.SaplLinkerShared.get_gEq_sssssss_21 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sssssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_sssssss_21 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sssssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_sssssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_ssssssss;}> = {Sapl.Linker.SaplLinkerShared.gEq_ssssssss}
Sapl.Linker.SaplLinkerShared.get_gEq_ssssssss_22 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ssssssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_ssssssss_22 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_ssssssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_ssssssss;}> val)

:: <{Sapl.Linker.SaplLinkerShared.gEq_sssssssss;}> = {Sapl.Linker.SaplLinkerShared.gEq_sssssssss}
Sapl.Linker.SaplLinkerShared.get_gEq_sssssssss_23 rec = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sssssssss;}> a1 -> a1)
Sapl.Linker.SaplLinkerShared.set_gEq_sssssssss_23 rec val = select rec (<{Sapl.Linker.SaplLinkerShared.gEq_sssssssss;}>  a1 -> <{Sapl.Linker.SaplLinkerShared.gEq_sssssssss;}> val)

