|| ?module? Sapl.Target.Flavour


Sapl.Target.Flavour.findField_59 !<{_v==_0}> match_1 !_x_2 = select _x_2 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> if (<{StdOverloaded.get_==_6}> <{_v==_0}> l_2_0 match_1) (_predefined._Cons x_2_1 _predefined._Nil) (Sapl.Target.Flavour.findField_59 <{_v==_0}> match_1 xs_1_1)) ) (_predefined._Nil -> _predefined._Nil) 
Sapl.Target.Flavour.findField_149 match_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> if (<{StdString.==_2}> l_2_0 match_0) (_predefined._Cons x_2_1 _predefined._Nil) (Sapl.Target.Flavour.findField_149 match_0 xs_1_1)) ) (_predefined._Nil -> _predefined._Nil) 
Sapl.Target.Flavour.JSONDecode_FIELD_58 gfd_name_0 fx_1 !_x_2 !l_3 = select l_3 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Text.JSON.JSONObject fields_2_0 -> select _x_1_1 (_predefined._Nil -> <{Sapl.Target.Flavour._c;123;7_202}> (fx_1 True (Sapl.Target.Flavour.findField_149 gfd_name_0 fields_2_0)) l_3) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
<{Sapl.Target.Flavour._c;123;7_202}> !_x_0 !l_1 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.FIELD x_2_0)) l_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)) 
Sapl.Target.Flavour.d2_57 x_0 !_x_1 l_2 = select _x_1 (_Tuple2 _x_1_0 ys_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> _Tuple2 (Data.Maybe.Just (StdGeneric.PAIR x_0 y_2_0)) ys_1_1) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Sapl.Target.Flavour.d1_56 fy_0 !_x_1 l_2 = select _x_1 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (fy_0 False xs_1_1) l_2) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_55 !fx_0 fy_1 !_x_2 !l_3 = Sapl.Target.Flavour.d1_56 fy_1 (fx_0 False l_3) l_3
Sapl.Target.Flavour.d_54 !_x_0 xs_1 l_2 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> _Tuple2 (Data.Maybe.Just (StdGeneric.RECORD x_2_0)) xs_1) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Sapl.Target.Flavour.JSONDecode_RECORD_53 fx_0 !_x_1 !l_2 = select l_2 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Sapl.Target.Flavour.d_54 (fx_0 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_2) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
Sapl.Target.Flavour.fromGenericFlavourRep_33 !c_0 = select c_0 (StdGeneric.RECORD c_1_0 -> select c_1_0 (StdGeneric.PAIR c_2_0 c_2_1 -> select c_2_0 (StdGeneric.FIELD x1_3_0 -> select c_2_1 (StdGeneric.PAIR c_4_0 c_4_1 -> select c_4_0 (StdGeneric.FIELD x2_5_0 -> select c_4_1 (StdGeneric.FIELD x3_6_0 -> Sapl.Target.Flavour._FlavourRep x1_3_0 x2_5_0 x3_6_0) ) ) ) ) ) 
Sapl.Target.Flavour.bimapFromGeneric_60 !x_0 = Sapl.Target.Flavour._f203_203 x_0
Sapl.Target.Flavour._f203_203 !x_0 = select x_0 (Data.Maybe.Nothing -> Data.Maybe.Nothing) (Data.Maybe.Just x1_1_0 -> Data.Maybe.Just (Sapl.Target.Flavour.fromGenericFlavourRep_33 x1_1_0)) 
Sapl.Target.Flavour.bimapFromGeneric_61 !x_0 = Sapl.Target.Flavour._f204_204 x_0
Sapl.Target.Flavour._f204_204 !x_0 = select x_0 (_Tuple2 x1_1_0 x2_1_1 -> _Tuple2 (Sapl.Target.Flavour.bimapFromGeneric_60 x1_1_0) x2_1_1) 
Sapl.Target.Flavour.fromGenericBIFRep_44 !c_0 = select c_0 (StdGeneric.RECORD c_1_0 -> select c_1_0 (StdGeneric.PAIR c_2_0 c_2_1 -> select c_2_0 (StdGeneric.PAIR c_3_0 c_3_1 -> select c_3_0 (StdGeneric.FIELD x1_4_0 -> select c_3_1 (StdGeneric.FIELD x2_5_0 -> select c_2_1 (StdGeneric.PAIR c_6_0 c_6_1 -> select c_6_0 (StdGeneric.FIELD x3_7_0 -> select c_6_1 (StdGeneric.PAIR c_8_0 c_8_1 -> select c_8_0 (StdGeneric.FIELD x4_9_0 -> select c_8_1 (StdGeneric.FIELD x5_10_0 -> Sapl.Target.Flavour._BIFRep x1_4_0 x2_5_0 x3_7_0 x4_9_0 x5_10_0) ) ) ) ) ) ) ) ) ) 
Sapl.Target.Flavour.bimapFromGeneric_62 !x_0 = Sapl.Target.Flavour._f205_205 x_0
Sapl.Target.Flavour._f205_205 !x_0 = select x_0 (Data.Maybe.Nothing -> Data.Maybe.Nothing) (Data.Maybe.Just x1_1_0 -> Data.Maybe.Just (Sapl.Target.Flavour.fromGenericBIFRep_44 x1_1_0)) 
Sapl.Target.Flavour.bimapFromGeneric_63 !x_0 = Sapl.Target.Flavour._f206_206 x_0
Sapl.Target.Flavour._f206_206 !x_0 = select x_0 (_Tuple2 x1_1_0 x2_1_1 -> _Tuple2 (Sapl.Target.Flavour.bimapFromGeneric_62 x1_1_0) x2_1_1) 
Sapl.Target.Flavour.JSONDecode_FIELD_153 gfd_name_0 _x_1 !_x_2 !l_3 = select l_3 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Text.JSON.JSONObject fields_2_0 -> select _x_1_1 (_predefined._Nil -> <{Sapl.Target.Flavour._c;123;7_207}> (Text.JSON.JSONDecode_Maybe_47 _x_1 True (Sapl.Target.Flavour.findField_149 gfd_name_0 fields_2_0)) l_3) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
<{Sapl.Target.Flavour._c;123;7_207}> !_x_0 !l_1 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.FIELD x_2_0)) l_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)) 
Sapl.Target.Flavour.JSONDecode_PAIR_154 gfd_name_0 _x_1 fy_2 !_x_3 !l_4 = Sapl.Target.Flavour.d1_56 fy_2 (Sapl.Target.Flavour.JSONDecode_FIELD_153 gfd_name_0 _x_1 False l_4) l_4
Sapl.Target.Flavour.JSONDecode_FIELD_151 gfd_name_0 !_x_1 !l_2 = select l_2 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Text.JSON.JSONObject fields_2_0 -> select _x_1_1 (_predefined._Nil -> <{Sapl.Target.Flavour._c;123;7_208}> (Text.JSON.JSONDecode_Int_31 True (Sapl.Target.Flavour.findField_149 gfd_name_0 fields_2_0)) l_2) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
<{Sapl.Target.Flavour._c;123;7_208}> !_x_0 !l_1 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.FIELD x_2_0)) l_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)) 
Sapl.Target.Flavour.JSONDecode_FIELD_150 gfd_name_0 !_x_1 !l_2 = select l_2 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Text.JSON.JSONObject fields_2_0 -> select _x_1_1 (_predefined._Nil -> <{Sapl.Target.Flavour._c;123;7_209}> (Text.JSON.JSONDecode__String_35 True (Sapl.Target.Flavour.findField_149 gfd_name_0 fields_2_0)) l_2) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
<{Sapl.Target.Flavour._c;123;7_209}> !_x_0 !l_1 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.FIELD x_2_0)) l_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)) 
Sapl.Target.Flavour.JSONDecode_PAIR_152 gfd_name_0 fy_1 !_x_2 !l_3 = Sapl.Target.Flavour.d1_56 fy_1 (Sapl.Target.Flavour.JSONDecode_FIELD_150 gfd_name_0 False l_3) l_3
Sapl.Target.Flavour.JSONDecode_PAIR_155 gfd_name_0 fy_1 fy_2 !_x_3 !l_4 = Sapl.Target.Flavour.d1_56 fy_2 (Sapl.Target.Flavour.JSONDecode_PAIR_152 gfd_name_0 fy_1 False l_4) l_4
Sapl.Target.Flavour.JSONDecode_RECORD_156 gfd_name_0 fy_1 fy_2 !_x_3 !l_4 = select l_4 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Sapl.Target.Flavour.d_54 (Sapl.Target.Flavour.JSONDecode_PAIR_155 gfd_name_0 fy_1 fy_2 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_4) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_4)
Sapl.Target.Flavour.d1_158 gfd_name_0 _x_1 !_x_2 l_3 = select _x_2 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_FIELD_153 gfd_name_0 _x_1 False xs_1_1) l_3) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_3) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_157 gfd_name_0 _x_1 gfd_name_2 _x_3 !_x_4 !l_5 = Sapl.Target.Flavour.d1_158 gfd_name_2 _x_3 (Sapl.Target.Flavour.JSONDecode_FIELD_153 gfd_name_0 _x_1 False l_5) l_5
Sapl.Target.Flavour.d1_160 gfd_name_0 _x_1 gfd_name_2 _x_3 !_x_4 l_5 = select _x_4 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_PAIR_157 gfd_name_0 _x_1 gfd_name_2 _x_3 False xs_1_1) l_5) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_5) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_159 gfd_name_0 _x_1 gfd_name_2 _x_3 gfd_name_4 _x_5 !_x_6 !l_7 = Sapl.Target.Flavour.d1_160 gfd_name_2 _x_3 gfd_name_4 _x_5 (Sapl.Target.Flavour.JSONDecode_FIELD_153 gfd_name_0 _x_1 False l_7) l_7
Sapl.Target.Flavour.d1_164 gfd_name_0 !_x_1 l_2 = select _x_1 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_FIELD_151 gfd_name_0 False xs_1_1) l_2) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_163 gfd_name_0 gfd_name_1 !_x_2 !l_3 = Sapl.Target.Flavour.d1_164 gfd_name_1 (Sapl.Target.Flavour.JSONDecode_FIELD_150 gfd_name_0 False l_3) l_3
Sapl.Target.Flavour.JSONDecode_PAIR_162 gfd_name_0 gfd_name_1 fy_2 !_x_3 !l_4 = Sapl.Target.Flavour.d1_56 fy_2 (Sapl.Target.Flavour.JSONDecode_PAIR_163 gfd_name_0 gfd_name_1 False l_4) l_4
Sapl.Target.Flavour.JSONDecode_RECORD_161 gfd_name_0 gfd_name_1 fy_2 !_x_3 !l_4 = select l_4 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Sapl.Target.Flavour.d_54 (Sapl.Target.Flavour.JSONDecode_PAIR_162 gfd_name_0 gfd_name_1 fy_2 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_4) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_4)
Sapl.Target.Flavour.d1_167 gfd_name_0 _x_1 gfd_name_2 _x_3 gfd_name_4 _x_5 !_x_6 l_7 = select _x_6 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_PAIR_159 gfd_name_0 _x_1 gfd_name_2 _x_3 gfd_name_4 _x_5 False xs_1_1) l_7) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_7) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_166 gfd_name_0 gfd_name_1 gfd_name_2 _x_3 gfd_name_4 _x_5 gfd_name_6 _x_7 !_x_8 !l_9 = Sapl.Target.Flavour.d1_167 gfd_name_2 _x_3 gfd_name_4 _x_5 gfd_name_6 _x_7 (Sapl.Target.Flavour.JSONDecode_PAIR_163 gfd_name_0 gfd_name_1 False l_9) l_9
Sapl.Target.Flavour.JSONDecode_RECORD_165 gfd_name_0 gfd_name_1 gfd_name_2 _x_3 gfd_name_4 _x_5 gfd_name_6 _x_7 !_x_8 !l_9 = select l_9 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Sapl.Target.Flavour.d_54 (Sapl.Target.Flavour.JSONDecode_PAIR_166 gfd_name_0 gfd_name_1 gfd_name_2 _x_3 gfd_name_4 _x_5 gfd_name_6 _x_7 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_9) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_9)
Sapl.Target.Flavour.JSONDecode_BIFRep_22 !x1_0 !x2_1 = Sapl.Target.Flavour.bimapFromGeneric_63 (Sapl.Target.Flavour.JSONDecode_RECORD_165 "sapl_fun" "arity" "data_cons" Text.JSON.JSONDecode_Bool_34 "ext_fun" Text.JSON.JSONDecode__String_35 "inline_exp" Text.JSON.JSONDecode__String_35 x1_0 x2_1)
Sapl.Target.Flavour.JSONDecode_FIELD_168 gfd_name_0 _x_1 !_x_2 !l_3 = select l_3 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Text.JSON.JSONObject fields_2_0 -> select _x_1_1 (_predefined._Nil -> <{Sapl.Target.Flavour._c;123;7_210}> (Text.JSON.JSONDecode__List_40 _x_1 True (Sapl.Target.Flavour.findField_149 gfd_name_0 fields_2_0)) l_3) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
<{Sapl.Target.Flavour._c;123;7_210}> !_x_0 !l_1 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.FIELD x_2_0)) l_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)) 
Sapl.Target.Flavour.JSONDecode_PAIR_169 gfd_name_0 _x_1 fy_2 !_x_3 !l_4 = Sapl.Target.Flavour.d1_56 fy_2 (Sapl.Target.Flavour.JSONDecode_FIELD_168 gfd_name_0 _x_1 False l_4) l_4
Sapl.Target.Flavour.d1_171 gfd_name_0 _x_1 fy_2 !_x_3 l_4 = select _x_3 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_PAIR_169 gfd_name_0 _x_1 fy_2 False xs_1_1) l_4) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_4) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_170 gfd_name_0 gfd_name_1 _x_2 fy_3 !_x_4 !l_5 = Sapl.Target.Flavour.d1_171 gfd_name_1 _x_2 fy_3 (Sapl.Target.Flavour.JSONDecode_FIELD_150 gfd_name_0 False l_5) l_5
Sapl.Target.Flavour.JSONDecode_RECORD_172 gfd_name_0 gfd_name_1 _x_2 fy_3 !_x_4 !l_5 = select l_5 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Sapl.Target.Flavour.d_54 (Sapl.Target.Flavour.JSONDecode_PAIR_170 gfd_name_0 gfd_name_1 _x_2 fy_3 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_5) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_5)
Sapl.Target.Flavour.d1_177 gfd_name_0 _x_1 !_x_2 l_3 = select _x_2 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_FIELD_168 gfd_name_0 _x_1 False xs_1_1) l_3) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_3) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_176 gfd_name_0 _x_1 gfd_name_2 _x_3 !_x_4 !l_5 = Sapl.Target.Flavour.d1_177 gfd_name_2 _x_3 (Sapl.Target.Flavour.JSONDecode_FIELD_168 gfd_name_0 _x_1 False l_5) l_5
Sapl.Target.Flavour.d1_175 gfd_name_0 _x_1 gfd_name_2 _x_3 !_x_4 l_5 = select _x_4 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Sapl.Target.Flavour.d2_57 x_2_0 (Sapl.Target.Flavour.JSONDecode_PAIR_176 gfd_name_0 _x_1 gfd_name_2 _x_3 False xs_1_1) l_5) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_5) ) 
Sapl.Target.Flavour.JSONDecode_PAIR_174 gfd_name_0 gfd_name_1 _x_2 gfd_name_3 _x_4 !_x_5 !l_6 = Sapl.Target.Flavour.d1_175 gfd_name_1 _x_2 gfd_name_3 _x_4 (Sapl.Target.Flavour.JSONDecode_FIELD_150 gfd_name_0 False l_6) l_6
Sapl.Target.Flavour.JSONDecode_RECORD_173 gfd_name_0 gfd_name_1 _x_2 gfd_name_3 _x_4 !_x_5 !l_6 = select l_6 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Sapl.Target.Flavour.d_54 (Sapl.Target.Flavour.JSONDecode_PAIR_174 gfd_name_0 gfd_name_1 _x_2 gfd_name_3 _x_4 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_6) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_6)
Sapl.Target.Flavour.JSONDecode_FlavourRep_21 !x1_0 !x2_1 = Sapl.Target.Flavour.bimapFromGeneric_61 (Sapl.Target.Flavour.JSONDecode_RECORD_173 "fun_prefix" "options" Text.JSON.JSONDecode__String_35 "bifs" Sapl.Target.Flavour.JSONDecode_BIFRep_22 x1_0 x2_1)
Sapl.Target.Flavour.mbRep_17 !str_0 = Text.JSON.fromJSON (<{Sapl.Target.Flavour.JSONDecode_s;}> Sapl.Target.Flavour.JSONDecode_FlavourRep_21) (Text.JSON.fromString_8 str_0)
Sapl.Target.Flavour.anon_10 !f_0 = Data.Maybe.isJust (Sapl.Target.Flavour.get_ext_fun_14 f_0)
Sapl.Target.Flavour.anon_11 f_0 = _Tuple2 (Sapl.Target.Flavour.get_sapl_fun_11 f_0) (_Tuple2 (Data.Maybe.fromJust (Sapl.Target.Flavour.get_ext_fun_14 f_0)) (Sapl.Target.Flavour.get_arity_12 f_0))
Sapl.Target.Flavour.anon_12 !f_0 = Data.Maybe.isJust (Sapl.Target.Flavour.get_inline_exp_15 f_0)
Sapl.Target.Flavour.collectStrictnessInfo_15 !_vArray_0 arr_1 !_x_2 = select _x_2 (_predefined._Nil -> arr_1) (_predefined._Cons _x_1_0 bs_1_1 -> select _x_1_0 (Sapl.Target.Flavour.ForceBinding i_2_0 -> Sapl.Target.Flavour.collectStrictnessInfo_15 _vArray_0 (<{Sapl.Target.Flavour._if;90;25_211}> (StdBool.not (<{StdInt.<_17}> (_SystemArray.get_size_4 _vArray_0 arr_1) i_2_0)) _vArray_0 arr_1 i_2_0) bs_1_1) (_ -> Sapl.Target.Flavour.collectStrictnessInfo_15 _vArray_0 arr_1 bs_1_1)) 
<{Sapl.Target.Flavour._if;90;25_211}> !_x_0 _vArray_1 arr_2 i_3 = select _x_0 (True -> _SystemArray.get_update_5 _vArray_1 arr_2 (<{StdInt.-_7}> i_3 1) '1') (_ -> arr_2)
Sapl.Target.Flavour.foldl_26 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Target.Flavour.foldl_26 op_0 (op_0 r_1 a_1_0) x_1_1) 
Sapl.Target.Flavour.app_13 feval_0 eval_1 args_2 a_3 !_x_4 = select _x_4 (Sapl.Target.Flavour.StringPart str_1_0 -> <{Text.StringAppender.<++_5}> a_3 str_1_0) (Sapl.Target.Flavour.Binding x_1_0 -> eval_1 (<{StdList.!!}> args_2 (<{StdInt.-_7}> x_1_0 1)) a_3) (Sapl.Target.Flavour.ForceBinding x_1_0 -> feval_0 (<{StdList.!!}> args_2 (<{StdInt.-_7}> x_1_0 1)) a_3) 
Sapl.Target.Flavour.foldl_178 feval_0 eval_1 args_2 r_3 !_x_4 = select _x_4 (_predefined._Nil -> r_3) (_predefined._Cons a_1_0 x_1_1 -> Sapl.Target.Flavour.foldl_178 feval_0 eval_1 args_2 (Sapl.Target.Flavour.app_13 feval_0 eval_1 args_2 r_3 a_1_0) x_1_1) 
Sapl.Target.Flavour.inst_14 !bindings_0 eval_1 feval_2 args_3 a_4 = Sapl.Target.Flavour.foldl_178 feval_2 eval_1 args_3 a_4 bindings_0
Sapl.Target.Flavour.revstr_9 !_vtoChar_0 !ss_1 = StdList.toString_49 _vtoChar_0 (StdList.reverse ss_1)
Sapl.Target.Flavour.revstr_179 !ss_0 = StdList.toString_79 (StdList.reverse ss_0)
<{Sapl.Target.Flavour.extractBindings`_8}> !_x_0 _x_1 = select _x_0 (_predefined._Nil -> select _x_1 (_predefined._Nil -> _predefined._Nil) (_ -> _predefined._Cons (Sapl.Target.Flavour.StringPart (Sapl.Target.Flavour.revstr_179 _x_1)) _predefined._Nil)) (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (':' -> select _x_1_1 (_predefined._Cons _x_3_0 _x_3_1 -> select _x_3_0 ('!' -> select _x_3_1 (_predefined._Cons x_5_0 _x_5_1 -> select _x_5_1 (_predefined._Cons _x_6_0 xs_6_1 -> select _x_6_0 (':' -> select (StdChar.isDigit x_5_0) (True -> <{Sapl.Target.Flavour._c;36;23_212}> _x_1 x_5_0 xs_6_1) ) ) ) ) (_ -> select _x_3_1 (_predefined._Cons _x_4_0 xs_4_1 -> select _x_4_0 (':' -> select (StdChar.isDigit _x_3_0) (True -> <{Sapl.Target.Flavour._c;40;23_213}> _x_1 _x_3_0 xs_4_1) ) ) )) ) (_ -> <{Sapl.Target.Flavour.extractBindings`_8}> _x_1_1 (_predefined._Cons _x_1_0 _x_1))) 
<{Sapl.Target.Flavour._c;40;23_213}> !_x_0 _x_1 xs_2 = select _x_0 (_predefined._Nil -> _predefined._Cons (Sapl.Target.Flavour.Binding (StdChar.digitToInt _x_1)) (<{Sapl.Target.Flavour.extractBindings`_8}> xs_2 _predefined._Nil)) (_ -> _predefined._Cons (Sapl.Target.Flavour.StringPart (Sapl.Target.Flavour.revstr_179 _x_0)) (_predefined._Cons (Sapl.Target.Flavour.Binding (StdChar.digitToInt _x_1)) (<{Sapl.Target.Flavour.extractBindings`_8}> xs_2 _predefined._Nil)))
<{Sapl.Target.Flavour._c;36;23_212}> !_x_0 x_1 xs_2 = select _x_0 (_predefined._Nil -> _predefined._Cons (Sapl.Target.Flavour.ForceBinding (StdChar.digitToInt x_1)) (<{Sapl.Target.Flavour.extractBindings`_8}> xs_2 _predefined._Nil)) (_ -> _predefined._Cons (Sapl.Target.Flavour.StringPart (Sapl.Target.Flavour.revstr_179 _x_0)) (_predefined._Cons (Sapl.Target.Flavour.ForceBinding (StdChar.digitToInt x_1)) (<{Sapl.Target.Flavour.extractBindings`_8}> xs_2 _predefined._Nil)))
Sapl.Target.Flavour.extractBindings !str_0 = <{Sapl.Target.Flavour.extractBindings`_8}> (StdList.fromString_78 str_0) _predefined._Nil
Sapl.Target.Flavour.collectStrictnessInfo_180 !arr_0 !_x_1 = select _x_1 (_predefined._Nil -> arr_0) (_predefined._Cons _x_1_0 bs_1_1 -> select _x_1_0 (Sapl.Target.Flavour.ForceBinding i_2_0 -> Sapl.Target.Flavour.collectStrictnessInfo_180 (<{Sapl.Target.Flavour._if;90;25_214}> (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 arr_0) i_2_0)) arr_0 i_2_0) bs_1_1) (_ -> Sapl.Target.Flavour.collectStrictnessInfo_180 arr_0 bs_1_1)) 
<{Sapl.Target.Flavour._if;90;25_214}> !_x_0 !arr_1 i_2 = select _x_0 (True -> _SystemArray.update_21 arr_1 (<{StdInt.-_7}> i_2 1) '1') (_ -> arr_1)
Sapl.Target.Flavour.toInlineFunDef_16 f_0 = let bindings_1_0 = Sapl.Target.Flavour.extractBindings (Data.Maybe.fromJust (Sapl.Target.Flavour.get_inline_exp_15 f_0)) in _Tuple2 (Sapl.Target.Flavour.get_sapl_fun_11 f_0) (Sapl.Target.Flavour._InlineFunDef (Sapl.Target.Flavour.inst_14 bindings_1_0) (Sapl.Target.Flavour.get_arity_12 f_0) (Sapl.Target.Flavour.collectStrictnessInfo_180 (_SystemArray.createArray_17 (Sapl.Target.Flavour.get_arity_12 f_0) '0') bindings_1_0) (Data.Maybe.maybe False StdFunc.id (Sapl.Target.Flavour.get_data_cons_13 f_0)))
<{Sapl.Target.Flavour.toFlavour`_18}> rep_0 = Sapl.Target.Flavour._Flavour (Sapl.Target.Flavour.get_fun_prefix_8 rep_0) (Data.Set.fromList (<{StdOverloaded.<;}> <{StdString.<_3}>) (<{StdOverloaded.==;}> <{StdString.==_2}>) (Sapl.Target.Flavour.get_options_9 rep_0)) (Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) (StdList.map Sapl.Target.Flavour.anon_11 (StdList.filter Sapl.Target.Flavour.anon_10 (Sapl.Target.Flavour.get_bifs_10 rep_0)))) (Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) (StdList.map Sapl.Target.Flavour.toInlineFunDef_16 (StdList.filter Sapl.Target.Flavour.anon_12 (Sapl.Target.Flavour.get_bifs_10 rep_0))))
Sapl.Target.Flavour.toFlavour !str_0 = <{Sapl.Target.Flavour._c;49;7_215}> (Sapl.Target.Flavour.mbRep_17 str_0)
<{Sapl.Target.Flavour._c;49;7_215}> !_x_0 = select _x_0 (Data.Maybe.Nothing -> Data.Maybe.Nothing) (Data.Maybe.Just rep_1_0 -> Data.Maybe.Just (<{Sapl.Target.Flavour.toFlavour`_18}> rep_1_0)) 
Sapl.Target.Flavour.isSet !f_0 !opt_1 = Data.Set.member (<{StdOverloaded.<;}> <{StdString.<_3}>) (<{StdOverloaded.==;}> <{StdString.==_2}>) opt_1 (Sapl.Target.Flavour.get_options_5 f_0)
Sapl.Target.Flavour.toGenericFlavourRep_34 !x_0 = select x_0 (Sapl.Target.Flavour._FlavourRep x11_1_0 x12_1_1 x13_1_2 -> StdGeneric.RECORD (StdGeneric.PAIR (StdGeneric.FIELD x11_1_0) (StdGeneric.PAIR (StdGeneric.FIELD x12_1_1) (StdGeneric.FIELD x13_1_2)))) 
Sapl.Target.Flavour.JSONEncode_FIELD_52 !fx_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.FIELD x_1_0 -> fx_0 True x_1_0) 
<{Sapl.Target.Flavour.++_51}> !_x_0 list_1 = select _x_0 (_predefined._Cons hd_1_0 tl_1_1 -> _predefined._Cons hd_1_0 (<{Sapl.Target.Flavour.++_51}> tl_1_1 list_1)) (_ -> list_1)
Sapl.Target.Flavour.JSONEncode_PAIR_50 !fx_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (fx_0 False x_1_0) (fy_1 False y_1_1)) 
Sapl.Target.Flavour.fli__FlavourRep_28 = _predefined._Cons "fun_prefix" (_predefined._Cons "options" (_predefined._Cons "bifs" _predefined._Nil))
Sapl.Target.Flavour.isNotNull_49 !_x_0 = select _x_0 (Text.JSON.JSONNull -> False) (_ -> True)
<{Sapl.Target.Flavour.c;86;49_48}> !g_l_0 g_l_1 = <{Sapl.Target.Flavour.g_c1;86;35_217}> g_l_0 g_l_1
<{Sapl.Target.Flavour.g_c1;86;35_217}> !g_l_0 g_l_1 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Sapl.Target.Flavour.g_c1;86;56_216}> g_l_1 g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{Sapl.Target.Flavour.g_c1;86;56_216}> !g_l_0 g_h_1 g_t_2 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> if (Sapl.Target.Flavour.isNotNull_49 g_h_1) (_predefined._Cons (_Tuple2 g_h_1_0 g_h_1) (<{Sapl.Target.Flavour.c;86;49_48}> g_t_2 g_t_1_1)) (<{Sapl.Target.Flavour.c;86;49_48}> g_t_2 g_t_1_1)) (_ -> _predefined._Nil)
Sapl.Target.Flavour.JSONEncode_RECORD_47 grd_fields_0 fx_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Sapl.Target.Flavour.c;86;49_48}> (fx_1 False x_1_0) grd_fields_0)) _predefined._Nil) 
Sapl.Target.Flavour.toGenericBIFRep_45 !x_0 = select x_0 (Sapl.Target.Flavour._BIFRep x11_1_0 x12_1_1 x13_1_2 x14_1_3 x15_1_4 -> StdGeneric.RECORD (StdGeneric.PAIR (StdGeneric.PAIR (StdGeneric.FIELD x11_1_0) (StdGeneric.FIELD x12_1_1)) (StdGeneric.PAIR (StdGeneric.FIELD x13_1_2) (StdGeneric.PAIR (StdGeneric.FIELD x14_1_3) (StdGeneric.FIELD x15_1_4))))) 
Sapl.Target.Flavour.fli__BIFRep_37 = _predefined._Cons "sapl_fun" (_predefined._Cons "arity" (_predefined._Cons "data_cons" (_predefined._Cons "ext_fun" (_predefined._Cons "inline_exp" _predefined._Nil))))
Sapl.Target.Flavour.JSONEncode_FIELD_184 _x_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.FIELD x_1_0 -> Text.JSON.JSONEncode_Maybe_23 _x_0 True x_1_0) 
Sapl.Target.Flavour.JSONEncode_PAIR_185 _x_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_184 _x_0 False x_1_0) (fy_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_FIELD_182 !_x_0 !_x_1 = select _x_1 (StdGeneric.FIELD x_1_0 -> Text.JSON.JSONEncode_Int_10 True x_1_0) 
Sapl.Target.Flavour.JSONEncode_FIELD_181 !_x_0 !_x_1 = select _x_1 (StdGeneric.FIELD x_1_0 -> Text.JSON.JSONEncode__String_14 True x_1_0) 
Sapl.Target.Flavour.JSONEncode_PAIR_183 fy_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_181 False x_1_0) (fy_0 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_PAIR_186 fy_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_PAIR_183 fy_0 False x_1_0) (fy_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_RECORD_187 grd_fields_0 fy_1 fy_2 !_x_3 !_x_4 = select _x_4 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Sapl.Target.Flavour.c;86;49_48}> (Sapl.Target.Flavour.JSONEncode_PAIR_186 fy_1 fy_2 False x_1_0) grd_fields_0)) _predefined._Nil) 
Sapl.Target.Flavour.JSONEncode_PAIR_188 _x_0 _x_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_184 _x_0 False x_1_0) (Sapl.Target.Flavour.JSONEncode_FIELD_184 _x_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_PAIR_189 _x_0 _x_1 _x_2 !_x_3 !_x_4 = select _x_4 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_184 _x_0 False x_1_0) (Sapl.Target.Flavour.JSONEncode_PAIR_188 _x_1 _x_2 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_PAIR_192 !_x_0 !_x_1 = select _x_1 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_181 False x_1_0) (Sapl.Target.Flavour.JSONEncode_FIELD_182 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_PAIR_191 fy_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_PAIR_192 False x_1_0) (fy_0 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_RECORD_190 grd_fields_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Sapl.Target.Flavour.c;86;49_48}> (Sapl.Target.Flavour.JSONEncode_PAIR_191 fy_1 False x_1_0) grd_fields_0)) _predefined._Nil) 
Sapl.Target.Flavour.JSONEncode_PAIR_194 _x_0 _x_1 _x_2 !_x_3 !_x_4 = select _x_4 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_PAIR_192 False x_1_0) (Sapl.Target.Flavour.JSONEncode_PAIR_189 _x_0 _x_1 _x_2 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_RECORD_193 grd_fields_0 _x_1 _x_2 _x_3 !_x_4 !_x_5 = select _x_5 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Sapl.Target.Flavour.c;86;49_48}> (Sapl.Target.Flavour.JSONEncode_PAIR_194 _x_1 _x_2 _x_3 False x_1_0) grd_fields_0)) _predefined._Nil) 
Sapl.Target.Flavour.JSONEncode_BIFRep_20 !x1_0 !x2_1 = Sapl.Target.Flavour.JSONEncode_RECORD_193 Sapl.Target.Flavour.fli__BIFRep_37 Text.JSON.JSONEncode_Bool_13 Text.JSON.JSONEncode__String_14 Text.JSON.JSONEncode__String_14 x1_0 (Sapl.Target.Flavour.toGenericBIFRep_45 x2_1)
Sapl.Target.Flavour.JSONEncode_FIELD_195 _x_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.FIELD x_1_0 -> Text.JSON.JSONEncode__List_16 _x_0 True x_1_0) 
Sapl.Target.Flavour.JSONEncode_PAIR_196 _x_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_195 _x_0 False x_1_0) (fy_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_PAIR_197 _x_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_181 False x_1_0) (Sapl.Target.Flavour.JSONEncode_PAIR_196 _x_0 fy_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_RECORD_198 grd_fields_0 _x_1 fy_2 !_x_3 !_x_4 = select _x_4 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Sapl.Target.Flavour.c;86;49_48}> (Sapl.Target.Flavour.JSONEncode_PAIR_197 _x_1 fy_2 False x_1_0) grd_fields_0)) _predefined._Nil) 
Sapl.Target.Flavour.JSONEncode_PAIR_201 _x_0 _x_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_195 _x_0 False x_1_0) (Sapl.Target.Flavour.JSONEncode_FIELD_195 _x_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_PAIR_200 _x_0 _x_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Sapl.Target.Flavour.++_51}> (Sapl.Target.Flavour.JSONEncode_FIELD_181 False x_1_0) (Sapl.Target.Flavour.JSONEncode_PAIR_201 _x_0 _x_1 False y_1_1)) 
Sapl.Target.Flavour.JSONEncode_RECORD_199 grd_fields_0 _x_1 _x_2 !_x_3 !_x_4 = select _x_4 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Sapl.Target.Flavour.c;86;49_48}> (Sapl.Target.Flavour.JSONEncode_PAIR_200 _x_1 _x_2 False x_1_0) grd_fields_0)) _predefined._Nil) 
Sapl.Target.Flavour.JSONEncode_FlavourRep_19 !x1_0 !x2_1 = Sapl.Target.Flavour.JSONEncode_RECORD_199 Sapl.Target.Flavour.fli__FlavourRep_28 Text.JSON.JSONEncode__String_14 Sapl.Target.Flavour.JSONEncode_BIFRep_20 x1_0 (Sapl.Target.Flavour.toGenericFlavourRep_34 x2_1)
<{Sapl.Target.Flavour.TD;Arity}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;TermCoderFun}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;InlineCoderFun}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;InlineFunDef}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;Flavour}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;FlavourRep}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;BIFRep}> _x_0 = _predefined._Nil
<{Sapl.Target.Flavour.TD;X}> _x_0 = _predefined._Nil

:: Sapl.Target.Flavour.X = Sapl.Target.Flavour.StringPart !a1 | Sapl.Target.Flavour.Binding !a1 | Sapl.Target.Flavour.ForceBinding !a1

|| Converted Records
:: Sapl.Target.Flavour._InlineFunDef = {!Sapl.Target.Flavour.fun, !Sapl.Target.Flavour.arity, !Sapl.Target.Flavour.strictness, !Sapl.Target.Flavour.data_cons}
Sapl.Target.Flavour.get_fun_0 rec = select rec (Sapl.Target.Flavour._InlineFunDef a1 a2 a3 a4 -> a1)
Sapl.Target.Flavour.get_arity_1 rec = select rec (Sapl.Target.Flavour._InlineFunDef a1 a2 a3 a4 -> a2)
Sapl.Target.Flavour.get_strictness_2 rec = select rec (Sapl.Target.Flavour._InlineFunDef a1 a2 a3 a4 -> a3)
Sapl.Target.Flavour.get_data_cons_3 rec = select rec (Sapl.Target.Flavour._InlineFunDef a1 a2 a3 a4 -> a4)
Sapl.Target.Flavour.set_fun_0 rec !val = select rec (Sapl.Target.Flavour._InlineFunDef  a1 a2 a3 a4 -> Sapl.Target.Flavour._InlineFunDef val a2 a3 a4)
Sapl.Target.Flavour.set_arity_1 rec !val = select rec (Sapl.Target.Flavour._InlineFunDef  a1 a2 a3 a4 -> Sapl.Target.Flavour._InlineFunDef a1 val a3 a4)
Sapl.Target.Flavour.set_strictness_2 rec !val = select rec (Sapl.Target.Flavour._InlineFunDef  a1 a2 a3 a4 -> Sapl.Target.Flavour._InlineFunDef a1 a2 val a4)
Sapl.Target.Flavour.set_data_cons_3 rec !val = select rec (Sapl.Target.Flavour._InlineFunDef  a1 a2 a3 a4 -> Sapl.Target.Flavour._InlineFunDef a1 a2 a3 val)

:: Sapl.Target.Flavour._Flavour = {Sapl.Target.Flavour.fun_prefix, Sapl.Target.Flavour.options, Sapl.Target.Flavour.builtInFunctions, Sapl.Target.Flavour.inlineFunctions}
Sapl.Target.Flavour.get_fun_prefix_4 rec = select rec (Sapl.Target.Flavour._Flavour a1 a2 a3 a4 -> a1)
Sapl.Target.Flavour.get_options_5 rec = select rec (Sapl.Target.Flavour._Flavour a1 a2 a3 a4 -> a2)
Sapl.Target.Flavour.get_builtInFunctions_6 rec = select rec (Sapl.Target.Flavour._Flavour a1 a2 a3 a4 -> a3)
Sapl.Target.Flavour.get_inlineFunctions_7 rec = select rec (Sapl.Target.Flavour._Flavour a1 a2 a3 a4 -> a4)
Sapl.Target.Flavour.set_fun_prefix_4 rec val = select rec (Sapl.Target.Flavour._Flavour  a1 a2 a3 a4 -> Sapl.Target.Flavour._Flavour val a2 a3 a4)
Sapl.Target.Flavour.set_options_5 rec val = select rec (Sapl.Target.Flavour._Flavour  a1 a2 a3 a4 -> Sapl.Target.Flavour._Flavour a1 val a3 a4)
Sapl.Target.Flavour.set_builtInFunctions_6 rec val = select rec (Sapl.Target.Flavour._Flavour  a1 a2 a3 a4 -> Sapl.Target.Flavour._Flavour a1 a2 val a4)
Sapl.Target.Flavour.set_inlineFunctions_7 rec val = select rec (Sapl.Target.Flavour._Flavour  a1 a2 a3 a4 -> Sapl.Target.Flavour._Flavour a1 a2 a3 val)

:: Sapl.Target.Flavour._FlavourRep = {Sapl.Target.Flavour.fun_prefix, Sapl.Target.Flavour.options, Sapl.Target.Flavour.bifs}
Sapl.Target.Flavour.get_fun_prefix_8 rec = select rec (Sapl.Target.Flavour._FlavourRep a1 a2 a3 -> a1)
Sapl.Target.Flavour.get_options_9 rec = select rec (Sapl.Target.Flavour._FlavourRep a1 a2 a3 -> a2)
Sapl.Target.Flavour.get_bifs_10 rec = select rec (Sapl.Target.Flavour._FlavourRep a1 a2 a3 -> a3)
Sapl.Target.Flavour.set_fun_prefix_8 rec val = select rec (Sapl.Target.Flavour._FlavourRep  a1 a2 a3 -> Sapl.Target.Flavour._FlavourRep val a2 a3)
Sapl.Target.Flavour.set_options_9 rec val = select rec (Sapl.Target.Flavour._FlavourRep  a1 a2 a3 -> Sapl.Target.Flavour._FlavourRep a1 val a3)
Sapl.Target.Flavour.set_bifs_10 rec val = select rec (Sapl.Target.Flavour._FlavourRep  a1 a2 a3 -> Sapl.Target.Flavour._FlavourRep a1 a2 val)

:: Sapl.Target.Flavour._BIFRep = {Sapl.Target.Flavour.sapl_fun, Sapl.Target.Flavour.arity, Sapl.Target.Flavour.data_cons, Sapl.Target.Flavour.ext_fun, Sapl.Target.Flavour.inline_exp}
Sapl.Target.Flavour.get_sapl_fun_11 rec = select rec (Sapl.Target.Flavour._BIFRep a1 a2 a3 a4 a5 -> a1)
Sapl.Target.Flavour.get_arity_12 rec = select rec (Sapl.Target.Flavour._BIFRep a1 a2 a3 a4 a5 -> a2)
Sapl.Target.Flavour.get_data_cons_13 rec = select rec (Sapl.Target.Flavour._BIFRep a1 a2 a3 a4 a5 -> a3)
Sapl.Target.Flavour.get_ext_fun_14 rec = select rec (Sapl.Target.Flavour._BIFRep a1 a2 a3 a4 a5 -> a4)
Sapl.Target.Flavour.get_inline_exp_15 rec = select rec (Sapl.Target.Flavour._BIFRep a1 a2 a3 a4 a5 -> a5)
Sapl.Target.Flavour.set_sapl_fun_11 rec val = select rec (Sapl.Target.Flavour._BIFRep  a1 a2 a3 a4 a5 -> Sapl.Target.Flavour._BIFRep val a2 a3 a4 a5)
Sapl.Target.Flavour.set_arity_12 rec val = select rec (Sapl.Target.Flavour._BIFRep  a1 a2 a3 a4 a5 -> Sapl.Target.Flavour._BIFRep a1 val a3 a4 a5)
Sapl.Target.Flavour.set_data_cons_13 rec val = select rec (Sapl.Target.Flavour._BIFRep  a1 a2 a3 a4 a5 -> Sapl.Target.Flavour._BIFRep a1 a2 val a4 a5)
Sapl.Target.Flavour.set_ext_fun_14 rec val = select rec (Sapl.Target.Flavour._BIFRep  a1 a2 a3 a4 a5 -> Sapl.Target.Flavour._BIFRep a1 a2 a3 val a5)
Sapl.Target.Flavour.set_inline_exp_15 rec val = select rec (Sapl.Target.Flavour._BIFRep  a1 a2 a3 a4 a5 -> Sapl.Target.Flavour._BIFRep a1 a2 a3 a4 val)

:: <{Sapl.Target.Flavour.JSONEncode_s;}> = {Sapl.Target.Flavour.JSONEncode_s}
Sapl.Target.Flavour.get_JSONEncode_s_16 rec = select rec (<{Sapl.Target.Flavour.JSONEncode_s;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONEncode_s_16 rec val = select rec (<{Sapl.Target.Flavour.JSONEncode_s;}>  a1 -> <{Sapl.Target.Flavour.JSONEncode_s;}> val)

:: <{Sapl.Target.Flavour.JSONEncode_ss;}> = {Sapl.Target.Flavour.JSONEncode_ss}
Sapl.Target.Flavour.get_JSONEncode_ss_17 rec = select rec (<{Sapl.Target.Flavour.JSONEncode_ss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONEncode_ss_17 rec val = select rec (<{Sapl.Target.Flavour.JSONEncode_ss;}>  a1 -> <{Sapl.Target.Flavour.JSONEncode_ss;}> val)

:: <{Sapl.Target.Flavour.JSONEncode_sss;}> = {Sapl.Target.Flavour.JSONEncode_sss}
Sapl.Target.Flavour.get_JSONEncode_sss_18 rec = select rec (<{Sapl.Target.Flavour.JSONEncode_sss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONEncode_sss_18 rec val = select rec (<{Sapl.Target.Flavour.JSONEncode_sss;}>  a1 -> <{Sapl.Target.Flavour.JSONEncode_sss;}> val)

:: <{Sapl.Target.Flavour.JSONEncode_ssss;}> = {Sapl.Target.Flavour.JSONEncode_ssss}
Sapl.Target.Flavour.get_JSONEncode_ssss_19 rec = select rec (<{Sapl.Target.Flavour.JSONEncode_ssss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONEncode_ssss_19 rec val = select rec (<{Sapl.Target.Flavour.JSONEncode_ssss;}>  a1 -> <{Sapl.Target.Flavour.JSONEncode_ssss;}> val)

:: <{Sapl.Target.Flavour.JSONEncode_sssss;}> = {Sapl.Target.Flavour.JSONEncode_sssss}
Sapl.Target.Flavour.get_JSONEncode_sssss_20 rec = select rec (<{Sapl.Target.Flavour.JSONEncode_sssss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONEncode_sssss_20 rec val = select rec (<{Sapl.Target.Flavour.JSONEncode_sssss;}>  a1 -> <{Sapl.Target.Flavour.JSONEncode_sssss;}> val)

:: <{Sapl.Target.Flavour.JSONEncode_ssssss;}> = {Sapl.Target.Flavour.JSONEncode_ssssss}
Sapl.Target.Flavour.get_JSONEncode_ssssss_21 rec = select rec (<{Sapl.Target.Flavour.JSONEncode_ssssss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONEncode_ssssss_21 rec val = select rec (<{Sapl.Target.Flavour.JSONEncode_ssssss;}>  a1 -> <{Sapl.Target.Flavour.JSONEncode_ssssss;}> val)

:: <{Sapl.Target.Flavour.JSONDecode_s;}> = {Sapl.Target.Flavour.JSONDecode_s}
Sapl.Target.Flavour.get_JSONDecode_s_22 rec = select rec (<{Sapl.Target.Flavour.JSONDecode_s;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONDecode_s_22 rec val = select rec (<{Sapl.Target.Flavour.JSONDecode_s;}>  a1 -> <{Sapl.Target.Flavour.JSONDecode_s;}> val)

:: <{Sapl.Target.Flavour.JSONDecode_ss;}> = {Sapl.Target.Flavour.JSONDecode_ss}
Sapl.Target.Flavour.get_JSONDecode_ss_23 rec = select rec (<{Sapl.Target.Flavour.JSONDecode_ss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONDecode_ss_23 rec val = select rec (<{Sapl.Target.Flavour.JSONDecode_ss;}>  a1 -> <{Sapl.Target.Flavour.JSONDecode_ss;}> val)

:: <{Sapl.Target.Flavour.JSONDecode_sss;}> = {Sapl.Target.Flavour.JSONDecode_sss}
Sapl.Target.Flavour.get_JSONDecode_sss_24 rec = select rec (<{Sapl.Target.Flavour.JSONDecode_sss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONDecode_sss_24 rec val = select rec (<{Sapl.Target.Flavour.JSONDecode_sss;}>  a1 -> <{Sapl.Target.Flavour.JSONDecode_sss;}> val)

:: <{Sapl.Target.Flavour.JSONDecode_ssss;}> = {Sapl.Target.Flavour.JSONDecode_ssss}
Sapl.Target.Flavour.get_JSONDecode_ssss_25 rec = select rec (<{Sapl.Target.Flavour.JSONDecode_ssss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONDecode_ssss_25 rec val = select rec (<{Sapl.Target.Flavour.JSONDecode_ssss;}>  a1 -> <{Sapl.Target.Flavour.JSONDecode_ssss;}> val)

:: <{Sapl.Target.Flavour.JSONDecode_sssss;}> = {Sapl.Target.Flavour.JSONDecode_sssss}
Sapl.Target.Flavour.get_JSONDecode_sssss_26 rec = select rec (<{Sapl.Target.Flavour.JSONDecode_sssss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONDecode_sssss_26 rec val = select rec (<{Sapl.Target.Flavour.JSONDecode_sssss;}>  a1 -> <{Sapl.Target.Flavour.JSONDecode_sssss;}> val)

:: <{Sapl.Target.Flavour.JSONDecode_ssssss;}> = {Sapl.Target.Flavour.JSONDecode_ssssss}
Sapl.Target.Flavour.get_JSONDecode_ssssss_27 rec = select rec (<{Sapl.Target.Flavour.JSONDecode_ssssss;}> a1 -> a1)
Sapl.Target.Flavour.set_JSONDecode_ssssss_27 rec val = select rec (<{Sapl.Target.Flavour.JSONDecode_ssssss;}>  a1 -> <{Sapl.Target.Flavour.JSONDecode_ssssss;}> val)

:: <{Sapl.Target.Flavour.bimap_s;}> = {Sapl.Target.Flavour.bimap_s}
Sapl.Target.Flavour.get_bimap_s_28 rec = select rec (<{Sapl.Target.Flavour.bimap_s;}> a1 -> a1)
Sapl.Target.Flavour.set_bimap_s_28 rec val = select rec (<{Sapl.Target.Flavour.bimap_s;}>  a1 -> <{Sapl.Target.Flavour.bimap_s;}> val)

:: <{Sapl.Target.Flavour.bimap_ss;}> = {Sapl.Target.Flavour.bimap_ss}
Sapl.Target.Flavour.get_bimap_ss_29 rec = select rec (<{Sapl.Target.Flavour.bimap_ss;}> a1 -> a1)
Sapl.Target.Flavour.set_bimap_ss_29 rec val = select rec (<{Sapl.Target.Flavour.bimap_ss;}>  a1 -> <{Sapl.Target.Flavour.bimap_ss;}> val)

:: <{Sapl.Target.Flavour.bimap_sss;}> = {Sapl.Target.Flavour.bimap_sss}
Sapl.Target.Flavour.get_bimap_sss_30 rec = select rec (<{Sapl.Target.Flavour.bimap_sss;}> a1 -> a1)
Sapl.Target.Flavour.set_bimap_sss_30 rec val = select rec (<{Sapl.Target.Flavour.bimap_sss;}>  a1 -> <{Sapl.Target.Flavour.bimap_sss;}> val)

:: <{Sapl.Target.Flavour.gEq_s;}> = {Sapl.Target.Flavour.gEq_s}
Sapl.Target.Flavour.get_gEq_s_31 rec = select rec (<{Sapl.Target.Flavour.gEq_s;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_s_31 rec val = select rec (<{Sapl.Target.Flavour.gEq_s;}>  a1 -> <{Sapl.Target.Flavour.gEq_s;}> val)

:: <{Sapl.Target.Flavour.gEq_ss;}> = {Sapl.Target.Flavour.gEq_ss}
Sapl.Target.Flavour.get_gEq_ss_32 rec = select rec (<{Sapl.Target.Flavour.gEq_ss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_ss_32 rec val = select rec (<{Sapl.Target.Flavour.gEq_ss;}>  a1 -> <{Sapl.Target.Flavour.gEq_ss;}> val)

:: <{Sapl.Target.Flavour.gEq_sss;}> = {Sapl.Target.Flavour.gEq_sss}
Sapl.Target.Flavour.get_gEq_sss_33 rec = select rec (<{Sapl.Target.Flavour.gEq_sss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_sss_33 rec val = select rec (<{Sapl.Target.Flavour.gEq_sss;}>  a1 -> <{Sapl.Target.Flavour.gEq_sss;}> val)

:: <{Sapl.Target.Flavour.gEq_ssss;}> = {Sapl.Target.Flavour.gEq_ssss}
Sapl.Target.Flavour.get_gEq_ssss_34 rec = select rec (<{Sapl.Target.Flavour.gEq_ssss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_ssss_34 rec val = select rec (<{Sapl.Target.Flavour.gEq_ssss;}>  a1 -> <{Sapl.Target.Flavour.gEq_ssss;}> val)

:: <{Sapl.Target.Flavour.gEq_sssss;}> = {Sapl.Target.Flavour.gEq_sssss}
Sapl.Target.Flavour.get_gEq_sssss_35 rec = select rec (<{Sapl.Target.Flavour.gEq_sssss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_sssss_35 rec val = select rec (<{Sapl.Target.Flavour.gEq_sssss;}>  a1 -> <{Sapl.Target.Flavour.gEq_sssss;}> val)

:: <{Sapl.Target.Flavour.gEq_ssssss;}> = {Sapl.Target.Flavour.gEq_ssssss}
Sapl.Target.Flavour.get_gEq_ssssss_36 rec = select rec (<{Sapl.Target.Flavour.gEq_ssssss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_ssssss_36 rec val = select rec (<{Sapl.Target.Flavour.gEq_ssssss;}>  a1 -> <{Sapl.Target.Flavour.gEq_ssssss;}> val)

:: <{Sapl.Target.Flavour.gEq_sssssss;}> = {Sapl.Target.Flavour.gEq_sssssss}
Sapl.Target.Flavour.get_gEq_sssssss_37 rec = select rec (<{Sapl.Target.Flavour.gEq_sssssss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_sssssss_37 rec val = select rec (<{Sapl.Target.Flavour.gEq_sssssss;}>  a1 -> <{Sapl.Target.Flavour.gEq_sssssss;}> val)

:: <{Sapl.Target.Flavour.gEq_ssssssss;}> = {Sapl.Target.Flavour.gEq_ssssssss}
Sapl.Target.Flavour.get_gEq_ssssssss_38 rec = select rec (<{Sapl.Target.Flavour.gEq_ssssssss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_ssssssss_38 rec val = select rec (<{Sapl.Target.Flavour.gEq_ssssssss;}>  a1 -> <{Sapl.Target.Flavour.gEq_ssssssss;}> val)

:: <{Sapl.Target.Flavour.gEq_sssssssss;}> = {Sapl.Target.Flavour.gEq_sssssssss}
Sapl.Target.Flavour.get_gEq_sssssssss_39 rec = select rec (<{Sapl.Target.Flavour.gEq_sssssssss;}> a1 -> a1)
Sapl.Target.Flavour.set_gEq_sssssssss_39 rec val = select rec (<{Sapl.Target.Flavour.gEq_sssssssss;}>  a1 -> <{Sapl.Target.Flavour.gEq_sssssssss;}> val)

