|| ?module? StdInt


StdInt.bitor !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.bitand !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.bitxor !a_0 !b_1 = error "no AnyCodeExpr"
<{StdInt.<<}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdInt.>>}> !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.bitnot !a_0 = error "no AnyCodeExpr"
<{StdInt.+_6}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdInt.-_7}> !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.zero_8 = error "no AnyCodeExpr"
<{StdInt.*_9}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdInt./_10}> !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.one_11 = error "no AnyCodeExpr"
StdInt.isEven_18 !a_0 = error "no AnyCodeExpr"
StdInt.pow_31 !_x_0 !_x_1 = select _x_1 (0 -> 1) (_ -> if (StdInt.isEven_18 _x_1) (let x_1_0 = StdInt.pow_31 _x_0 (<{StdInt.>>}> _x_1 1) in <{StdInt.*_9}> x_1_0 x_1_0) (let x_1_0 = StdInt.pow_31 _x_0 (<{StdInt.>>}> _x_1 1) in <{StdInt.*_9}> (<{StdInt.*_9}> _x_0 x_1_0) x_1_0))
<{StdInt.<_17}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdInt.^_12}> !x_0 !n_1 = if (<{StdInt.<_17}> n_1 0) (StdMisc.abort "^ (Int) called with negative power argument") (StdInt.pow_31 x_0 n_1)
StdInt.abs_13 !x_0 = if (<{StdInt.<_17}> x_0 0) (<{StdInt.-_7}> 0 x_0) x_0
<{StdInt.==_16}> !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.sign_14 !x_0 = if (<{StdInt.==_16}> x_0 0) 0 (if (<{StdInt.<_17}> x_0 0) -1 1)
<{StdInt.~_15}> !x_0 = error "no AnyCodeExpr"
StdInt.isOdd_19 !a_0 = error "no AnyCodeExpr"
StdInt.toInt_20 !a_0 = error "no AnyCodeExpr"
StdInt.toInt_21 !a_0 = error "no AnyCodeExpr"
StdInt.toInt_22 !a_0 = error "no AnyCodeExpr"
StdInt.toInt2_33 !len_0 !posn_1 !val_2 !s_3 = if (<{StdInt.==_16}> len_0 posn_1) val_2 (let n_1_0 = <{StdInt.-_7}> (StdInt.toInt_20 (_SystemArray.select_19 s_3 posn_1)) (StdInt.toInt_20 '0') in if (StdInt.toInt2_33_select0 n_1_0 len_0 posn_1 val_2 s_3) (StdInt.toInt2_33 len_0 (<{StdInt.+_6}> posn_1 1) (<{StdInt.+_6}> n_1_0 (<{StdInt.*_9}> val_2 10)) s_3) 0)
StdInt.toInt2_33_select0 n_1_0 !len_0 !posn_1 !val_2 !s_3 = if (StdBool.not (<{StdInt.<_17}> n_1_0 0)) (StdBool.not (<{StdInt.<_17}> 9 n_1_0)) False
StdInt.toInt_23 !s_0 = let len_1_0 = _SystemArray.size_20 s_0 in if (<{StdInt.==_16}> len_1_0 0) 0 (if (<{StdChar.==_18}> (_SystemArray.select_19 s_0 0) '-') (<{StdInt.~_15}> (StdInt.toInt2_33 len_1_0 1 0 s_0)) (if (<{StdChar.==_18}> (_SystemArray.select_19 s_0 0) '+') (StdInt.toInt2_33 len_1_0 1 0 s_0) (StdInt.toInt2_33 len_1_0 0 0 s_0)))
StdInt.fromInt_24 !a_0 = error "no AnyCodeExpr"
StdInt.fromInt_25 !a_0 = error "no AnyCodeExpr"
StdInt.fromInt_26 !a_0 = error "no AnyCodeExpr"
StdInt.fromInt_27 !a_0 = error "no AnyCodeExpr"
StdInt.rem_28 !a_0 !b_1 = error "no AnyCodeExpr"
StdInt.gcdnat_32 !x_0 !_x_1 = select _x_1 (0 -> x_0) (_ -> StdInt.gcdnat_32 _x_1 (StdInt.rem_28 x_0 _x_1))
StdInt.gcd_29 !x_0 !y_1 = StdInt.gcdnat_32 (StdInt.abs_13 x_0) (StdInt.abs_13 y_1)
StdInt.lcm_30 !_x_0 !_x_1 = select _x_1 (0 -> 0) (_ -> select _x_0 (0 -> 0) (_ -> StdInt.abs_13 (<{StdInt.*_9}> (<{StdInt./_10}> _x_0 (StdInt.gcd_29 _x_0 _x_1)) _x_1)))


|| Converted Records
