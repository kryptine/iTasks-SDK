|| ?module? StdOverloaded


<{StdOverloaded.TD;+;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;-;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;zero;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;*;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;/;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;one;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;==;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;<;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;isEven;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;isOdd;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;length;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;%;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;+++;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;^;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;abs;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;sign;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;~;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;mod;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;rem;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;gcd;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;lcm;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;toInt;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;toChar;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;toBool;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;toReal;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;toString;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;fromInt;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;fromChar;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;fromBool;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;fromReal;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;fromString;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;ln;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;log10;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;exp;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;sqrt;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;sin;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;cos;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;tan;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;asin;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;acos;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;atan;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;sinh;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;cosh;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;tanh;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;asinh;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;acosh;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;atanh;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;inc;}> _x_0 = _predefined._Nil
<{StdOverloaded.TD;dec;}> _x_0 = _predefined._Nil


|| Converted Records
:: <{StdOverloaded.+;}> = {!<{StdOverloaded.+}>}
<{StdOverloaded.get_+_0}> rec = select rec (<{StdOverloaded.+;}> a1 -> a1)
<{StdOverloaded.set_+_0}> rec !val = select rec (<{StdOverloaded.+;}>  a1 -> <{StdOverloaded.+;}> val)

:: <{StdOverloaded.-;}> = {<{StdOverloaded.-}>}
<{StdOverloaded.get_-_1}> rec = select rec (<{StdOverloaded.-;}> a1 -> a1)
<{StdOverloaded.set_-_1}> rec val = select rec (<{StdOverloaded.-;}>  a1 -> <{StdOverloaded.-;}> val)

:: <{StdOverloaded.zero;}> = {StdOverloaded.zero}
StdOverloaded.get_zero_2 rec = select rec (<{StdOverloaded.zero;}> a1 -> a1)
StdOverloaded.set_zero_2 rec val = select rec (<{StdOverloaded.zero;}>  a1 -> <{StdOverloaded.zero;}> val)

:: <{StdOverloaded.*;}> = {<{StdOverloaded.*}>}
<{StdOverloaded.get_*_3}> rec = select rec (<{StdOverloaded.*;}> a1 -> a1)
<{StdOverloaded.set_*_3}> rec val = select rec (<{StdOverloaded.*;}>  a1 -> <{StdOverloaded.*;}> val)

:: <{StdOverloaded./;}> = {<{StdOverloaded./}>}
<{StdOverloaded.get_/_4}> rec = select rec (<{StdOverloaded./;}> a1 -> a1)
<{StdOverloaded.set_/_4}> rec val = select rec (<{StdOverloaded./;}>  a1 -> <{StdOverloaded./;}> val)

:: <{StdOverloaded.one;}> = {StdOverloaded.one}
StdOverloaded.get_one_5 rec = select rec (<{StdOverloaded.one;}> a1 -> a1)
StdOverloaded.set_one_5 rec val = select rec (<{StdOverloaded.one;}>  a1 -> <{StdOverloaded.one;}> val)

:: <{StdOverloaded.==;}> = {<{StdOverloaded.==}>}
<{StdOverloaded.get_==_6}> rec = select rec (<{StdOverloaded.==;}> a1 -> a1)
<{StdOverloaded.set_==_6}> rec val = select rec (<{StdOverloaded.==;}>  a1 -> <{StdOverloaded.==;}> val)

:: <{StdOverloaded.<;}> = {<{StdOverloaded.<}>}
<{StdOverloaded.get_<_7}> rec = select rec (<{StdOverloaded.<;}> a1 -> a1)
<{StdOverloaded.set_<_7}> rec val = select rec (<{StdOverloaded.<;}>  a1 -> <{StdOverloaded.<;}> val)

:: <{StdOverloaded.isEven;}> = {StdOverloaded.isEven}
StdOverloaded.get_isEven_8 rec = select rec (<{StdOverloaded.isEven;}> a1 -> a1)
StdOverloaded.set_isEven_8 rec val = select rec (<{StdOverloaded.isEven;}>  a1 -> <{StdOverloaded.isEven;}> val)

:: <{StdOverloaded.isOdd;}> = {StdOverloaded.isOdd}
StdOverloaded.get_isOdd_9 rec = select rec (<{StdOverloaded.isOdd;}> a1 -> a1)
StdOverloaded.set_isOdd_9 rec val = select rec (<{StdOverloaded.isOdd;}>  a1 -> <{StdOverloaded.isOdd;}> val)

:: <{StdOverloaded.length;}> = {StdOverloaded.length}
StdOverloaded.get_length_10 rec = select rec (<{StdOverloaded.length;}> a1 -> a1)
StdOverloaded.set_length_10 rec val = select rec (<{StdOverloaded.length;}>  a1 -> <{StdOverloaded.length;}> val)

:: <{StdOverloaded.%;}> = {<{StdOverloaded.%}>}
<{StdOverloaded.get_%_11}> rec = select rec (<{StdOverloaded.%;}> a1 -> a1)
<{StdOverloaded.set_%_11}> rec val = select rec (<{StdOverloaded.%;}>  a1 -> <{StdOverloaded.%;}> val)

:: <{StdOverloaded.+++;}> = {<{StdOverloaded.+++}>}
<{StdOverloaded.get_+++_12}> rec = select rec (<{StdOverloaded.+++;}> a1 -> a1)
<{StdOverloaded.set_+++_12}> rec val = select rec (<{StdOverloaded.+++;}>  a1 -> <{StdOverloaded.+++;}> val)

:: <{StdOverloaded.^;}> = {<{StdOverloaded.^}>}
<{StdOverloaded.get_^_13}> rec = select rec (<{StdOverloaded.^;}> a1 -> a1)
<{StdOverloaded.set_^_13}> rec val = select rec (<{StdOverloaded.^;}>  a1 -> <{StdOverloaded.^;}> val)

:: <{StdOverloaded.abs;}> = {StdOverloaded.abs}
StdOverloaded.get_abs_14 rec = select rec (<{StdOverloaded.abs;}> a1 -> a1)
StdOverloaded.set_abs_14 rec val = select rec (<{StdOverloaded.abs;}>  a1 -> <{StdOverloaded.abs;}> val)

:: <{StdOverloaded.sign;}> = {StdOverloaded.sign}
StdOverloaded.get_sign_15 rec = select rec (<{StdOverloaded.sign;}> a1 -> a1)
StdOverloaded.set_sign_15 rec val = select rec (<{StdOverloaded.sign;}>  a1 -> <{StdOverloaded.sign;}> val)

:: <{StdOverloaded.~;}> = {<{StdOverloaded.~}>}
<{StdOverloaded.get_~_16}> rec = select rec (<{StdOverloaded.~;}> a1 -> a1)
<{StdOverloaded.set_~_16}> rec val = select rec (<{StdOverloaded.~;}>  a1 -> <{StdOverloaded.~;}> val)

:: <{StdOverloaded.mod;}> = {StdOverloaded.mod}
StdOverloaded.get_mod_17 rec = select rec (<{StdOverloaded.mod;}> a1 -> a1)
StdOverloaded.set_mod_17 rec val = select rec (<{StdOverloaded.mod;}>  a1 -> <{StdOverloaded.mod;}> val)

:: <{StdOverloaded.rem;}> = {StdOverloaded.rem}
StdOverloaded.get_rem_18 rec = select rec (<{StdOverloaded.rem;}> a1 -> a1)
StdOverloaded.set_rem_18 rec val = select rec (<{StdOverloaded.rem;}>  a1 -> <{StdOverloaded.rem;}> val)

:: <{StdOverloaded.gcd;}> = {StdOverloaded.gcd}
StdOverloaded.get_gcd_19 rec = select rec (<{StdOverloaded.gcd;}> a1 -> a1)
StdOverloaded.set_gcd_19 rec val = select rec (<{StdOverloaded.gcd;}>  a1 -> <{StdOverloaded.gcd;}> val)

:: <{StdOverloaded.lcm;}> = {StdOverloaded.lcm}
StdOverloaded.get_lcm_20 rec = select rec (<{StdOverloaded.lcm;}> a1 -> a1)
StdOverloaded.set_lcm_20 rec val = select rec (<{StdOverloaded.lcm;}>  a1 -> <{StdOverloaded.lcm;}> val)

:: <{StdOverloaded.toInt;}> = {StdOverloaded.toInt}
StdOverloaded.get_toInt_21 rec = select rec (<{StdOverloaded.toInt;}> a1 -> a1)
StdOverloaded.set_toInt_21 rec val = select rec (<{StdOverloaded.toInt;}>  a1 -> <{StdOverloaded.toInt;}> val)

:: <{StdOverloaded.toChar;}> = {StdOverloaded.toChar}
StdOverloaded.get_toChar_22 rec = select rec (<{StdOverloaded.toChar;}> a1 -> a1)
StdOverloaded.set_toChar_22 rec val = select rec (<{StdOverloaded.toChar;}>  a1 -> <{StdOverloaded.toChar;}> val)

:: <{StdOverloaded.toBool;}> = {StdOverloaded.toBool}
StdOverloaded.get_toBool_23 rec = select rec (<{StdOverloaded.toBool;}> a1 -> a1)
StdOverloaded.set_toBool_23 rec val = select rec (<{StdOverloaded.toBool;}>  a1 -> <{StdOverloaded.toBool;}> val)

:: <{StdOverloaded.toReal;}> = {StdOverloaded.toReal}
StdOverloaded.get_toReal_24 rec = select rec (<{StdOverloaded.toReal;}> a1 -> a1)
StdOverloaded.set_toReal_24 rec val = select rec (<{StdOverloaded.toReal;}>  a1 -> <{StdOverloaded.toReal;}> val)

:: <{StdOverloaded.toString;}> = {StdOverloaded.toString}
StdOverloaded.get_toString_25 rec = select rec (<{StdOverloaded.toString;}> a1 -> a1)
StdOverloaded.set_toString_25 rec val = select rec (<{StdOverloaded.toString;}>  a1 -> <{StdOverloaded.toString;}> val)

:: <{StdOverloaded.fromInt;}> = {StdOverloaded.fromInt}
StdOverloaded.get_fromInt_26 rec = select rec (<{StdOverloaded.fromInt;}> a1 -> a1)
StdOverloaded.set_fromInt_26 rec val = select rec (<{StdOverloaded.fromInt;}>  a1 -> <{StdOverloaded.fromInt;}> val)

:: <{StdOverloaded.fromChar;}> = {StdOverloaded.fromChar}
StdOverloaded.get_fromChar_27 rec = select rec (<{StdOverloaded.fromChar;}> a1 -> a1)
StdOverloaded.set_fromChar_27 rec val = select rec (<{StdOverloaded.fromChar;}>  a1 -> <{StdOverloaded.fromChar;}> val)

:: <{StdOverloaded.fromBool;}> = {StdOverloaded.fromBool}
StdOverloaded.get_fromBool_28 rec = select rec (<{StdOverloaded.fromBool;}> a1 -> a1)
StdOverloaded.set_fromBool_28 rec val = select rec (<{StdOverloaded.fromBool;}>  a1 -> <{StdOverloaded.fromBool;}> val)

:: <{StdOverloaded.fromReal;}> = {StdOverloaded.fromReal}
StdOverloaded.get_fromReal_29 rec = select rec (<{StdOverloaded.fromReal;}> a1 -> a1)
StdOverloaded.set_fromReal_29 rec val = select rec (<{StdOverloaded.fromReal;}>  a1 -> <{StdOverloaded.fromReal;}> val)

:: <{StdOverloaded.fromString;}> = {StdOverloaded.fromString}
StdOverloaded.get_fromString_30 rec = select rec (<{StdOverloaded.fromString;}> a1 -> a1)
StdOverloaded.set_fromString_30 rec val = select rec (<{StdOverloaded.fromString;}>  a1 -> <{StdOverloaded.fromString;}> val)

:: <{StdOverloaded.ln;}> = {StdOverloaded.ln}
StdOverloaded.get_ln_31 rec = select rec (<{StdOverloaded.ln;}> a1 -> a1)
StdOverloaded.set_ln_31 rec val = select rec (<{StdOverloaded.ln;}>  a1 -> <{StdOverloaded.ln;}> val)

:: <{StdOverloaded.log10;}> = {StdOverloaded.log10}
StdOverloaded.get_log10_32 rec = select rec (<{StdOverloaded.log10;}> a1 -> a1)
StdOverloaded.set_log10_32 rec val = select rec (<{StdOverloaded.log10;}>  a1 -> <{StdOverloaded.log10;}> val)

:: <{StdOverloaded.exp;}> = {StdOverloaded.exp}
StdOverloaded.get_exp_33 rec = select rec (<{StdOverloaded.exp;}> a1 -> a1)
StdOverloaded.set_exp_33 rec val = select rec (<{StdOverloaded.exp;}>  a1 -> <{StdOverloaded.exp;}> val)

:: <{StdOverloaded.sqrt;}> = {StdOverloaded.sqrt}
StdOverloaded.get_sqrt_34 rec = select rec (<{StdOverloaded.sqrt;}> a1 -> a1)
StdOverloaded.set_sqrt_34 rec val = select rec (<{StdOverloaded.sqrt;}>  a1 -> <{StdOverloaded.sqrt;}> val)

:: <{StdOverloaded.sin;}> = {StdOverloaded.sin}
StdOverloaded.get_sin_35 rec = select rec (<{StdOverloaded.sin;}> a1 -> a1)
StdOverloaded.set_sin_35 rec val = select rec (<{StdOverloaded.sin;}>  a1 -> <{StdOverloaded.sin;}> val)

:: <{StdOverloaded.cos;}> = {StdOverloaded.cos}
StdOverloaded.get_cos_36 rec = select rec (<{StdOverloaded.cos;}> a1 -> a1)
StdOverloaded.set_cos_36 rec val = select rec (<{StdOverloaded.cos;}>  a1 -> <{StdOverloaded.cos;}> val)

:: <{StdOverloaded.tan;}> = {StdOverloaded.tan}
StdOverloaded.get_tan_37 rec = select rec (<{StdOverloaded.tan;}> a1 -> a1)
StdOverloaded.set_tan_37 rec val = select rec (<{StdOverloaded.tan;}>  a1 -> <{StdOverloaded.tan;}> val)

:: <{StdOverloaded.asin;}> = {StdOverloaded.asin}
StdOverloaded.get_asin_38 rec = select rec (<{StdOverloaded.asin;}> a1 -> a1)
StdOverloaded.set_asin_38 rec val = select rec (<{StdOverloaded.asin;}>  a1 -> <{StdOverloaded.asin;}> val)

:: <{StdOverloaded.acos;}> = {StdOverloaded.acos}
StdOverloaded.get_acos_39 rec = select rec (<{StdOverloaded.acos;}> a1 -> a1)
StdOverloaded.set_acos_39 rec val = select rec (<{StdOverloaded.acos;}>  a1 -> <{StdOverloaded.acos;}> val)

:: <{StdOverloaded.atan;}> = {StdOverloaded.atan}
StdOverloaded.get_atan_40 rec = select rec (<{StdOverloaded.atan;}> a1 -> a1)
StdOverloaded.set_atan_40 rec val = select rec (<{StdOverloaded.atan;}>  a1 -> <{StdOverloaded.atan;}> val)

:: <{StdOverloaded.sinh;}> = {StdOverloaded.sinh}
StdOverloaded.get_sinh_41 rec = select rec (<{StdOverloaded.sinh;}> a1 -> a1)
StdOverloaded.set_sinh_41 rec val = select rec (<{StdOverloaded.sinh;}>  a1 -> <{StdOverloaded.sinh;}> val)

:: <{StdOverloaded.cosh;}> = {StdOverloaded.cosh}
StdOverloaded.get_cosh_42 rec = select rec (<{StdOverloaded.cosh;}> a1 -> a1)
StdOverloaded.set_cosh_42 rec val = select rec (<{StdOverloaded.cosh;}>  a1 -> <{StdOverloaded.cosh;}> val)

:: <{StdOverloaded.tanh;}> = {StdOverloaded.tanh}
StdOverloaded.get_tanh_43 rec = select rec (<{StdOverloaded.tanh;}> a1 -> a1)
StdOverloaded.set_tanh_43 rec val = select rec (<{StdOverloaded.tanh;}>  a1 -> <{StdOverloaded.tanh;}> val)

:: <{StdOverloaded.asinh;}> = {StdOverloaded.asinh}
StdOverloaded.get_asinh_44 rec = select rec (<{StdOverloaded.asinh;}> a1 -> a1)
StdOverloaded.set_asinh_44 rec val = select rec (<{StdOverloaded.asinh;}>  a1 -> <{StdOverloaded.asinh;}> val)

:: <{StdOverloaded.acosh;}> = {StdOverloaded.acosh}
StdOverloaded.get_acosh_45 rec = select rec (<{StdOverloaded.acosh;}> a1 -> a1)
StdOverloaded.set_acosh_45 rec val = select rec (<{StdOverloaded.acosh;}>  a1 -> <{StdOverloaded.acosh;}> val)

:: <{StdOverloaded.atanh;}> = {StdOverloaded.atanh}
StdOverloaded.get_atanh_46 rec = select rec (<{StdOverloaded.atanh;}> a1 -> a1)
StdOverloaded.set_atanh_46 rec val = select rec (<{StdOverloaded.atanh;}>  a1 -> <{StdOverloaded.atanh;}> val)

:: <{StdOverloaded.inc;}> = {StdOverloaded.inc}
StdOverloaded.get_inc_47 rec = select rec (<{StdOverloaded.inc;}> a1 -> a1)
StdOverloaded.set_inc_47 rec val = select rec (<{StdOverloaded.inc;}>  a1 -> <{StdOverloaded.inc;}> val)

:: <{StdOverloaded.dec;}> = {StdOverloaded.dec}
StdOverloaded.get_dec_48 rec = select rec (<{StdOverloaded.dec;}> a1 -> a1)
StdOverloaded.set_dec_48 rec val = select rec (<{StdOverloaded.dec;}>  a1 -> <{StdOverloaded.dec;}> val)

