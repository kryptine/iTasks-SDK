|| ?module? StdReal


StdReal.entier !a_0 = error "no AnyCodeExpr"
<{StdReal.+_1}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdReal.-_2}> !a_0 !b_1 = error "no AnyCodeExpr"
StdReal.zero_3 = error "no AnyCodeExpr"
<{StdReal.*_4}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdReal./_5}> !a_0 !b_1 = error "no AnyCodeExpr"
StdReal.one_6 = error "no AnyCodeExpr"
<{StdReal.^_7}> !a_0 !b_1 = error "no AnyCodeExpr"
StdReal.abs_8 !x_0 = error "no AnyCodeExpr"
<{StdReal.==_11}> !a_0 !b_1 = error "no AnyCodeExpr"
<{StdReal.<_12}> !a_0 !b_1 = error "no AnyCodeExpr"
StdReal.sign_9 !x_0 = if (<{StdReal.==_11}> x_0 0) 0 (if (<{StdReal.<_12}> x_0 0) -1 1)
<{StdReal.~_10}> !x_0 = error "no AnyCodeExpr"
StdReal.toReal_13 !a_0 = error "no AnyCodeExpr"
StdReal.toReal_14 !a_0 = error "no AnyCodeExpr"
StdReal.toReal2_35 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if (<{StdInt.==_16}> posn_3 len_1) (<{StdReal.*_4}> (<{StdReal.*_4}> val_4 dval_6) (<{StdReal.^_7}> 10 (StdReal.toReal_13 (<{StdInt.*_9}> eneg_8 eval_9)))) (let c_1_0 = _SystemArray.get_select_3 _vArray_0 s_2 posn_3, n_1_1 = <{StdInt.-_7}> (StdInt.toInt_20 c_1_0) (StdInt.toInt_20 '0'), digit_1_2 = StdReal._f37_37 (StdBool.not (<{StdInt.<_17}> n_1_1 0)) n_1_1 in if (StdReal.toReal2_35_select0 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 1) (<{StdReal.+_1}> (StdReal.toReal_13 n_1_1) (<{StdReal.*_4}> 10 val_4)) dec_new_5 dval_6 exp_7 eneg_8 eval_9) (if (StdReal.toReal2_35_select1 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 1) (<{StdReal.+_1}> (StdReal.toReal_13 n_1_1) (<{StdReal.*_4}> 10 val_4)) dec_new_5 (<{StdReal./_5}> dval_6 10) exp_7 eneg_8 eval_9) (if (StdReal.toReal2_35_select2 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 1) val_4 dec_new_5 dval_6 exp_7 eneg_8 (<{StdInt.+_6}> n_1_1 (<{StdInt.*_9}> 10 eval_9))) (if (StdReal.toReal2_35_select3 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 1) val_4 True 1 exp_7 eneg_8 eval_9) (if (StdReal.toReal2_35_select4 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (if (StdReal.toReal2_35_select5 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 2) val_4 dec_new_5 dval_6 True -1 0) (if (StdReal.toReal2_35_select6 c_1_0 n_1_1 digit_1_2 _vArray_0 len_1 s_2 posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 2) val_4 dec_new_5 dval_6 True 1 0) (if (<{StdInt.<_17}> posn_3 (<{StdInt.-_7}> len_1 1)) (StdReal.toReal2_35 _vArray_0 len_1 s_2 (<{StdInt.+_6}> posn_3 1) val_4 dec_new_5 dval_6 True 1 0) 0))) 0)))))
StdReal.toReal2_35_select0 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if digit_1_2 (if (StdBool.not dec_new_5) (StdBool.not exp_7) False) False
StdReal.toReal2_35_select1 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if digit_1_2 (if dec_new_5 (StdBool.not exp_7) False) False
StdReal.toReal2_35_select2 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if digit_1_2 exp_7 False
StdReal.toReal2_35_select3 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if (StdBool.not dec_new_5) (if (StdBool.not exp_7) (<{StdChar.==_18}> c_1_0 '.') False) False
StdReal.toReal2_35_select4 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if (StdBool.not exp_7) (if (<{StdChar.==_18}> c_1_0 'e') True (<{StdChar.==_18}> c_1_0 'E')) False
StdReal.toReal2_35_select5 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if (<{StdInt.<_17}> posn_3 (<{StdInt.-_7}> len_1 2)) (<{StdChar.==_18}> (_SystemArray.get_select_3 _vArray_0 s_2 (<{StdInt.+_6}> posn_3 1)) '-') False
StdReal.toReal2_35_select6 c_1_0 n_1_1 digit_1_2 !_vArray_0 !len_1 s_2 !posn_3 val_4 dec_new_5 dval_6 exp_7 eneg_8 eval_9 = if (<{StdInt.<_17}> posn_3 (<{StdInt.-_7}> len_1 2)) (<{StdChar.==_18}> (_SystemArray.get_select_3 _vArray_0 s_2 (<{StdInt.+_6}> posn_3 1)) '+') False
StdReal._f37_37 !_x_0 n_1 = select _x_0 (True -> StdBool.not (<{StdInt.<_17}> 9 n_1)) (_ -> False)
StdReal.toReal2_36 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if (<{StdInt.==_16}> posn_2 len_0) (<{StdReal.*_4}> (<{StdReal.*_4}> val_3 dval_5) (<{StdReal.^_7}> 10 (StdReal.toReal_13 (<{StdInt.*_9}> eneg_7 eval_8)))) (let c_1_0 = _SystemArray.select_19 s_1 posn_2, n_1_1 = <{StdInt.-_7}> (StdInt.toInt_20 c_1_0) (StdInt.toInt_20 '0'), digit_1_2 = StdReal._f38_38 (StdBool.not (<{StdInt.<_17}> n_1_1 0)) n_1_1 in if (StdReal.toReal2_36_select0 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 1) (<{StdReal.+_1}> (StdReal.toReal_13 n_1_1) (<{StdReal.*_4}> 10 val_3)) dec_new_4 dval_5 exp_6 eneg_7 eval_8) (if (StdReal.toReal2_36_select1 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 1) (<{StdReal.+_1}> (StdReal.toReal_13 n_1_1) (<{StdReal.*_4}> 10 val_3)) dec_new_4 (<{StdReal./_5}> dval_5 10) exp_6 eneg_7 eval_8) (if (StdReal.toReal2_36_select2 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 1) val_3 dec_new_4 dval_5 exp_6 eneg_7 (<{StdInt.+_6}> n_1_1 (<{StdInt.*_9}> 10 eval_8))) (if (StdReal.toReal2_36_select3 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 1) val_3 True 1 exp_6 eneg_7 eval_8) (if (StdReal.toReal2_36_select4 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (if (StdReal.toReal2_36_select5 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 2) val_3 dec_new_4 dval_5 True -1 0) (if (StdReal.toReal2_36_select6 c_1_0 n_1_1 digit_1_2 len_0 s_1 posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 2) val_3 dec_new_4 dval_5 True 1 0) (if (<{StdInt.<_17}> posn_2 (<{StdInt.-_7}> len_0 1)) (StdReal.toReal2_36 len_0 s_1 (<{StdInt.+_6}> posn_2 1) val_3 dec_new_4 dval_5 True 1 0) 0))) 0)))))
StdReal.toReal2_36_select0 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if digit_1_2 (if (StdBool.not dec_new_4) (StdBool.not exp_6) False) False
StdReal.toReal2_36_select1 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if digit_1_2 (if dec_new_4 (StdBool.not exp_6) False) False
StdReal.toReal2_36_select2 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if digit_1_2 exp_6 False
StdReal.toReal2_36_select3 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if (StdBool.not dec_new_4) (if (StdBool.not exp_6) (<{StdChar.==_18}> c_1_0 '.') False) False
StdReal.toReal2_36_select4 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if (StdBool.not exp_6) (if (<{StdChar.==_18}> c_1_0 'e') True (<{StdChar.==_18}> c_1_0 'E')) False
StdReal.toReal2_36_select5 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if (<{StdInt.<_17}> posn_2 (<{StdInt.-_7}> len_0 2)) (<{StdChar.==_18}> (_SystemArray.select_19 s_1 (<{StdInt.+_6}> posn_2 1)) '-') False
StdReal.toReal2_36_select6 c_1_0 n_1_1 digit_1_2 !len_0 s_1 !posn_2 val_3 dec_new_4 dval_5 exp_6 eneg_7 eval_8 = if (<{StdInt.<_17}> posn_2 (<{StdInt.-_7}> len_0 2)) (<{StdChar.==_18}> (_SystemArray.select_19 s_1 (<{StdInt.+_6}> posn_2 1)) '+') False
StdReal._f38_38 !_x_0 n_1 = select _x_0 (True -> StdBool.not (<{StdInt.<_17}> 9 n_1)) (_ -> False)
StdReal.toReal_15 !s_0 = let len_1_0 = _SystemArray.size_20 s_0 in if (<{StdInt.==_16}> len_1_0 0) 0 (let first_2_0 = _SystemArray.select_19 s_0 0 in if (<{StdChar.==_18}> first_2_0 '-') (<{StdReal.~_10}> (StdReal.toReal2_36 len_1_0 s_0 1 0 False 1 False 0 0)) (if (<{StdChar.==_18}> first_2_0 '+') (StdReal.toReal2_36 len_1_0 s_0 1 0 False 1 False 0 0) (StdReal.toReal2_36 len_1_0 s_0 0 0 False 1 False 0 0)))
StdReal.fromReal_16 !a_0 = error "no AnyCodeExpr"
StdReal.fromReal_17 !a_0 = error "no AnyCodeExpr"
StdReal.fromReal_18 !a_0 = error "no AnyCodeExpr"
StdReal.ln_19 !a_0 = error "no AnyCodeExpr"
StdReal.log10_20 !a_0 = error "no AnyCodeExpr"
StdReal.exp_21 !a_0 = error "no AnyCodeExpr"
StdReal.sqrt_22 !a_0 = error "no AnyCodeExpr"
StdReal.sin_23 !a_0 = error "no AnyCodeExpr"
StdReal.cos_24 !a_0 = error "no AnyCodeExpr"
StdReal.tan_25 !a_0 = error "no AnyCodeExpr"
StdReal.asin_26 !a_0 = error "no AnyCodeExpr"
StdReal.acos_27 !a_0 = error "no AnyCodeExpr"
StdReal.atan_28 !a_0 = error "no AnyCodeExpr"
StdReal.sinh_29 !x_0 = <{StdReal.*_4}> (<{StdReal.-_2}> (StdReal.exp_21 x_0) (StdReal.exp_21 (<{StdReal.~_10}> x_0))) 0.5
StdReal.cosh_30 !x_0 = <{StdReal.*_4}> (<{StdReal.+_1}> (StdReal.exp_21 x_0) (StdReal.exp_21 (<{StdReal.~_10}> x_0))) 0.5
StdReal.tanh_31 !x_0 = let expx_1_0 = StdReal.exp_21 x_0, expmx_1_1 = StdReal.exp_21 (<{StdReal.~_10}> x_0) in <{StdReal./_5}> (<{StdReal.-_2}> expx_1_0 expmx_1_1) (<{StdReal.+_1}> expx_1_0 expmx_1_1)
StdReal.asinh_32 !x_0 = StdReal.ln_19 (<{StdReal.+_1}> x_0 (StdReal.sqrt_22 (<{StdReal.+_1}> (<{StdReal.*_4}> x_0 x_0) 1)))
StdReal.acosh_33 !x_0 = StdReal.ln_19 (<{StdReal.+_1}> x_0 (StdReal.sqrt_22 (<{StdReal.-_2}> (<{StdReal.*_4}> x_0 x_0) 1)))
StdReal.atanh_34 !x_0 = <{StdReal.*_4}> (StdReal.ln_19 (<{StdReal./_5}> (<{StdReal.+_1}> 1 x_0) (<{StdReal.-_2}> 1 x_0))) 0.5


|| Converted Records
