|| ?module? Text


Text.foldl_37 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Text.foldl_37 op_0 (op_0 r_1 a_1_0) x_1_1) 
Text.anon_22 !_vArray_0 !s_1 a_2 = <{StdInt.+_6}> s_1 (_SystemArray.get_size_4 _vArray_0 a_2)
Text.copyChars_24 !offset_0 !i_1 !num_2 !src_3 !dst_4 = if (<{StdInt.==_16}> i_1 num_2) dst_4 (Text.copyChars_24 offset_0 (<{StdInt.+_6}> i_1 StdInt.one_11) num_2 src_3 (_SystemArray.update_21 dst_4 (<{StdInt.+_6}> offset_0 i_1) (_SystemArray.select_19 src_3 i_1)))
<{Text.concat`_23}> !_x_0 !dst_1 !_x_2 = select _x_0 (_predefined._Nil -> dst_1) (_predefined._Cons x_1_0 xs_1_1 -> <{Text.concat`_23}> xs_1_1 (Text.copyChars_24 _x_2 0 (_SystemArray.size_20 x_1_0) x_1_0 dst_1) (<{StdInt.+_6}> _x_2 (_SystemArray.size_20 x_1_0))) 
Text.anon_38 !s_0 !a_1 = <{StdInt.+_6}> s_0 (_SystemArray.size_20 a_1)
Text.foldl_39 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Text.foldl_39 (Text.anon_38 r_0 a_1_0) x_1_1) 
Text.concat_0 !xs_0 = <{Text.concat`_23}> xs_0 (_SystemArray.createArray_17 (Text.foldl_39 0 xs_0) '\0') 0
Text.dropChars_1 !n_0 !s_1 = <{StdString.%_10}> s_1 (_Tuple2 n_0 (<{StdInt.-_7}> (<{StdInt.-_7}> (<{StdInt.+_6}> n_0 (_SystemArray.size_20 s_1)) n_0) 1))
Text.endsWith_2 !needle_0 !haystack_1 = let !s_needle_1_0 = _SystemArray.size_20 needle_0, !s_haystack_1_1 = _SystemArray.size_20 haystack_1 in if (StdBool.not (<{StdInt.<_17}> s_haystack_1_1 s_needle_1_0)) (<{StdString.==_2}> needle_0 (<{StdString.%_10}> haystack_1 (_Tuple2 (<{StdInt.-_7}> s_haystack_1_1 s_needle_1_0) (<{StdInt.-_7}> s_haystack_1_1 1)))) False
Text.equalStringOrIndexOfNext_30 !i_0 !offs_1 !max_offs_2 !needle_3 !haystack_4 = if (<{StdInt.<_17}> i_0 (_SystemArray.size_20 needle_3)) (if (<{StdChar.==_18}> (_SystemArray.select_19 needle_3 i_0) (_SystemArray.select_19 haystack_4 (<{StdInt.+_6}> i_0 offs_1))) (Text.equalStringOrIndexOfNext_30 (<{StdInt.+_6}> i_0 1) offs_1 max_offs_2 needle_3 haystack_4) (<{Text.indexOf`_29}> (<{StdInt.+_6}> offs_1 1) (_SystemArray.select_19 needle_3 0) max_offs_2 needle_3 haystack_4)) offs_1
<{Text.indexOf`_29}> !offs_0 !needleChar0_1 !max_offs_2 !needle_3 !haystack_4 = if (StdBool.not (<{StdInt.<_17}> max_offs_2 offs_0)) (if (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 haystack_4 offs_0) needleChar0_1)) (<{Text.indexOf`_29}> (<{StdInt.+_6}> offs_0 1) needleChar0_1 max_offs_2 needle_3 haystack_4) (Text.equalStringOrIndexOfNext_30 1 offs_0 max_offs_2 needle_3 haystack_4)) -1
Text.indexOfAfter_4 !offs_0 !needle_1 !haystack_2 = if (<{StdInt.==_16}> (_SystemArray.size_20 needle_1) 0) -1 (<{Text.indexOf`_29}> offs_0 (_SystemArray.select_19 needle_1 0) (<{StdInt.-_7}> (_SystemArray.size_20 haystack_2) (_SystemArray.size_20 needle_1)) needle_1 haystack_2)
Text.indexOf_3 !needle_0 !haystack_1 = Text.indexOfAfter_4 0 needle_0 haystack_1
<{Text.join`_26}> !sep_0 !_x_1 = select _x_1 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons x_1_0 _x_1_1 -> select _x_1_1 (_predefined._Nil -> _predefined._Cons x_1_0 _predefined._Nil) (_ -> _predefined._Cons x_1_0 (_predefined._Cons sep_0 (<{Text.join`_26}> sep_0 _x_1_1)))) 
Text.join_5 !sep_0 !xs_1 = Text.concat_0 (<{Text.join`_26}> sep_0 xs_1)
Text.equalStringOrIndexOfPrevious_28 !i_0 !offs_1 !needle_2 !haystack_3 = if (<{StdInt.<_17}> i_0 (_SystemArray.size_20 needle_2)) (if (<{StdChar.==_18}> (_SystemArray.select_19 needle_2 i_0) (_SystemArray.select_19 haystack_3 (<{StdInt.+_6}> i_0 offs_1))) (Text.equalStringOrIndexOfPrevious_28 (<{StdInt.+_6}> i_0 1) offs_1 needle_2 haystack_3) (<{Text.lastIndexOf`_27}> (<{StdInt.-_7}> offs_1 1) (_SystemArray.select_19 needle_2 0) needle_2 haystack_3)) offs_1
<{Text.lastIndexOf`_27}> !offs_0 !needleChar0_1 !needle_2 !haystack_3 = if (StdBool.not (<{StdInt.<_17}> offs_0 0)) (if (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 haystack_3 offs_0) needleChar0_1)) (<{Text.lastIndexOf`_27}> (<{StdInt.-_7}> offs_0 1) needleChar0_1 needle_2 haystack_3) (Text.equalStringOrIndexOfPrevious_28 1 offs_0 needle_2 haystack_3)) -1
Text.lastIndexOf_6 !needle_0 !haystack_1 = if (<{StdInt.==_16}> (_SystemArray.size_20 needle_0) 0) -1 (<{Text.lastIndexOf`_27}> (<{StdInt.-_7}> (_SystemArray.size_20 haystack_1) (_SystemArray.size_20 needle_0)) (_SystemArray.select_19 needle_0 0) needle_0 haystack_1)
<{Text.cu;142;49_33}> !_vArray_0 !_vArray_1 c_2 s_3 boundary_4 c_a_5 !g_i_6 !g_s_7 = if (StdBool.not (<{StdInt.<_17}> g_s_7 g_i_6)) (<{Text.cu;142;49_33}> _vArray_0 _vArray_1 c_2 s_3 boundary_4 (_SystemArray.get_update_5 _vArray_1 c_a_5 g_i_6 (<{Text._if;142;12_50}> (<{StdInt.<_17}> g_i_6 boundary_4) c_2 s_3 g_i_6 boundary_4 _vArray_0)) (<{StdInt.+_6}> g_i_6 StdInt.one_11) g_s_7) c_a_5
<{Text._if;142;12_50}> !_x_0 c_1 s_2 g_i_3 boundary_4 _vArray_5 = select _x_0 (True -> c_1) (_ -> _SystemArray.get_select_3 _vArray_5 s_2 (<{StdInt.-_7}> g_i_3 boundary_4))
<{Text.cu;142;49_40}> !_vArray_0 c_1 s_2 boundary_3 c_a_4 !g_i_5 !g_s_6 = if (StdBool.not (<{StdInt.<_17}> g_s_6 g_i_5)) (<{Text.cu;142;49_40}> _vArray_0 c_1 s_2 boundary_3 (_SystemArray.get_update_5 _vArray_0 c_a_4 g_i_5 (<{Text._if;142;12_51}> (<{StdInt.<_17}> g_i_5 boundary_3) c_1 s_2 g_i_5 boundary_3)) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6) c_a_4
<{Text._if;142;12_51}> !_x_0 c_1 s_2 g_i_3 boundary_4 = select _x_0 (True -> c_1) (_ -> _SystemArray.select_19 s_2 (<{StdInt.-_7}> g_i_3 boundary_4))
<{Text.cu;142;49_41}> c_0 s_1 boundary_2 !c_a_3 !g_i_4 !g_s_5 = if (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) (<{Text.cu;142;49_41}> c_0 s_1 boundary_2 (_SystemArray.update_21 c_a_3 g_i_4 (<{Text._if;142;12_52}> (<{StdInt.<_17}> g_i_4 boundary_2) c_0 s_1 g_i_4 boundary_2)) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5) c_a_3
<{Text._if;142;12_52}> !_x_0 c_1 s_2 g_i_3 boundary_4 = select _x_0 (True -> c_1) (_ -> _SystemArray.select_19 s_2 (<{StdInt.-_7}> g_i_3 boundary_4))
Text.lpad_7 !s_0 !w_1 !c_2 = let !boundary_1_0 = <{StdInt.-_7}> w_1 (_SystemArray.size_20 s_0), g_s_1_1 = <{StdInt.-_7}> w_1 1 in <{Text.cu;142;49_41}> c_2 s_0 boundary_1_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s_1_1 StdInt.one_11)) 0 g_s_1_1
Text.non_space_left_31 !_vArray_0 s_1 !size_s_2 !i_3 = if (Text.non_space_left_31_select0 _vArray_0 s_1 size_s_2 i_3) (Text.non_space_left_31 _vArray_0 s_1 size_s_2 (<{StdInt.+_6}> i_3 1)) i_3
Text.non_space_left_31_select0 !_vArray_0 s_1 !size_s_2 !i_3 = if (<{StdInt.<_17}> i_3 size_s_2) (StdChar.isSpace (_SystemArray.get_select_3 _vArray_0 s_1 i_3)) False
Text.non_space_left_42 s_0 !size_s_1 !i_2 = if (Text.non_space_left_42_select0 s_0 size_s_1 i_2) (Text.non_space_left_42 s_0 size_s_1 (<{StdInt.+_6}> i_2 1)) i_2
Text.non_space_left_42_select0 s_0 !size_s_1 !i_2 = if (<{StdInt.<_17}> i_2 size_s_1) (StdChar.isSpace (_SystemArray.select_19 s_0 i_2)) False
Text.ltrim_8 !s_0 = let !non_space_index_1_0 = Text.non_space_left_42 s_0 size_s_1_1 0, size_s_1_1 = _SystemArray.size_20 s_0 in if (<{StdInt.==_16}> non_space_index_1_0 0) s_0 (<{StdString.%_10}> s_0 (_Tuple2 non_space_index_1_0 (<{StdInt.-_7}> size_s_1_1 1)))
Text.subString_14 !start_0 !len_1 !haystack_2 = <{StdString.%_10}> haystack_2 (_Tuple2 start_0 (<{StdInt.-_7}> (<{StdInt.+_6}> start_0 len_1) 1))
Text.replaceSubString_9 !needle_0 !replacement_1 !haystack_2 = let !index_1_0 = Text.indexOf_3 needle_0 haystack_2 in if (<{StdInt.==_16}> index_1_0 -1) haystack_2 (let !start_2_0 = Text.subString_14 0 index_1_0 haystack_2, !end_2_1 = Text.subString_14 (<{StdInt.+_6}> index_1_0 (_SystemArray.size_20 needle_0)) (_SystemArray.size_20 haystack_2) haystack_2 in <{StdString.+++_11}> start_2_0 (<{StdString.+++_11}> replacement_1 (Text.replaceSubString_9 needle_0 replacement_1 end_2_1)))
<{Text.cu;147;38_34}> !_vArray_0 !_vArray_1 s_2 c_3 boundary_4 c_a_5 !g_i_6 !g_s_7 = if (StdBool.not (<{StdInt.<_17}> g_s_7 g_i_6)) (<{Text.cu;147;38_34}> _vArray_0 _vArray_1 s_2 c_3 boundary_4 (_SystemArray.get_update_5 _vArray_1 c_a_5 g_i_6 (<{Text._if;147;12_53}> (<{StdInt.<_17}> g_i_6 boundary_4) s_2 g_i_6 _vArray_0 c_3)) (<{StdInt.+_6}> g_i_6 StdInt.one_11) g_s_7) c_a_5
<{Text._if;147;12_53}> !_x_0 s_1 g_i_2 _vArray_3 c_4 = select _x_0 (True -> _SystemArray.get_select_3 _vArray_3 s_1 g_i_2) (_ -> c_4)
<{Text.cu;147;38_43}> !_vArray_0 s_1 c_2 boundary_3 c_a_4 !g_i_5 !g_s_6 = if (StdBool.not (<{StdInt.<_17}> g_s_6 g_i_5)) (<{Text.cu;147;38_43}> _vArray_0 s_1 c_2 boundary_3 (_SystemArray.get_update_5 _vArray_0 c_a_4 g_i_5 (<{Text._if;147;12_54}> (<{StdInt.<_17}> g_i_5 boundary_3) s_1 g_i_5 c_2)) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6) c_a_4
<{Text._if;147;12_54}> !_x_0 s_1 g_i_2 c_3 = select _x_0 (True -> _SystemArray.select_19 s_1 g_i_2) (_ -> c_3)
<{Text.cu;147;38_44}> s_0 c_1 boundary_2 !c_a_3 !g_i_4 !g_s_5 = if (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) (<{Text.cu;147;38_44}> s_0 c_1 boundary_2 (_SystemArray.update_21 c_a_3 g_i_4 (<{Text._if;147;12_55}> (<{StdInt.<_17}> g_i_4 boundary_2) s_0 g_i_4 c_1)) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5) c_a_3
<{Text._if;147;12_55}> !_x_0 s_1 g_i_2 c_3 = select _x_0 (True -> _SystemArray.select_19 s_1 g_i_2) (_ -> c_3)
Text.rpad_10 !s_0 !w_1 !c_2 = let !boundary_1_0 = _SystemArray.size_20 s_0, g_s_1_1 = <{StdInt.-_7}> w_1 1 in <{Text.cu;147;38_44}> s_0 c_2 boundary_1_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s_1_1 StdInt.one_11)) 0 g_s_1_1
Text.non_space_right_32 !_vArray_0 s_1 !i_2 = if (Text.non_space_right_32_select0 _vArray_0 s_1 i_2) (Text.non_space_right_32 _vArray_0 s_1 (<{StdInt.-_7}> i_2 1)) i_2
Text.non_space_right_32_select0 !_vArray_0 s_1 !i_2 = if (StdBool.not (<{StdInt.<_17}> i_2 0)) (StdChar.isSpace (_SystemArray.get_select_3 _vArray_0 s_1 i_2)) False
Text.non_space_right_45 s_0 !i_1 = if (Text.non_space_right_45_select0 s_0 i_1) (Text.non_space_right_45 s_0 (<{StdInt.-_7}> i_1 1)) i_1
Text.non_space_right_45_select0 s_0 !i_1 = if (StdBool.not (<{StdInt.<_17}> i_1 0)) (StdChar.isSpace (_SystemArray.select_19 s_0 i_1)) False
Text.rtrim_11 !s_0 = let !non_space_index_1_0 = Text.non_space_right_45 s_0 (<{StdInt.-_7}> size_s_1_1 1), size_s_1_1 = _SystemArray.size_20 s_0 in if (<{StdInt.==_16}> non_space_index_1_0 (<{StdInt.-_7}> size_s_1_1 1)) s_0 (<{StdString.%_10}> s_0 (_Tuple2 0 non_space_index_1_0))
Text.splitAfter_25 !offs_0 !end_1 !sep_2 !s_3 = let index_1_0 = Text.indexOfAfter_4 offs_0 sep_2 s_3 in if (<{StdInt.==_16}> index_1_0 -1) (_predefined._Cons (<{StdString.%_10}> s_3 (_Tuple2 offs_0 end_1)) _predefined._Nil) (_predefined._Cons (<{StdString.%_10}> s_3 (_Tuple2 offs_0 (<{StdInt.-_7}> index_1_0 1))) (Text.splitAfter_25 (<{StdInt.+_6}> index_1_0 (_SystemArray.size_20 sep_2)) end_1 sep_2 s_3))
Text.split_12 !sep_0 !s_1 = Text.splitAfter_25 0 (<{StdInt.-_7}> (_SystemArray.size_20 s_1) 1) sep_0 s_1
Text.startsWith_13 !needle_0 !haystack_1 = let !s_needle_1_0 = _SystemArray.size_20 needle_0 in if (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 haystack_1) s_needle_1_0)) (<{StdString.==_2}> needle_0 (<{StdString.%_10}> haystack_1 (_Tuple2 0 (<{StdInt.-_7}> s_needle_1_0 1)))) False
Text.textSize_15 !s_0 = _SystemArray.size_20 s_0
<{Text.cu;150;32_35}> !_vArray_0 !_vArray_1 c_a_2 !g_i_3 !g_s_4 g_a_5 = if (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.get_uselect_6 _vArray_0 g_a_5 g_i_3 in <{Text.cu;150;32_35}> _vArray_0 _vArray_1 (_SystemArray.get_update_5 _vArray_1 c_a_2 g_i_3 (StdChar.toLower (_predefined.tupsels2v0 _x_1_1))) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_0) c_a_2
<{Text.cu;150;32_46}> !_vArray_0 c_a_1 !g_i_2 !g_s_3 g_a_4 = if (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.uselect_22 g_a_4 g_i_2 in <{Text.cu;150;32_46}> _vArray_0 (_SystemArray.get_update_5 _vArray_0 c_a_1 g_i_2 (StdChar.toLower (_predefined.tupsels2v0 _x_1_1))) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_0) c_a_1
<{Text.cu;150;32_47}> !c_a_0 !g_i_1 !g_s_2 g_a_3 = if (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.uselect_22 g_a_3 g_i_1 in <{Text.cu;150;32_47}> (_SystemArray.update_21 c_a_0 g_i_1 (StdChar.toLower (_predefined.tupsels2v0 _x_1_1))) (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_0) c_a_0
Text.toLowerCase_16 !s_0 = let _x_1_0 = _SystemArray.usize_23 s_0, g_s2_1_1 = <{StdInt.-_7}> (_predefined.tupsels2v0 _x_1_0) 1 in <{Text.cu;150;32_47}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (_predefined.tupsels2v1 _x_1_0)
<{Text.cu;153;32_36}> !_vArray_0 !_vArray_1 c_a_2 !g_i_3 !g_s_4 g_a_5 = if (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.get_uselect_6 _vArray_0 g_a_5 g_i_3 in <{Text.cu;153;32_36}> _vArray_0 _vArray_1 (_SystemArray.get_update_5 _vArray_1 c_a_2 g_i_3 (StdChar.toUpper (_predefined.tupsels2v0 _x_1_1))) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_0) c_a_2
<{Text.cu;153;32_48}> !_vArray_0 c_a_1 !g_i_2 !g_s_3 g_a_4 = if (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.uselect_22 g_a_4 g_i_2 in <{Text.cu;153;32_48}> _vArray_0 (_SystemArray.get_update_5 _vArray_0 c_a_1 g_i_2 (StdChar.toUpper (_predefined.tupsels2v0 _x_1_1))) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_0) c_a_1
<{Text.cu;153;32_49}> !c_a_0 !g_i_1 !g_s_2 g_a_3 = if (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.uselect_22 g_a_3 g_i_1 in <{Text.cu;153;32_49}> (_SystemArray.update_21 c_a_0 g_i_1 (StdChar.toUpper (_predefined.tupsels2v0 _x_1_1))) (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_0) c_a_0
Text.toUpperCase_17 !s_0 = let _x_1_0 = _SystemArray.usize_23 s_0, g_s2_1_1 = <{StdInt.-_7}> (_predefined.tupsels2v0 _x_1_0) 1 in <{Text.cu;153;32_49}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (_predefined.tupsels2v1 _x_1_0)
Text.trim_18 !s_0 = Text.ltrim_8 (Text.rtrim_11 s_0)
Text.upperCaseFirst_19 !_x_0 = select _x_0 ("" -> "") (_ -> <{StdString.:=}> _x_0 (_Tuple2 0 (StdChar.toUpper (_SystemArray.select_19 _x_0 0))))
<{Text.+_20}> !s1_0 !s2_1 = <{StdString.+++_11}> s1_0 s2_1
<{Text.TD;Text;}> _x_0 = _predefined._Nil


|| Converted Records
:: <{Text.Text;}> = {!Text.concat, !Text.dropChars, !Text.endsWith, !Text.indexOf, !Text.indexOfAfter, !Text.join, !Text.lastIndexOf, !Text.lpad, !Text.ltrim, !Text.replaceSubString, !Text.rpad, !Text.rtrim, !Text.split, !Text.startsWith, !Text.subString, !Text.textSize, !Text.toLowerCase, !Text.toUpperCase, !Text.trim, !Text.upperCaseFirst}
Text.get_concat_0 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a1)
Text.get_dropChars_1 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a2)
Text.get_endsWith_2 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a3)
Text.get_indexOf_3 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a4)
Text.get_indexOfAfter_4 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a5)
Text.get_join_5 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a6)
Text.get_lastIndexOf_6 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a7)
Text.get_lpad_7 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a8)
Text.get_ltrim_8 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a9)
Text.get_replaceSubString_9 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a10)
Text.get_rpad_10 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a11)
Text.get_rtrim_11 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a12)
Text.get_split_12 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a13)
Text.get_startsWith_13 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a14)
Text.get_subString_14 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a15)
Text.get_textSize_15 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a16)
Text.get_toLowerCase_16 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a17)
Text.get_toUpperCase_17 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a18)
Text.get_trim_18 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a19)
Text.get_upperCaseFirst_19 rec = select rec (<{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> a20)
Text.set_concat_0 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> val a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_dropChars_1 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 val a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_endsWith_2 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 val a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_indexOf_3 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 val a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_indexOfAfter_4 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 val a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_join_5 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 val a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_lastIndexOf_6 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 val a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_lpad_7 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 val a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_ltrim_8 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 val a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_replaceSubString_9 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 val a11 a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_rpad_10 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 val a12 a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_rtrim_11 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 val a13 a14 a15 a16 a17 a18 a19 a20)
Text.set_split_12 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 val a14 a15 a16 a17 a18 a19 a20)
Text.set_startsWith_13 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 val a15 a16 a17 a18 a19 a20)
Text.set_subString_14 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 val a16 a17 a18 a19 a20)
Text.set_textSize_15 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 val a17 a18 a19 a20)
Text.set_toLowerCase_16 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 val a18 a19 a20)
Text.set_toUpperCase_17 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 val a19 a20)
Text.set_trim_18 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 val a20)
Text.set_upperCaseFirst_19 rec !val = select rec (<{Text.Text;}>  a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> <{Text.Text;}> a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 val)

