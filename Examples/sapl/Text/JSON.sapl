|| ?module? Text.JSON


<{Text.JSON.toJSON`}> !<{_vJSONEncode*_0}> !flag_1 !x_2 = <{Text.JSON._c;433;18_213}> (Text.JSON.get_JSONEncode_s_0 <{_vJSONEncode*_0}> flag_1 x_2)
<{Text.JSON._c;433;18_213}> !_x_0 = select _x_0 (_predefined._Cons node_1_0 _x_1_1 -> select _x_1_1 (_predefined._Nil -> node_1_0) ) (_ -> Text.JSON.JSONError)
Text.JSON.toJSON !<{_vJSONEncode*_0}> !x_1 = <{Text.JSON.toJSON`}> <{_vJSONEncode*_0}> False x_1
Text.JSON.toJSONInField !<{_vJSONEncode*_0}> !x_1 = <{Text.JSON.toJSON`}> <{_vJSONEncode*_0}> True x_1
Text.JSON.fromJSON !<{_vJSONDecode*_0}> !node_1 = _predefined.tupsels2v0 (Text.JSON.get_JSONDecode_s_6 <{_vJSONDecode*_0}> False (_predefined._Cons node_1 _predefined._Nil))
Text.JSON.findChars !i_0 !s_1 = if (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_1)) (let c_1_0 = _SystemArray.select_19 s_1 i_0 in if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1) (<{_predefined._!Cons!}> (_Tuple2 i_0 c_1_0) (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1))) (if (Text.JSON.findChars_select0 c_1_0 i_0 s_1) (<{_predefined._!Cons!}> (_Tuple2 i_0 c_1_0) (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)) (if (<{StdChar.==_18}> c_1_0 '\b') (<{_predefined._!Cons!}> (_Tuple2 i_0 'b') (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)) (if (<{StdChar.==_18}> c_1_0 '\f') (<{_predefined._!Cons!}> (_Tuple2 i_0 'f') (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)) (if (<{StdChar.==_18}> c_1_0 '\n') (<{_predefined._!Cons!}> (_Tuple2 i_0 'n') (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)) (if (<{StdChar.==_18}> c_1_0 '\r') (<{_predefined._!Cons!}> (_Tuple2 i_0 'r') (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)) (if (<{StdChar.==_18}> c_1_0 '\t') (<{_predefined._!Cons!}> (_Tuple2 i_0 't') (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)) (Text.JSON.findChars (<{StdInt.+_6}> i_0 1) s_1)))))))) <{_predefined._!Nil!}>
Text.JSON.findChars_select0 c_1_0 !i_0 !s_1 = if (<{StdChar.==_18}> c_1_0 '"') True (<{StdChar.==_18}> c_1_0 '/')
Text.JSON.copyCharsI !is_0 !id_1 !iend_2 !src_3 !dest_4 = if (<{StdInt.<_17}> is_0 iend_2) (Text.JSON.copyCharsI (<{StdInt.+_6}> is_0 1) (<{StdInt.+_6}> id_1 1) iend_2 src_3 (_SystemArray.update_21 dest_4 id_1 (_SystemArray.select_19 src_3 is_0))) (<{_Tuple4!15}> is_0 id_1 src_3 dest_4)
Text.JSON.copyRemainingChars !is_0 !id_1 !src_2 !dest_3 = if (<{StdInt.<_17}> is_0 (_SystemArray.size_20 src_2)) (Text.JSON.copyRemainingChars (<{StdInt.+_6}> is_0 1) (<{StdInt.+_6}> id_1 1) src_2 (_SystemArray.update_21 dest_3 id_1 (_SystemArray.select_19 src_2 is_0))) dest_3
Text.JSON.copyAndReplaceChars_85 !is_0 !id_1 !reps_2 !src_3 !dest_4 = select reps_2 (<{_predefined._!Cons!}> _x_1_0 rs_1_1 -> select _x_1_0 (_Tuple2 ir_2_0 c_2_1 -> let _x_3_0 = Text.JSON.copyCharsI is_0 id_1 ir_2_0 src_3 dest_4, id_3_1 = _predefined.tupsels4v1 _x_3_0 in Text.JSON.copyAndReplaceChars_85 (<{StdInt.+_6}> (_predefined.tupsels4v0 _x_3_0) 1) (<{StdInt.+_6}> id_3_1 2) rs_1_1 (_predefined.tupsels4v2 _x_3_0) (_SystemArray.update_21 (_SystemArray.update_21 (_predefined.tupsels4v3 _x_3_0) id_3_1 '\\') (<{StdInt.+_6}> id_3_1 1) c_2_1)) ) (<{_predefined._!Nil!}> -> Text.JSON.copyRemainingChars is_0 id_1 src_3 dest_4) 
Text.JSON.jsonEscape !src_0 = let reps_1_0 = Text.JSON.findChars 0 src_0 in <{Text.JSON._c;334;7_214}> reps_1_0 src_0
<{Text.JSON._c;334;7_214}> !reps_0 !src_1 = select reps_0 (<{_predefined._!Nil!}> -> src_1) (_ -> Text.JSON.copyAndReplaceChars_85 0 0 reps_0 src_1 (_SystemArray.createArray_17 (<{StdInt.+_6}> (_SystemArray.size_20 src_1) (StdOverloadedList.Length_63 reps_0)) '\0'))
Text.JSON.rep_86 !_x_0 = select _x_0 ('\\' -> '\\') ('"' -> '"') ('/' -> '/') ('b' -> '\b') ('f' -> '\f') ('n' -> '\n') ('r' -> '\r') ('t' -> '\t') (_ -> _x_0)
Text.JSON.findChars_87 !i_0 !s_1 = if (StdBool.not (<{StdInt.<_17}> (<{StdInt.+_6}> i_0 1) (_SystemArray.size_20 s_1))) <{_predefined._!Nil!}> (if (<{StdChar.==_18}> (_SystemArray.select_19 s_1 i_0) '\\') (let !rc_1_0 = Text.JSON.rep_86 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> i_0 1)) in <{_predefined._!Cons!}> (_Tuple2 i_0 rc_1_0) (Text.JSON.findChars_87 (<{StdInt.+_6}> i_0 2) s_1)) (Text.JSON.findChars_87 (<{StdInt.+_6}> i_0 1) s_1))
Text.JSON.copyAndReplaceChars_88 !is_0 !id_1 !reps_2 !src_3 !dest_4 = select reps_2 (<{_predefined._!Cons!}> _x_1_0 rs_1_1 -> select _x_1_0 (_Tuple2 ir_2_0 c_2_1 -> let _x_3_0 = Text.JSON.copyCharsI is_0 id_1 ir_2_0 src_3 dest_4, id_3_1 = _predefined.tupsels4v1 _x_3_0 in Text.JSON.copyAndReplaceChars_88 (<{StdInt.+_6}> (_predefined.tupsels4v0 _x_3_0) 2) (<{StdInt.+_6}> id_3_1 1) rs_1_1 (_predefined.tupsels4v2 _x_3_0) (_SystemArray.update_21 (_predefined.tupsels4v3 _x_3_0) id_3_1 c_2_1)) ) (<{_predefined._!Nil!}> -> Text.JSON.copyRemainingChars is_0 id_1 src_3 dest_4) 
Text.JSON.jsonUnescape !src_0 = let reps_1_0 = Text.JSON.findChars_87 0 src_0 in <{Text.JSON._c;374;7_215}> reps_1_0 src_0
<{Text.JSON._c;374;7_215}> !reps_0 !src_1 = select reps_0 (<{_predefined._!Nil!}> -> src_1) (_ -> Text.JSON.copyAndReplaceChars_88 0 0 reps_0 src_1 (_SystemArray.createArray_17 (<{StdInt.-_7}> (_SystemArray.size_20 src_1) (StdOverloadedList.length_44 reps_0)) '\0'))
Text.JSON.findField_90 !<{_v==_0}> s_1 !_x_2 = select _x_2 (_predefined._Nil -> Data.Maybe.Nothing) (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> if (<{StdOverloaded.get_==_6}> <{_v==_0}> l_2_0 s_1) (Data.Maybe.Just x_2_1) (Text.JSON.findField_90 <{_v==_0}> s_1 xs_1_1)) ) 
Text.JSON.findField_195 s_0 !_x_1 = select _x_1 (_predefined._Nil -> Data.Maybe.Nothing) (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> if (<{StdString.==_2}> l_2_0 s_0) (Data.Maybe.Just x_2_1) (Text.JSON.findField_195 s_0 xs_1_1)) ) 
Text.JSON.findNode_89 !_x_0 !node_1 = select _x_0 (_predefined._Nil -> Data.Maybe.Just node_1) (_predefined._Cons s_1_0 ss_1_1 -> select node_1 (Text.JSON.JSONObject fields_2_0 -> <{Text.JSON._c;643;11_216}> (Text.JSON.findField_195 s_1_0 fields_2_0) ss_1_1) (Text.JSON.JSONArray items_2_0 -> let index_3_0 = StdInt.toInt_23 s_1_0 in if (Text.JSON.findNode_89_select0 index_3_0 items_2_0 s_1_0 ss_1_1 _x_0 node_1) (Text.JSON.findNode_89 ss_1_1 (<{StdList.!!}> items_2_0 index_3_0)) Data.Maybe.Nothing) ) (_ -> Data.Maybe.Nothing)
Text.JSON.findNode_89_select0 index_3_0 items_2_0 s_1_0 ss_1_1 !_x_0 !node_1 = if (StdBool.not (<{StdInt.<_17}> index_3_0 0)) (<{StdInt.<_17}> index_3_0 (StdList.length_47 items_2_0)) False
<{Text.JSON._c;643;11_216}> !_x_0 ss_1 = select _x_0 (Data.Maybe.Just f_1_0 -> Text.JSON.findNode_89 ss_1 f_1_0) (Data.Maybe.Nothing -> Data.Maybe.Nothing) 
Text.JSON.jsonQuery !<{_vJSONDecode*_0}> !path_1 !node_2 = <{Text.JSON._c;636;7_217}> (Text.JSON.findNode_89 (Text.split_12 "/" path_1) node_2) <{_vJSONDecode*_0}>
<{Text.JSON._c;636;7_217}> !_x_0 <{_vJSONDecode*_1}> = select _x_0 (Data.Maybe.Just child_1_0 -> Text.JSON.fromJSON <{_vJSONDecode*_1}> child_1_0) (Data.Maybe.Nothing -> Data.Maybe.Nothing) 
<{Text.JSON.c;685;115_93}> !_vPretty_0 !g_l_1 = <{Text.JSON.g_c1;685;130_219}> g_l_1 _vPretty_0
<{Text.JSON.g_c1;685;130_219}> !g_l_0 _vPretty_1 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.g_c2;685;130_218}> g_h_1_0 _vPretty_1 g_t_1_1) (_ -> _predefined._Nil)
<{Text.JSON.g_c2;685;130_218}> !g_h_0 _vPretty_1 g_t_2 = select g_h_0 (_Tuple2 label_1_0 val_1_1 -> _predefined._Cons (<{Text.PPrint.<->}> (Text.PPrint.dquotes (Text.PPrint.string label_1_0)) (<{Text.PPrint.<->}> Text.PPrint.colon (Text.PPrint.get_pretty_0 _vPretty_1 val_1_1))) (<{Text.JSON.c;685;115_93}> _vPretty_1 g_t_2)) (_ -> <{Text.JSON.c;685;115_93}> _vPretty_1 g_t_2)
<{Text.JSON.c;685;115_196}> !g_l_0 = <{Text.JSON.g_c1;685;130_222}> g_l_0
Text.JSON.pretty_109 !_x_0 = select _x_0 (Text.JSON.JSONNull -> Text.PPrint.string "null") (Text.JSON.JSONBool x_1_0 -> Text.PPrint.string (<{Text.JSON._if;680;43_220}> x_1_0)) (Text.JSON.JSONInt x_1_0 -> Text.PPrint.string (StdString.toString_5 x_1_0)) (Text.JSON.JSONReal x_1_0 -> Text.PPrint.string (StdString.toString_7 x_1_0)) (Text.JSON.JSONString x_1_0 -> Text.PPrint.dquotes (Text.PPrint.string (Text.JSON.jsonEscape x_1_0))) (Text.JSON.JSONArray nodes_1_0 -> Text.PPrint.list (StdList.map Text.JSON.pretty_109 nodes_1_0)) (Text.JSON.JSONObject attr_1_0 -> Text.PPrint.encloseSep Text.PPrint.lbrace Text.PPrint.rbrace Text.PPrint.comma (<{Text.JSON.c;685;115_196}> attr_1_0)) (Text.JSON.JSONRaw x_1_0 -> Text.PPrint.string x_1_0) (Text.JSON.JSONError -> Text.PPrint.string "null") 
<{Text.JSON.g_c1;685;130_222}> !g_l_0 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.g_c2;685;130_221}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{Text.JSON.g_c2;685;130_221}> !g_h_0 g_t_1 = select g_h_0 (_Tuple2 label_1_0 val_1_1 -> _predefined._Cons (<{Text.PPrint.<->}> (Text.PPrint.dquotes (Text.PPrint.string label_1_0)) (<{Text.PPrint.<->}> Text.PPrint.colon (Text.JSON.pretty_109 val_1_1))) (<{Text.JSON.c;685;115_196}> g_t_1)) (_ -> <{Text.JSON.c;685;115_196}> g_t_1)
<{Text.JSON._if;680;43_220}> !x_0 = select x_0 (True -> "true") (_ -> "false")
Text.JSON.jsonPrettyPrint json_0 = Text.PPrint.display (Text.PPrint.renderPretty 0 400 (Text.JSON.pretty_109 json_0))
Text.JSON.foldl_111 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Text.JSON.foldl_111 op_0 (op_0 r_1 a_1_0) x_1_1) 
Text.JSON.foldl_110 op_0 r_1 !_x_2 = select _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> Text.JSON.foldl_110 op_0 (op_0 r_1 a_1_0) x_1_1) 
Text.JSON.count_more_escape_chars_66 !i_0 !s_1 !n_2 = if (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_1)) (let c_1_0 = _SystemArray.select_19 s_1 i_0 in if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.count_more_escape_chars_66 (<{StdInt.+_6}> i_0 1) s_1 n_2) (Text.JSON.count_more_escape_chars_66 (<{StdInt.+_6}> i_0 1) s_1 (<{StdInt.+_6}> n_2 1))) (if (Text.JSON.count_more_escape_chars_66_select0 c_1_0 i_0 s_1 n_2) (Text.JSON.count_more_escape_chars_66 (<{StdInt.+_6}> i_0 1) s_1 (<{StdInt.+_6}> n_2 1)) (Text.JSON.count_more_escape_chars_66 (<{StdInt.+_6}> i_0 1) s_1 n_2))) n_2
Text.JSON.count_more_escape_chars_66_select0 c_1_0 !i_0 !s_1 !n_2 = if (<{StdChar.==_18}> c_1_0 '"') True (if (<{StdChar.==_18}> c_1_0 '/') True (if (<{StdChar.==_18}> c_1_0 '\b') True (if (<{StdChar.==_18}> c_1_0 '\f') True (if (<{StdChar.==_18}> c_1_0 '\n') True (if (<{StdChar.==_18}> c_1_0 '\r') True (<{StdChar.==_18}> c_1_0 '\t'))))))
Text.JSON.count_escape_chars !i_0 !s_1 = if (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_1)) (let c_1_0 = _SystemArray.select_19 s_1 i_0 in if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.count_escape_chars (<{StdInt.+_6}> i_0 1) s_1) (Text.JSON.count_more_escape_chars_66 (<{StdInt.+_6}> i_0 1) s_1 1)) (if (Text.JSON.count_escape_chars_select0 c_1_0 i_0 s_1) (Text.JSON.count_more_escape_chars_66 (<{StdInt.+_6}> i_0 1) s_1 1) (Text.JSON.count_escape_chars (<{StdInt.+_6}> i_0 1) s_1))) 0
Text.JSON.count_escape_chars_select0 c_1_0 !i_0 !s_1 = if (<{StdChar.==_18}> c_1_0 '"') True (if (<{StdChar.==_18}> c_1_0 '/') True (if (<{StdChar.==_18}> c_1_0 '\b') True (if (<{StdChar.==_18}> c_1_0 '\f') True (if (<{StdChar.==_18}> c_1_0 '\n') True (if (<{StdChar.==_18}> c_1_0 '\r') True (<{StdChar.==_18}> c_1_0 '\t'))))))
Text.JSON.anon_64 !s_0 !x_1 = <{StdInt.+_6}> s_0 (Text.JSON.sizeOf x_1)
Text.JSON.foldl_197 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Text.JSON.foldl_197 (Text.JSON.anon_64 r_0 a_1_0) x_1_1) 
Text.JSON.anon_65 !s_0 !_x_1 = select _x_1 (_Tuple2 l_1_0 o_1_1 -> <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> s_0 (_SystemArray.size_20 l_1_0)) 2) 1) (Text.JSON.sizeOf o_1_1)) 
Text.JSON.foldl_198 !r_0 !_x_1 = select _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> Text.JSON.foldl_198 (Text.JSON.anon_65 r_0 a_1_0) x_1_1) 
Text.JSON.sizeOf !_x_0 = select _x_0 (Text.JSON.JSONNull -> 4) (Text.JSON.JSONBool _x_1_0 -> if _x_1_0 4 5) (Text.JSON.JSONInt x_1_0 -> _SystemArray.size_20 (StdString.toString_5 x_1_0)) (Text.JSON.JSONReal x_1_0 -> _SystemArray.size_20 (StdString.toString_7 x_1_0)) (Text.JSON.JSONString x_1_0 -> <{StdInt.+_6}> (<{StdInt.+_6}> (_SystemArray.size_20 x_1_0) 2) (Text.JSON.count_escape_chars 0 x_1_0)) (Text.JSON.JSONArray x_1_0 -> let len_2_0 = StdList.length_47 x_1_0 in <{StdInt.+_6}> (<{Text.JSON._if;24;50_223}> (<{StdInt.<_17}> 0 len_2_0) len_2_0 x_1_0) 2) (Text.JSON.JSONObject x_1_0 -> let len_2_0 = StdList.length_47 x_1_0 in <{StdInt.+_6}> (<{Text.JSON._if;25;50_224}> (<{StdInt.<_17}> 0 len_2_0) len_2_0 x_1_0) 2) (Text.JSON.JSONRaw x_1_0 -> _SystemArray.size_20 x_1_0) (Text.JSON.JSONError -> 0) 
<{Text.JSON._if;25;50_224}> !_x_0 len_1 x_2 = select _x_0 (True -> Text.JSON.foldl_198 (<{StdInt.-_7}> len_1 1) x_2) (_ -> 0)
<{Text.JSON._if;24;50_223}> !_x_0 len_1 x_2 = select _x_0 (True -> Text.JSON.foldl_197 (<{StdInt.-_7}> len_1 1) x_2) (_ -> 0)
Text.JSON.copyChars !offset_0 !i_1 !src_2 !dst_3 = if (<{StdInt.<_17}> 3 i_1) (let di_1_0 = <{StdInt.+_6}> offset_0 i_1 in Text.JSON.copyChars offset_0 (<{StdInt.-_7}> i_1 4) src_2 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 dst_3 (<{StdInt.-_7}> di_1_0 4) (_SystemArray.select_19 src_2 (<{StdInt.-_7}> i_1 4))) (<{StdInt.-_7}> di_1_0 3) (_SystemArray.select_19 src_2 (<{StdInt.-_7}> i_1 3))) (<{StdInt.-_7}> di_1_0 2) (_SystemArray.select_19 src_2 (<{StdInt.-_7}> i_1 2))) (<{StdInt.-_7}> di_1_0 1) (_SystemArray.select_19 src_2 (<{StdInt.-_7}> i_1 1)))) (if (<{StdInt.<_17}> 1 i_1) (if (<{StdInt.==_16}> i_1 3) (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 dst_3 offset_0 (_SystemArray.select_19 src_2 0)) (<{StdInt.+_6}> offset_0 1) (_SystemArray.select_19 src_2 1)) (<{StdInt.+_6}> offset_0 2) (_SystemArray.select_19 src_2 2)) (_SystemArray.update_21 (_SystemArray.update_21 dst_3 offset_0 (_SystemArray.select_19 src_2 0)) (<{StdInt.+_6}> offset_0 1) (_SystemArray.select_19 src_2 1))) (if (<{StdInt.==_16}> i_1 1) (_SystemArray.update_21 dst_3 offset_0 (_SystemArray.select_19 src_2 0)) dst_3))
Text.JSON.copyRemainingChars_68 !is_0 !id_1 !src_2 !dest_3 = if (<{StdInt.<_17}> is_0 (_SystemArray.size_20 src_2)) (Text.JSON.copyRemainingChars_68 (<{StdInt.+_6}> is_0 1) (<{StdInt.+_6}> id_1 1) src_2 (_SystemArray.update_21 dest_3 id_1 (_SystemArray.select_19 src_2 is_0))) (<{_Tuple2!3}> id_1 dest_3)
Text.JSON.copyAndReplaceChars_67 !is_0 !id_1 !_x_2 !src_3 !dest_4 = select _x_2 (<{_predefined._!Cons!}> _x_1_0 rs_1_1 -> select _x_1_0 (_Tuple2 ir_2_0 c_2_1 -> let _x_3_0 = Text.JSON.copyCharsI is_0 id_1 ir_2_0 src_3 dest_4, id_3_1 = _predefined.tupsels4v1 _x_3_0 in Text.JSON.copyAndReplaceChars_67 (<{StdInt.+_6}> (_predefined.tupsels4v0 _x_3_0) 1) (<{StdInt.+_6}> id_3_1 2) rs_1_1 (_predefined.tupsels4v2 _x_3_0) (_SystemArray.update_21 (_SystemArray.update_21 (_predefined.tupsels4v3 _x_3_0) id_3_1 '\\') (<{StdInt.+_6}> id_3_1 1) c_2_1)) ) (<{_predefined._!Nil!}> -> Text.JSON.copyRemainingChars_68 is_0 id_1 src_3 dest_4) 
Text.JSON.copyObjectItems_70 start_0 !_x_1 buffer_2 = select _x_1 (_predefined._Nil -> _Tuple2 start_0 buffer_2) (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> select _x_1_1 (_predefined._Nil -> let len_4_0 = _SystemArray.size_20 l_2_0, _x_4_1 = _Tuple2 (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_4_0) 3) (Text.JSON.copyChars (<{StdInt.+_6}> start_0 1) len_4_0 l_2_0 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 buffer_2 start_0 '"') (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_4_0) 1) '"') (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_4_0) 2) ':')) in Text.JSON.copyNode (_predefined.tupsels2v0 _x_4_1) x_2_1 (_predefined.tupsels2v1 _x_4_1)) (_ -> let len_3_0 = _SystemArray.size_20 l_2_0, _x_3_1 = _Tuple2 (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_3_0) 3) (Text.JSON.copyChars (<{StdInt.+_6}> start_0 1) len_3_0 l_2_0 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 buffer_2 start_0 '"') (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_3_0) 1) '"') (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_3_0) 2) ':')), _x_3_2 = Text.JSON.copyNode (_predefined.tupsels2v0 _x_3_1) x_2_1 (_predefined.tupsels2v1 _x_3_1), start_3_3 = _predefined.tupsels2v0 _x_3_2 in Text.JSON.copyObjectItems_70 (<{StdInt.+_6}> start_3_3 1) _x_1_1 (_SystemArray.update_21 (_predefined.tupsels2v1 _x_3_2) start_3_3 ','))) ) 
Text.JSON.copyArrayItems_69 start_0 !_x_1 buffer_2 = select _x_1 (_predefined._Nil -> _Tuple2 start_0 buffer_2) (_predefined._Cons x_1_0 _x_1_1 -> select _x_1_1 (_predefined._Nil -> Text.JSON.copyNode start_0 x_1_0 buffer_2) (_ -> let _x_2_0 = Text.JSON.copyNode start_0 x_1_0 buffer_2, start_2_1 = _predefined.tupsels2v0 _x_2_0 in Text.JSON.copyArrayItems_69 (<{StdInt.+_6}> start_2_1 1) _x_1_1 (_SystemArray.update_21 (_predefined.tupsels2v1 _x_2_0) start_2_1 ','))) 
Text.JSON.copyNode !start_0 !_x_1 !buffer_2 = select _x_1 (Text.JSON.JSONNull -> <{_Tuple2!3}> (<{StdInt.+_6}> start_0 4) (Text.JSON.copyChars start_0 4 "null" buffer_2)) (Text.JSON.JSONBool _x_1_0 -> if _x_1_0 (<{_Tuple2!3}> (<{StdInt.+_6}> start_0 4) (Text.JSON.copyChars start_0 4 "true" buffer_2)) (<{_Tuple2!3}> (<{StdInt.+_6}> start_0 5) (Text.JSON.copyChars start_0 5 "false" buffer_2))) (Text.JSON.JSONInt x_1_0 -> let s_2_0 = StdString.toString_5 x_1_0 in <{_Tuple2!3}> (<{StdInt.+_6}> start_0 (_SystemArray.size_20 s_2_0)) (Text.JSON.copyChars start_0 (_SystemArray.size_20 s_2_0) s_2_0 buffer_2)) (Text.JSON.JSONReal x_1_0 -> let s_2_0 = StdString.toString_7 x_1_0 in <{_Tuple2!3}> (<{StdInt.+_6}> start_0 (_SystemArray.size_20 s_2_0)) (Text.JSON.copyChars start_0 (_SystemArray.size_20 s_2_0) s_2_0 buffer_2)) (Text.JSON.JSONString s_1_0 -> let reps_2_0 = Text.JSON.findChars 0 s_1_0 in if (<{Text.JSON._c;64;16_225}> reps_2_0) (let len_3_0 = _SystemArray.size_20 s_1_0 in <{_Tuple2!3}> (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_3_0) 2) (Text.JSON.copyChars (<{StdInt.+_6}> start_0 1) len_3_0 s_1_0 (_SystemArray.update_21 (_SystemArray.update_21 buffer_2 start_0 '"') (<{StdInt.+_6}> (<{StdInt.+_6}> start_0 len_3_0) 1) '"'))) (let _x_3_0 = Text.JSON.copyAndReplaceChars_67 0 (<{StdInt.+_6}> start_0 1) reps_2_0 s_1_0 (_SystemArray.update_21 buffer_2 start_0 '"'), start_3_1 = _predefined.tupsels2v0 _x_3_0 in <{_Tuple2!3}> (<{StdInt.+_6}> start_3_1 1) (_SystemArray.update_21 (_predefined.tupsels2v1 _x_3_0) start_3_1 '"'))) (Text.JSON.JSONArray items_1_0 -> let _x_2_0 = _Tuple2 (<{StdInt.+_6}> start_0 1) (_SystemArray.update_21 buffer_2 start_0 '['), _x_2_1 = Text.JSON.copyArrayItems_69 (_predefined.tupsels2v0 _x_2_0) items_1_0 (_predefined.tupsels2v1 _x_2_0), start_2_2 = _predefined.tupsels2v0 _x_2_1 in <{_Tuple2!3}> (<{StdInt.+_6}> start_2_2 1) (_SystemArray.update_21 (_predefined.tupsels2v1 _x_2_1) start_2_2 ']')) (Text.JSON.JSONObject items_1_0 -> let _x_2_0 = _Tuple2 (<{StdInt.+_6}> start_0 1) (_SystemArray.update_21 buffer_2 start_0 '{'), _x_2_1 = Text.JSON.copyObjectItems_70 (_predefined.tupsels2v0 _x_2_0) items_1_0 (_predefined.tupsels2v1 _x_2_0), start_2_2 = _predefined.tupsels2v0 _x_2_1 in <{_Tuple2!3}> (<{StdInt.+_6}> start_2_2 1) (_SystemArray.update_21 (_predefined.tupsels2v1 _x_2_1) start_2_2 '}')) (Text.JSON.JSONRaw x_1_0 -> <{_Tuple2!3}> (<{StdInt.+_6}> start_0 (_SystemArray.size_20 x_1_0)) (Text.JSON.copyChars start_0 (_SystemArray.size_20 x_1_0) x_1_0 buffer_2)) (_ -> <{_Tuple2!3}> start_0 buffer_2)
<{Text.JSON._c;64;16_225}> !_x_0 = select _x_0 (<{_predefined._!Nil!}> -> True) (_ -> False)
Text.JSON.parse_string_with_escape_71 !offset_0 !stringCharsOffset_1 !input_2 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2)) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (StdBool.not (<{StdChar.==_18}> c_1_0 '"')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.parse_string_with_escape_71 (<{StdInt.+_6}> offset_0 1) stringCharsOffset_1 input_2) (Text.JSON.parse_string_with_escape_71 (<{StdInt.+_6}> offset_0 2) stringCharsOffset_1 input_2)) (let !string_2_0 = <{StdString.%_10}> input_2 (_Tuple2 stringCharsOffset_1 (<{StdInt.-_7}> offset_0 1)) in <{_Tuple2!3}> (Text.JSON.JSONString (Text.JSON.jsonUnescape string_2_0)) (<{StdInt.+_6}> offset_0 1))) (<{_Tuple2!3}> Text.JSON.JSONError offset_0)
Text.JSON.parse_string_79 !offset_0 !stringCharsOffset_1 !input_2 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2)) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (StdBool.not (<{StdChar.==_18}> c_1_0 '"')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.parse_string_79 (<{StdInt.+_6}> offset_0 1) stringCharsOffset_1 input_2) (Text.JSON.parse_string_with_escape_71 (<{StdInt.+_6}> offset_0 2) stringCharsOffset_1 input_2)) (let !string_2_0 = <{StdString.%_10}> input_2 (_Tuple2 stringCharsOffset_1 (<{StdInt.-_7}> offset_0 1)) in <{_Tuple2!3}> (Text.JSON.JSONString string_2_0) (<{StdInt.+_6}> offset_0 1))) (<{_Tuple2!3}> Text.JSON.JSONError offset_0)
Text.JSON.parse_real_with_exponent_73 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2))) (let !r_1_0 = StdReal.toReal_15 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONReal r_1_0) offset_0) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (Text.JSON.parse_real_with_exponent_73_select0 c_1_0 offset_0 numberOffset_1 input_2) (Text.JSON.parse_real_with_exponent_73 (<{StdInt.+_6}> offset_0 1) numberOffset_1 input_2) (let !r_2_0 = StdReal.toReal_15 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONReal r_2_0) offset_0))
Text.JSON.parse_real_with_exponent_73_select0 c_1_0 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_1_0)) False
Text.JSON.parse_real_72 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2))) (let !r_1_0 = StdReal.toReal_15 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONReal r_1_0) offset_0) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (Text.JSON.parse_real_72_select0 c_1_0 offset_0 numberOffset_1 input_2) (Text.JSON.parse_real_72 (<{StdInt.+_6}> offset_0 1) numberOffset_1 input_2) (if (Text.JSON.parse_real_72_select1 c_1_0 offset_0 numberOffset_1 input_2) (let !r_2_0 = StdReal.toReal_15 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONReal r_2_0) offset_0) (if (Text.JSON.parse_real_72_select2 c_1_0 offset_0 numberOffset_1 input_2) (Text.JSON.parse_real_with_exponent_73 (<{StdInt.+_6}> offset_0 2) numberOffset_1 input_2) (if (Text.JSON.parse_real_72_select3 c_1_0 offset_0 numberOffset_1 input_2) (Text.JSON.parse_real_with_exponent_73 (<{StdInt.+_6}> offset_0 3) numberOffset_1 input_2) (let !r_2_0 = StdReal.toReal_15 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONReal r_2_0) offset_0)))))
Text.JSON.parse_real_72_select0 c_1_0 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_1_0)) False
Text.JSON.parse_real_72_select1 c_1_0 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdChar.==_18}> c_1_0 'e')) (StdBool.not (<{StdChar.==_18}> c_1_0 'E')) False
Text.JSON.parse_real_72_select2 c_1_0 !offset_0 !numberOffset_1 !input_2 = if (<{StdInt.<_17}> (<{StdInt.+_6}> offset_0 1) (_SystemArray.size_20 input_2)) (let c_2_0 = _SystemArray.select_19 input_2 (<{StdInt.+_6}> offset_0 1) in if (StdBool.not (<{StdChar.<_19}> c_2_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_2_0)) False) False
Text.JSON.parse_real_72_select3 c_1_0 !offset_0 !numberOffset_1 !input_2 = if (<{StdInt.<_17}> (<{StdInt.+_6}> offset_0 2) (_SystemArray.size_20 input_2)) (if (<{StdChar.==_18}> (_SystemArray.select_19 input_2 (<{StdInt.+_6}> offset_0 1)) '-') (let c_2_0 = _SystemArray.select_19 input_2 (<{StdInt.+_6}> offset_0 2) in if (StdBool.not (<{StdChar.<_19}> c_2_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_2_0)) False) False) False
Text.JSON.parse_number_81 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2))) (let !i_1_0 = StdInt.toInt_23 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONInt i_1_0) offset_0) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (Text.JSON.parse_number_81_select0 c_1_0 offset_0 numberOffset_1 input_2) (Text.JSON.parse_number_81 (<{StdInt.+_6}> offset_0 1) numberOffset_1 input_2) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '.')) (let !i_2_0 = StdInt.toInt_23 (<{StdString.%_10}> input_2 (_Tuple2 numberOffset_1 (<{StdInt.-_7}> offset_0 1))) in <{_Tuple2!3}> (Text.JSON.JSONInt i_2_0) offset_0) (Text.JSON.parse_real_72 (<{StdInt.+_6}> offset_0 1) numberOffset_1 input_2)))
Text.JSON.parse_number_81_select0 c_1_0 !offset_0 !numberOffset_1 !input_2 = if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_1_0)) False
Text.JSON.skip_spaces_80 !offset_0 !input_1 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_1)) (let c_1_0 = _SystemArray.select_19 input_1 offset_0 in if (Text.JSON.skip_spaces_80_select0 c_1_0 offset_0 input_1) (Text.JSON.skip_spaces_80 (<{StdInt.+_6}> offset_0 1) input_1) offset_0) offset_0
Text.JSON.skip_spaces_80_select0 c_1_0 !offset_0 !input_1 = if (<{StdChar.==_18}> c_1_0 ' ') True (if (<{StdChar.==_18}> c_1_0 '\t') True (if (<{StdChar.==_18}> c_1_0 '\n') True (if (<{StdChar.==_18}> c_1_0 '\r') True (if (<{StdChar.==_18}> c_1_0 '\f') True (<{StdChar.==_18}> c_1_0 '\v')))))
Text.JSON.reverse_append_84 !_x_0 list_1 = select _x_0 (_predefined._Cons hd_1_0 tl_1_1 -> Text.JSON.reverse_append_84 tl_1_1 (_predefined._Cons hd_1_0 list_1)) (_predefined._Nil -> list_1) 
Text.JSON.lex_label_with_escape_76 !offset_0 !stringCharsOffset_1 !input_2 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2)) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (StdBool.not (<{StdChar.==_18}> c_1_0 '"')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.lex_label_with_escape_76 (<{StdInt.+_6}> offset_0 1) stringCharsOffset_1 input_2) (Text.JSON.lex_label_with_escape_76 (<{StdInt.+_6}> offset_0 2) stringCharsOffset_1 input_2)) (let !string_2_0 = <{StdString.%_10}> input_2 (_Tuple2 stringCharsOffset_1 (<{StdInt.-_7}> offset_0 1)) in <{_Tuple2!3}> (Text.JSON.jsonUnescape string_2_0) (<{StdInt.+_6}> offset_0 1))) (<{_Tuple2!3}> "" -1)
Text.JSON.lex_label_75 !offset_0 !stringCharsOffset_1 !input_2 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_2)) (let c_1_0 = _SystemArray.select_19 input_2 offset_0 in if (StdBool.not (<{StdChar.==_18}> c_1_0 '"')) (if (StdBool.not (<{StdChar.==_18}> c_1_0 '\\')) (Text.JSON.lex_label_75 (<{StdInt.+_6}> offset_0 1) stringCharsOffset_1 input_2) (Text.JSON.lex_label_with_escape_76 (<{StdInt.+_6}> offset_0 2) stringCharsOffset_1 input_2)) (let !string_2_0 = <{StdString.%_10}> input_2 (_Tuple2 stringCharsOffset_1 (<{StdInt.-_7}> offset_0 1)) in <{_Tuple2!3}> string_2_0 (<{StdInt.+_6}> offset_0 1))) (<{_Tuple2!3}> "" -1)
Text.JSON.parse_object_items_after_label_and_colon_78 !label_0 !offset_1 !items_2 !offset_after_brace_open_3 !input_4 = let _x_1_0 = Text.JSON.parse offset_1 input_4, offset_1_1 = _predefined.tupsels2v1 _x_1_0 in if (Text.JSON.parse_object_items_after_label_and_colon_78_select0 _x_1_0 offset_1_1 label_0 offset_1 items_2 offset_after_brace_open_3 input_4) (Text.JSON.parse_object_items_77 (<{StdInt.+_6}> offset_1_1 1) (_predefined._Cons (_Tuple2 label_0 (_predefined.tupsels2v0 _x_1_0)) items_2) offset_after_brace_open_3 input_4) (if (Text.JSON.parse_object_items_after_label_and_colon_78_select1 _x_1_0 offset_1_1 label_0 offset_1 items_2 offset_after_brace_open_3 input_4) (<{_Tuple2!3}> (Text.JSON.JSONObject (Text.JSON.reverse_append_84 items_2 (_predefined._Cons (_Tuple2 label_0 (_predefined.tupsels2v0 _x_1_0)) _predefined._Nil))) (<{StdInt.+_6}> offset_1_1 1)) (let offset_2_0 = Text.JSON.skip_spaces_80 offset_1_1 input_4 in if (Text.JSON.parse_object_items_after_label_and_colon_78_select2 offset_2_0 _x_1_0 offset_1_1 label_0 offset_1 items_2 offset_after_brace_open_3 input_4) (Text.JSON.parse_object_items_77 (<{StdInt.+_6}> offset_2_0 1) (_predefined._Cons (_Tuple2 label_0 (_predefined.tupsels2v0 _x_1_0)) items_2) offset_after_brace_open_3 input_4) (if (Text.JSON.parse_object_items_after_label_and_colon_78_select3 offset_2_0 _x_1_0 offset_1_1 label_0 offset_1 items_2 offset_after_brace_open_3 input_4) (<{_Tuple2!3}> (Text.JSON.JSONObject (Text.JSON.reverse_append_84 items_2 (_predefined._Cons (_Tuple2 label_0 (_predefined.tupsels2v0 _x_1_0)) _predefined._Nil))) (<{StdInt.+_6}> offset_2_0 1)) (<{_Tuple2!3}> Text.JSON.JSONError offset_after_brace_open_3))))
Text.JSON.parse_object_items_after_label_and_colon_78_select0 _x_1_0 offset_1_1 !label_0 !offset_1 !items_2 !offset_after_brace_open_3 !input_4 = if (<{StdInt.<_17}> offset_1_1 (_SystemArray.size_20 input_4)) (<{StdChar.==_18}> (_SystemArray.select_19 input_4 offset_1_1) ',') False
Text.JSON.parse_object_items_after_label_and_colon_78_select1 _x_1_0 offset_1_1 !label_0 !offset_1 !items_2 !offset_after_brace_open_3 !input_4 = if (<{StdInt.<_17}> offset_1_1 (_SystemArray.size_20 input_4)) (<{StdChar.==_18}> (_SystemArray.select_19 input_4 offset_1_1) '}') False
Text.JSON.parse_object_items_after_label_and_colon_78_select2 offset_2_0 _x_1_0 offset_1_1 !label_0 !offset_1 !items_2 !offset_after_brace_open_3 !input_4 = if (<{StdInt.<_17}> offset_2_0 (_SystemArray.size_20 input_4)) (<{StdChar.==_18}> (_SystemArray.select_19 input_4 offset_2_0) ',') False
Text.JSON.parse_object_items_after_label_and_colon_78_select3 offset_2_0 _x_1_0 offset_1_1 !label_0 !offset_1 !items_2 !offset_after_brace_open_3 !input_4 = if (<{StdInt.<_17}> offset_2_0 (_SystemArray.size_20 input_4)) (<{StdChar.==_18}> (_SystemArray.select_19 input_4 offset_2_0) '}') False
Text.JSON.parse_object_items_77 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_3)) (if (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_0) '"') (let offset_1_0 = <{StdInt.+_6}> offset_0 1, _x_1_1 = Text.JSON.lex_label_75 offset_1_0 offset_1_0 input_3, offset_1_2 = _predefined.tupsels2v1 _x_1_1 in if (StdBool.not (<{StdInt.<_17}> offset_1_2 0)) (if (Text.JSON.parse_object_items_77_select0 offset_1_0 _x_1_1 offset_1_2 offset_0 items_1 offset_after_bracket_open_2 input_3) (Text.JSON.parse_object_items_after_label_and_colon_78 (_predefined.tupsels2v0 _x_1_1) (<{StdInt.+_6}> offset_1_2 1) items_1 offset_after_bracket_open_2 input_3) (let offset_2_0 = Text.JSON.skip_spaces_80 offset_1_2 input_3 in if (Text.JSON.parse_object_items_77_select1 offset_2_0 offset_1_0 _x_1_1 offset_1_2 offset_0 items_1 offset_after_bracket_open_2 input_3) (Text.JSON.parse_object_items_after_label_and_colon_78 (_predefined.tupsels2v0 _x_1_1) (<{StdInt.+_6}> offset_2_0 1) items_1 offset_after_bracket_open_2 input_3) (<{_Tuple2!3}> Text.JSON.JSONError offset_after_bracket_open_2))) (<{_Tuple2!3}> Text.JSON.JSONError offset_after_bracket_open_2)) (let c_1_0 = _SystemArray.select_19 input_3 offset_0 in if (Text.JSON.parse_object_items_77_select2 c_1_0 offset_0 items_1 offset_after_bracket_open_2 input_3) (Text.JSON.parse_object_items_77 (Text.JSON.skip_spaces_80 (<{StdInt.+_6}> offset_0 1) input_3) items_1 offset_after_bracket_open_2 input_3) (<{_Tuple2!3}> Text.JSON.JSONError offset_after_bracket_open_2))) (<{_Tuple2!3}> Text.JSON.JSONError offset_after_bracket_open_2)
Text.JSON.parse_object_items_77_select0 offset_1_0 _x_1_1 offset_1_2 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_1_2 (_SystemArray.size_20 input_3)) (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_1_2) ':') False
Text.JSON.parse_object_items_77_select1 offset_2_0 offset_1_0 _x_1_1 offset_1_2 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_2_0 (_SystemArray.size_20 input_3)) (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_2_0) ':') False
Text.JSON.parse_object_items_77_select2 c_1_0 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdChar.==_18}> c_1_0 ' ') True (if (<{StdChar.==_18}> c_1_0 '\t') True (if (<{StdChar.==_18}> c_1_0 '\n') True (if (<{StdChar.==_18}> c_1_0 '\r') True (if (<{StdChar.==_18}> c_1_0 '\f') True (<{StdChar.==_18}> c_1_0 '\v')))))
Text.JSON.parse_object_83 !offset_0 !input_1 = if (Text.JSON.parse_object_83_select0 offset_0 input_1) (<{_Tuple2!3}> (Text.JSON.JSONObject _predefined._Nil) (<{StdInt.+_6}> offset_0 1)) (let offset_1_0 = Text.JSON.skip_spaces_80 offset_0 input_1 in if (Text.JSON.parse_object_83_select1 offset_1_0 offset_0 input_1) (<{_Tuple2!3}> (Text.JSON.JSONObject _predefined._Nil) (<{StdInt.+_6}> offset_1_0 1)) (Text.JSON.parse_object_items_77 offset_1_0 _predefined._Nil offset_1_0 input_1))
Text.JSON.parse_object_83_select0 !offset_0 !input_1 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_1)) (<{StdChar.==_18}> (_SystemArray.select_19 input_1 offset_0) '}') False
Text.JSON.parse_object_83_select1 offset_1_0 !offset_0 !input_1 = if (<{StdInt.<_17}> offset_1_0 (_SystemArray.size_20 input_1)) (<{StdChar.==_18}> (_SystemArray.select_19 input_1 offset_1_0) '}') False
Text.JSON.parse_array_items_74 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = let _x_1_0 = Text.JSON.parse offset_0 input_3, offset_1_1 = _predefined.tupsels2v1 _x_1_0 in if (Text.JSON.parse_array_items_74_select0 _x_1_0 offset_1_1 offset_0 items_1 offset_after_bracket_open_2 input_3) (Text.JSON.parse_array_items_74 (<{StdInt.+_6}> offset_1_1 1) (_predefined._Cons (_predefined.tupsels2v0 _x_1_0) items_1) offset_after_bracket_open_2 input_3) (if (Text.JSON.parse_array_items_74_select1 _x_1_0 offset_1_1 offset_0 items_1 offset_after_bracket_open_2 input_3) (<{_Tuple2!3}> (Text.JSON.JSONArray (Text.JSON.reverse_append_84 items_1 (_predefined._Cons (_predefined.tupsels2v0 _x_1_0) _predefined._Nil))) (<{StdInt.+_6}> offset_1_1 1)) (let offset_2_0 = Text.JSON.skip_spaces_80 offset_1_1 input_3 in if (Text.JSON.parse_array_items_74_select2 offset_2_0 _x_1_0 offset_1_1 offset_0 items_1 offset_after_bracket_open_2 input_3) (Text.JSON.parse_array_items_74 (<{StdInt.+_6}> offset_2_0 1) (_predefined._Cons (_predefined.tupsels2v0 _x_1_0) items_1) offset_after_bracket_open_2 input_3) (if (Text.JSON.parse_array_items_74_select3 offset_2_0 _x_1_0 offset_1_1 offset_0 items_1 offset_after_bracket_open_2 input_3) (<{_Tuple2!3}> (Text.JSON.JSONArray (Text.JSON.reverse_append_84 items_1 (_predefined._Cons (_predefined.tupsels2v0 _x_1_0) _predefined._Nil))) (<{StdInt.+_6}> offset_2_0 1)) (<{_Tuple2!3}> Text.JSON.JSONError offset_after_bracket_open_2))))
Text.JSON.parse_array_items_74_select0 _x_1_0 offset_1_1 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_1_1 (_SystemArray.size_20 input_3)) (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_1_1) ',') False
Text.JSON.parse_array_items_74_select1 _x_1_0 offset_1_1 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_1_1 (_SystemArray.size_20 input_3)) (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_1_1) ']') False
Text.JSON.parse_array_items_74_select2 offset_2_0 _x_1_0 offset_1_1 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_2_0 (_SystemArray.size_20 input_3)) (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_2_0) ',') False
Text.JSON.parse_array_items_74_select3 offset_2_0 _x_1_0 offset_1_1 !offset_0 !items_1 !offset_after_bracket_open_2 !input_3 = if (<{StdInt.<_17}> offset_2_0 (_SystemArray.size_20 input_3)) (<{StdChar.==_18}> (_SystemArray.select_19 input_3 offset_2_0) ']') False
Text.JSON.parse_array_82 !offset_0 !input_1 = if (Text.JSON.parse_array_82_select0 offset_0 input_1) (<{_Tuple2!3}> (Text.JSON.JSONArray _predefined._Nil) (<{StdInt.+_6}> offset_0 1)) (let offset_1_0 = Text.JSON.skip_spaces_80 offset_0 input_1 in if (Text.JSON.parse_array_82_select1 offset_1_0 offset_0 input_1) (<{_Tuple2!3}> (Text.JSON.JSONArray _predefined._Nil) (<{StdInt.+_6}> offset_1_0 1)) (Text.JSON.parse_array_items_74 offset_1_0 _predefined._Nil offset_1_0 input_1))
Text.JSON.parse_array_82_select0 !offset_0 !input_1 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_1)) (<{StdChar.==_18}> (_SystemArray.select_19 input_1 offset_0) ']') False
Text.JSON.parse_array_82_select1 offset_1_0 !offset_0 !input_1 = if (<{StdInt.<_17}> offset_1_0 (_SystemArray.size_20 input_1)) (<{StdChar.==_18}> (_SystemArray.select_19 input_1 offset_1_0) ']') False
Text.JSON.parse !offset_0 !input_1 = if (<{StdInt.<_17}> offset_0 (_SystemArray.size_20 input_1)) (let c_1_0 = _SystemArray.select_19 input_1 offset_0 in if (<{StdChar.==_18}> c_1_0 '"') (let offset_2_0 = <{StdInt.+_6}> offset_0 1 in Text.JSON.parse_string_79 offset_2_0 offset_2_0 input_1) (if (Text.JSON.parse_select0 c_1_0 offset_0 input_1) (<{_Tuple2!3}> Text.JSON.JSONNull (<{StdInt.+_6}> offset_0 4)) (if (Text.JSON.parse_select1 c_1_0 offset_0 input_1) (<{_Tuple2!3}> (Text.JSON.JSONBool True) (<{StdInt.+_6}> offset_0 4)) (if (Text.JSON.parse_select2 c_1_0 offset_0 input_1) (<{_Tuple2!3}> (Text.JSON.JSONBool False) (<{StdInt.+_6}> offset_0 5)) (if (Text.JSON.parse_select3 c_1_0 offset_0 input_1) (Text.JSON.parse_number_81 (<{StdInt.+_6}> offset_0 1) offset_0 input_1) (if (Text.JSON.parse_select4 c_1_0 offset_0 input_1) (Text.JSON.parse_number_81 (<{StdInt.+_6}> offset_0 2) offset_0 input_1) (if (<{StdChar.==_18}> c_1_0 '[') (Text.JSON.parse_array_82 (<{StdInt.+_6}> offset_0 1) input_1) (if (<{StdChar.==_18}> c_1_0 '{') (Text.JSON.parse_object_83 (<{StdInt.+_6}> offset_0 1) input_1) (if (Text.JSON.parse_select5 c_1_0 offset_0 input_1) (Text.JSON.parse (Text.JSON.skip_spaces_80 (<{StdInt.+_6}> offset_0 1) input_1) input_1) (<{_Tuple2!3}> Text.JSON.JSONError offset_0)))))))))) (<{_Tuple2!3}> Text.JSON.JSONError offset_0)
Text.JSON.parse_select0 c_1_0 !offset_0 !input_1 = if (<{StdChar.==_18}> c_1_0 'n') (if (<{StdInt.<_17}> (<{StdInt.+_6}> offset_0 3) (_SystemArray.size_20 input_1)) (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 1)) 'u') (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 2)) 'l') (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 3)) 'l') False) False) False) False
Text.JSON.parse_select1 c_1_0 !offset_0 !input_1 = if (<{StdChar.==_18}> c_1_0 't') (if (<{StdInt.<_17}> (<{StdInt.+_6}> offset_0 3) (_SystemArray.size_20 input_1)) (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 1)) 'r') (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 2)) 'u') (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 3)) 'e') False) False) False) False
Text.JSON.parse_select2 c_1_0 !offset_0 !input_1 = if (<{StdChar.==_18}> c_1_0 'f') (if (<{StdInt.<_17}> (<{StdInt.+_6}> offset_0 4) (_SystemArray.size_20 input_1)) (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 1)) 'a') (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 2)) 'l') (if (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 3)) 's') (<{StdChar.==_18}> (_SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 4)) 'e') False) False) False) False) False
Text.JSON.parse_select3 c_1_0 !offset_0 !input_1 = if (StdBool.not (<{StdChar.<_19}> c_1_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_1_0)) False
Text.JSON.parse_select4 c_1_0 !offset_0 !input_1 = if (<{StdChar.==_18}> c_1_0 '-') (if (<{StdInt.<_17}> (<{StdInt.+_6}> offset_0 1) (_SystemArray.size_20 input_1)) (let c_2_0 = _SystemArray.select_19 input_1 (<{StdInt.+_6}> offset_0 1) in if (StdBool.not (<{StdChar.<_19}> c_2_0 '0')) (StdBool.not (<{StdChar.<_19}> '9' c_2_0)) False) False) False
Text.JSON.parse_select5 c_1_0 !offset_0 !input_1 = if (<{StdChar.==_18}> c_1_0 ' ') True (if (<{StdChar.==_18}> c_1_0 '\t') True (if (<{StdChar.==_18}> c_1_0 '\n') True (if (<{StdChar.==_18}> c_1_0 '\r') True (if (<{StdChar.==_18}> c_1_0 '\f') True (<{StdChar.==_18}> c_1_0 '\v')))))
Text.JSON.intersperse i_0 !_x_1 = select _x_1 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons x_1_0 _x_1_1 -> select _x_1_1 (_predefined._Nil -> _predefined._Cons x_1_0 _predefined._Nil) (_ -> _predefined._Cons x_1_0 (_predefined._Cons i_0 (Text.JSON.intersperse i_0 _x_1_1)))) 
Text.JSON.decodeItems fx_0 !_x_1 = select _x_1 (_predefined._Nil -> Data.Maybe.Just _predefined._Nil) (_predefined._Cons ox_1_0 oxs_1_1 -> <{Text.JSON._c;610;27_227}> (fx_0 False (_predefined._Cons ox_1_0 _predefined._Nil)) fx_0 oxs_1_1) 
<{Text.JSON._c;610;27_227}> !_x_0 fx_1 oxs_2 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{Text.JSON._c;611;19_226}> (Text.JSON.decodeItems fx_1 oxs_2) x_2_0) ) (_ -> Data.Maybe.Nothing)
<{Text.JSON._c;611;19_226}> !_x_0 x_1 = select _x_0 (Data.Maybe.Just xs_1_0 -> Data.Maybe.Just (_predefined._Cons x_1 xs_1_0)) (_ -> Data.Maybe.Nothing)
Text.JSON.toString_7 !node_0 = _predefined.tupsels2v1 (Text.JSON.copyNode 0 node_0 (_SystemArray.createArray_17 (Text.JSON.sizeOf node_0) '\0'))
Text.JSON.fromString_8 !s_0 = _predefined.tupsels2v0 (Text.JSON.parse 0 s_0)
Text.JSON.anon_115 !f_0 g_1 x_2 = f_0 (g_1 x_2)
Text.JSON.snd_114 !tuple_0 = _predefined.tupsels2v1 tuple_0
Text.JSON.anon_113 !f_0 g_1 x_2 = f_0 (g_1 x_2)
Text.JSON.snd_112 !tuple_0 = _predefined.tupsels2v1 tuple_0
Text.JSON.notNull_92 !_x_0 = select _x_0 (Text.JSON.JSONNull -> False) (_ -> True)
Text.JSON.cmpFst_91 !<{_v<_0}> a_1 b_2 = <{StdOverloaded.get_<_7}> <{_v<_0}> (_predefined.tupsels2v0 a_1) (_predefined.tupsels2v0 b_2)
Text.JSON.anon_201 !g_0 x_1 = Text.JSON.notNull_92 (g_0 x_1)
Text.JSON.cmpFst_199 !a_0 !b_1 = <{StdString.<_3}> (_predefined.tupsels2v0 a_0) (_predefined.tupsels2v0 b_1)
Text.JSON.anon_200 !g_0 x_1 = Text.JSON.notNull_92 (g_0 x_1)
Text.JSON.anon_203 !x_0 = Text.JSON.notNull_92 (Text.JSON.snd_114 x_0)
Text.JSON.anon_202 !x_0 = Text.JSON.notNull_92 (Text.JSON.snd_112 x_0)
<{Text.JSON.==_9}> !_x_0 !_x_1 = select _x_0 (Text.JSON.JSONNull -> select _x_1 (Text.JSON.JSONNull -> True) ) (Text.JSON.JSONBool x_1_0 -> select _x_1 (Text.JSON.JSONBool y_2_0 -> <{StdBool.==_3}> x_1_0 y_2_0) ) (Text.JSON.JSONInt x_1_0 -> select _x_1 (Text.JSON.JSONInt y_2_0 -> <{StdInt.==_16}> x_1_0 y_2_0) (Text.JSON.JSONReal y_2_0 -> <{StdString.==_2}> (StdString.toString_7 (StdReal.toReal_13 x_1_0)) (StdString.toString_7 y_2_0)) ) (Text.JSON.JSONReal x_1_0 -> select _x_1 (Text.JSON.JSONReal y_2_0 -> <{StdString.==_2}> (StdString.toString_7 x_1_0) (StdString.toString_7 y_2_0)) (Text.JSON.JSONInt y_2_0 -> <{StdString.==_2}> (StdString.toString_7 x_1_0) (StdString.toString_7 (StdReal.toReal_13 y_2_0))) ) (Text.JSON.JSONString x_1_0 -> select _x_1 (Text.JSON.JSONString y_2_0 -> <{StdString.==_2}> x_1_0 y_2_0) ) (Text.JSON.JSONArray xs_1_0 -> select _x_1 (Text.JSON.JSONArray ys_2_0 -> <{StdList.==_45}> (<{StdOverloaded.==;}> <{Text.JSON.==_9}>) xs_1_0 ys_2_0) ) (Text.JSON.JSONObject xs_1_0 -> select _x_1 (Text.JSON.JSONObject ys_2_0 -> <{StdList.==_45}> (<{StdOverloaded.==;}> (<{StdTuple.==_4}> (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{Text.JSON.==_9}>)))) (StdOrdList.sortBy Text.JSON.cmpFst_199 (StdList.filter Text.JSON.anon_202 xs_1_0)) (StdOrdList.sortBy Text.JSON.cmpFst_199 (StdList.filter Text.JSON.anon_203 ys_2_0))) ) (Text.JSON.JSONRaw x_1_0 -> select _x_1 (Text.JSON.JSONRaw y_2_0 -> <{StdString.==_2}> x_1_0 y_2_0) ) (Text.JSON.JSONError -> select _x_1 (Text.JSON.JSONError -> True) ) (_ -> False)
Text.JSON.JSONEncode_Int_10 !_x_0 !x_1 = _predefined._Cons (Text.JSON.JSONInt x_1) _predefined._Nil
Text.JSON.JSONEncode_Real_11 !_x_0 !x_1 = _predefined._Cons (Text.JSON.JSONReal x_1) _predefined._Nil
Text.JSON.JSONEncode_Char_12 !_x_0 !x_1 = _predefined._Cons (Text.JSON.JSONString (_SystemArray.update_21 (_SystemArray._createArray_16 1) 0 x_1)) _predefined._Nil
Text.JSON.JSONEncode_Bool_13 !_x_0 !x_1 = _predefined._Cons (Text.JSON.JSONBool x_1) _predefined._Nil
Text.JSON.JSONEncode__String_14 !_x_0 !x_1 = _predefined._Cons (Text.JSON.JSONString x_1) _predefined._Nil
Text.JSON.JSONEncode_UNIT_15 !_x_0 !_x_1 = select _x_1 (StdGeneric.UNIT -> _predefined._Nil) 
<{Text.JSON.c;464;59_97}> fx_0 !g_l_1 = <{Text.JSON.g_c1;464;64_228}> g_l_1 fx_0
<{Text.JSON.g_c1;464;64_228}> !g_l_0 fx_1 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> _predefined._Cons (fx_1 False g_h_1_0) (<{Text.JSON.c;464;59_97}> fx_1 g_t_1_1)) (_ -> _predefined._Nil)
Text.JSON.JSONEncode__List_16 fx_0 !_x_1 !x_2 = _predefined._Cons (Text.JSON.JSONArray (StdList.flatten (<{Text.JSON.c;464;59_97}> fx_0 x_2))) _predefined._Nil
Text.JSON.JSONEncode__Tuple2_17 fx_0 fy_1 !_x_2 !_x_3 = select _x_3 (_Tuple2 x_1_0 y_1_1 -> _predefined._Cons (Text.JSON.JSONArray (<{StdList.++}> (fx_0 False x_1_0) (fy_1 False y_1_1))) _predefined._Nil) 
Text.JSON.JSONEncode__Tuple3_18 fx_0 fy_1 fz_2 !_x_3 !_x_4 = select _x_4 (_Tuple3 x_1_0 y_1_1 z_1_2 -> _predefined._Cons (Text.JSON.JSONArray (<{StdList.++}> (fx_0 False x_1_0) (<{StdList.++}> (fy_1 False y_1_1) (fz_2 False z_1_2)))) _predefined._Nil) 
Text.JSON.JSONEncode__Tuple4_19 fx_0 fy_1 fz_2 fi_3 !_x_4 !_x_5 = select _x_5 (_Tuple4 x_1_0 y_1_1 z_1_2 i_1_3 -> _predefined._Cons (Text.JSON.JSONArray (<{StdList.++}> (fx_0 False x_1_0) (<{StdList.++}> (fy_1 False y_1_1) (<{StdList.++}> (fz_2 False z_1_2) (fi_3 False i_1_3))))) _predefined._Nil) 
Text.JSON.JSONEncode__Tuple5_20 fx_0 fy_1 fz_2 fi_3 fj_4 !_x_5 !_x_6 = select _x_6 (_Tuple5 x_1_0 y_1_1 z_1_2 i_1_3 j_1_4 -> _predefined._Cons (Text.JSON.JSONArray (<{StdList.++}> (fx_0 False x_1_0) (<{StdList.++}> (fy_1 False y_1_1) (<{StdList.++}> (fz_2 False z_1_2) (<{StdList.++}> (fi_3 False i_1_3) (fj_4 False j_1_4)))))) _predefined._Nil) 
<{Text.JSON.c;469;59_98}> !_vArray_0 fx_1 !g_i_2 !g_s_3 g_a_4 = if (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.get_uselect_6 _vArray_0 g_a_4 g_i_2 in _predefined._Cons (fx_1 False (_predefined.tupsels2v0 _x_1_1)) (<{Text.JSON.c;469;59_98}> _vArray_0 fx_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_0)) _predefined._Nil
<{Text.JSON.c;469;59_204}> fx_0 !g_i_1 !g_s_2 g_a_3 = if (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.uselect_78 g_a_3 g_i_1 in _predefined._Cons (fx_0 False (_predefined.tupsels2v0 _x_1_1)) (<{Text.JSON.c;469;59_204}> fx_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_0)) _predefined._Nil
Text.JSON.JSONEncode__Array_21 fx_0 !_x_1 !x_2 = let _x_1_0 = _SystemArray.usize_79 x_2 in _predefined._Cons (Text.JSON.JSONArray (StdList.flatten (<{Text.JSON.c;469;59_204}> fx_0 0 (<{StdInt.-_7}> (_predefined.tupsels2v0 _x_1_0) 1) (_predefined.tupsels2v1 _x_1_0)))) _predefined._Nil
<{Text.JSON.c;470;60_99}> !_vArray_0 fx_1 !g_i_2 !g_s_3 g_a_4 = if (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.get_uselect_6 _vArray_0 g_a_4 g_i_2 in _predefined._Cons (fx_1 False (_predefined.tupsels2v0 _x_1_1)) (<{Text.JSON.c;470;60_99}> _vArray_0 fx_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_0)) _predefined._Nil
<{Text.JSON.c;470;60_205}> fx_0 !g_i_1 !g_s_2 g_a_3 = if (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (let !g_a_1_0 = _predefined._dummyForStrictAlias (_predefined.tupsels2v1 _x_1_1), _x_1_1 = _SystemArray.uselect_6 g_a_3 g_i_1 in _predefined._Cons (fx_0 False (_predefined.tupsels2v0 _x_1_1)) (<{Text.JSON.c;470;60_205}> fx_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_0)) _predefined._Nil
<{Text.JSON.JSONEncode__!Array_22}> fx_0 !_x_1 !x_2 = let _x_1_0 = _SystemArray.usize_7 x_2 in _predefined._Cons (Text.JSON.JSONArray (StdList.flatten (<{Text.JSON.c;470;60_205}> fx_0 0 (<{StdInt.-_7}> (_predefined.tupsels2v0 _x_1_0) 1) (_predefined.tupsels2v1 _x_1_0)))) _predefined._Nil
Text.JSON.JSONEncode_Maybe_23 fx_0 !inField_1 !_x_2 = select _x_2 (Data.Maybe.Just x_1_0 -> if inField_1 (fx_0 False x_1_0) (_predefined._Cons (Text.JSON.JSONArray (_predefined._Cons (Text.JSON.JSONString "Just") (fx_0 False x_1_0))) _predefined._Nil)) (Data.Maybe.Nothing -> if inField_1 (_predefined._Cons Text.JSON.JSONNull _predefined._Nil) (_predefined._Cons (Text.JSON.JSONArray (_predefined._Cons (Text.JSON.JSONString "Nothing") _predefined._Nil)) _predefined._Nil)) 
Text.JSON.JSONEncode_JSONNode_24 !_x_0 !node_1 = _predefined._Cons node_1 _predefined._Nil
Text.JSON.JSONEncode_EITHER_25 fx_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.LEFT x_1_0 -> fx_0 False x_1_0) (StdGeneric.RIGHT y_1_0 -> fy_1 False y_1_0) 
Text.JSON.JSONEncode_CONS_26 gcd_name_0 fx_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.CONS x_1_0 -> _predefined._Cons (Text.JSON.JSONArray (_predefined._Cons (Text.JSON.JSONString gcd_name_0) (fx_1 False x_1_0))) _predefined._Nil) 
Text.JSON.JSONEncode_OBJECT_27 !fx_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.OBJECT x_1_0 -> fx_0 False x_1_0) 
Text.JSON.isNotNull_96 !_x_0 = select _x_0 (Text.JSON.JSONNull -> False) (_ -> True)
<{Text.JSON.c;459;49_95}> !g_l_0 g_l_1 = <{Text.JSON.g_c1;459;35_230}> g_l_0 g_l_1
<{Text.JSON.g_c1;459;35_230}> !g_l_0 g_l_1 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.g_c1;459;56_229}> g_l_1 g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{Text.JSON.g_c1;459;56_229}> !g_l_0 g_h_1 g_t_2 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> if (Text.JSON.isNotNull_96 g_h_1) (_predefined._Cons (_Tuple2 g_h_1_0 g_h_1) (<{Text.JSON.c;459;49_95}> g_t_2 g_t_1_1)) (<{Text.JSON.c;459;49_95}> g_t_2 g_t_1_1)) (_ -> _predefined._Nil)
Text.JSON.JSONEncode_RECORD_28 grd_fields_0 fx_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.RECORD x_1_0 -> _predefined._Cons (Text.JSON.JSONObject (<{Text.JSON.c;459;49_95}> (fx_1 False x_1_0) grd_fields_0)) _predefined._Nil) 
Text.JSON.JSONEncode_FIELD_29 !fx_0 !_x_1 !_x_2 = select _x_2 (StdGeneric.FIELD x_1_0 -> fx_0 True x_1_0) 
<{Text.JSON.++_94}> !_x_0 list_1 = select _x_0 (_predefined._Cons hd_1_0 tl_1_1 -> _predefined._Cons hd_1_0 (<{Text.JSON.++_94}> tl_1_1 list_1)) (_ -> list_1)
Text.JSON.JSONEncode_PAIR_30 !fx_0 fy_1 !_x_2 !_x_3 = select _x_3 (StdGeneric.PAIR x_1_0 y_1_1 -> <{Text.JSON.++_94}> (fx_0 False x_1_0) (fy_1 False y_1_1)) 
Text.JSON.JSONDecode_Int_31 !_x_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONInt i_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just i_2_0) xs_1_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
Text.JSON.JSONDecode_Real_32 !_x_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONReal r_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just r_2_0) xs_1_1) (Text.JSON.JSONInt i_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdReal.toReal_13 i_2_0)) xs_1_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
Text.JSON.JSONDecode_Char_33 !_x_0 !l_1 = select l_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONString s_2_0 -> if (<{StdInt.==_16}> (_SystemArray.size_20 s_2_0) 1) (<{_Tuple2!3}> (Data.Maybe.Just (_SystemArray.select_19 s_2_0 0)) xs_1_1) (<{_Tuple2!3}> Data.Maybe.Nothing l_1)) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)
Text.JSON.JSONDecode_Bool_34 !_x_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONBool b_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just b_2_0) xs_1_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
Text.JSON.JSONDecode__String_35 !_x_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONString s_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just s_2_0) xs_1_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
Text.JSON.JSONDecode_UNIT_36 !_x_0 !l_1 = <{_Tuple2!3}> (Data.Maybe.Just StdGeneric.UNIT) l_1
Text.JSON.JSONDecode_EITHER_37 !fx_0 fy_1 !_x_2 !l_3 = <{Text.JSON._c;512;34_232}> (fx_0 False l_3) fy_1 l_3
<{Text.JSON._c;512;34_232}> !_x_0 fy_1 l_2 = select _x_0 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.LEFT x_2_0)) xs_1_1) (Data.Maybe.Nothing -> <{Text.JSON._c;514;35_231}> (fy_1 False l_2) l_2) ) 
<{Text.JSON._c;514;35_231}> !_x_0 l_1 = select _x_0 (_Tuple2 _x_1_0 ys_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.RIGHT y_2_0)) ys_1_1) (Data.Maybe.Nothing -> <{_Tuple2!3}> Data.Maybe.Nothing l_1) ) 
Text.JSON.JSONDecode_CONS_38 gcd_name_0 fx_1 !_x_2 !l_3 = select l_3 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray _x_2_0 -> select _x_2_0 (_predefined._Cons _x_3_0 fields_3_1 -> select _x_3_0 (Text.JSON.JSONString name_4_0 -> if (<{StdString.==_2}> name_4_0 gcd_name_0) (<{Text.JSON._c;523;39_233}> (fx_1 False fields_3_1) xs_1_1 l_3) (<{_Tuple2!3}> Data.Maybe.Nothing l_3)) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
<{Text.JSON._c;523;39_233}> !_x_0 xs_1 l_2 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.CONS x_2_0)) xs_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
Text.JSON.JSONDecode_OBJECT_39 !fx_0 !_x_1 !l_2 = <{Text.JSON._c;518;31_234}> (fx_0 False l_2) l_2
<{Text.JSON._c;518;31_234}> !_x_0 l_1 = select _x_0 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.OBJECT x_2_0)) xs_1_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)
Text.JSON.JSONDecode__List_40 fx_0 !_x_1 !l_2 = select l_2 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray items_2_0 -> <{Text.JSON._c;548;7_235}> (Text.JSON.decodeItems fx_0 items_2_0) xs_1_1 l_2) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
<{Text.JSON._c;548;7_235}> !_x_0 xs_1 l_2 = select _x_0 (Data.Maybe.Just x_1_0 -> <{_Tuple2!3}> (Data.Maybe.Just x_1_0) xs_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
Text.JSON.JSONDecode__Tuple2_41 fx_0 fy_1 !_x_2 !l_3 = select l_3 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray _x_2_0 -> select _x_2_0 (_predefined._Cons xo_3_0 _x_3_1 -> select _x_3_1 (_predefined._Cons yo_4_0 _x_4_1 -> select _x_4_1 (_predefined._Nil -> <{Text.JSON._c;554;7_237}> (fx_0 False (_predefined._Cons xo_3_0 _predefined._Nil)) fy_1 yo_4_0 xs_1_1 l_3) ) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
<{Text.JSON._c;554;7_237}> !_x_0 fy_1 yo_2 xs_3 l_4 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{Text.JSON._c;555;23_236}> (fy_1 False (_predefined._Cons yo_2 _predefined._Nil)) x_2_0 xs_3 l_4) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_4)
<{Text.JSON._c;555;23_236}> !_x_0 x_1 xs_2 l_3 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (_Tuple2 x_1 y_2_0)) xs_2) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
Text.JSON.JSONDecode__Tuple3_42 fx_0 fy_1 fz_2 !_x_3 !l_4 = select l_4 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray _x_2_0 -> select _x_2_0 (_predefined._Cons xo_3_0 _x_3_1 -> select _x_3_1 (_predefined._Cons yo_4_0 _x_4_1 -> select _x_4_1 (_predefined._Cons zo_5_0 _x_5_1 -> select _x_5_1 (_predefined._Nil -> <{Text.JSON._c;562;7_240}> (fx_0 False (_predefined._Cons xo_3_0 _predefined._Nil)) fy_1 yo_4_0 fz_2 zo_5_0 xs_1_1 l_4) ) ) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_4)
<{Text.JSON._c;562;7_240}> !_x_0 fy_1 yo_2 fz_3 zo_4 xs_5 l_6 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{Text.JSON._c;563;23_239}> (fy_1 False (_predefined._Cons yo_2 _predefined._Nil)) fz_3 zo_4 x_2_0 xs_5 l_6) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_6)
<{Text.JSON._c;563;23_239}> !_x_0 fz_1 zo_2 x_3 xs_4 l_5 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> <{Text.JSON._c;564;35_238}> (fz_1 False (_predefined._Cons zo_2 _predefined._Nil)) x_3 y_2_0 xs_4 l_5) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_5)
<{Text.JSON._c;564;35_238}> !_x_0 x_1 y_2 xs_3 l_4 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just z_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (_Tuple3 x_1 y_2 z_2_0)) xs_3) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_4)
Text.JSON.JSONDecode__Tuple4_43 fx_0 fy_1 fz_2 fi_3 !_x_4 !l_5 = select l_5 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray _x_2_0 -> select _x_2_0 (_predefined._Cons xo_3_0 _x_3_1 -> select _x_3_1 (_predefined._Cons yo_4_0 _x_4_1 -> select _x_4_1 (_predefined._Cons zo_5_0 _x_5_1 -> select _x_5_1 (_predefined._Cons io_6_0 _x_6_1 -> select _x_6_1 (_predefined._Nil -> <{Text.JSON._c;572;7_244}> (fx_0 False (_predefined._Cons xo_3_0 _predefined._Nil)) fy_1 yo_4_0 fz_2 zo_5_0 fi_3 io_6_0 xs_1_1 l_5) ) ) ) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_5)
<{Text.JSON._c;572;7_244}> !_x_0 fy_1 yo_2 fz_3 zo_4 fi_5 io_6 xs_7 l_8 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{Text.JSON._c;573;22_243}> (fy_1 False (_predefined._Cons yo_2 _predefined._Nil)) fz_3 zo_4 fi_5 io_6 x_2_0 xs_7 l_8) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_8)
<{Text.JSON._c;573;22_243}> !_x_0 fz_1 zo_2 fi_3 io_4 x_5 xs_6 l_7 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> <{Text.JSON._c;574;27_242}> (fz_1 False (_predefined._Cons zo_2 _predefined._Nil)) fi_3 io_4 x_5 y_2_0 xs_6 l_7) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_7)
<{Text.JSON._c;574;27_242}> !_x_0 fi_1 io_2 x_3 y_4 xs_5 l_6 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just z_2_0 -> <{Text.JSON._c;575;30_241}> (fi_1 False (_predefined._Cons io_2 _predefined._Nil)) x_3 y_4 z_2_0 xs_5 l_6) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_6)
<{Text.JSON._c;575;30_241}> !_x_0 x_1 y_2 z_3 xs_4 l_5 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just i_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (_Tuple4 x_1 y_2 z_3 i_2_0)) xs_4) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_5)
Text.JSON.JSONDecode__Tuple5_44 fx_0 fy_1 fz_2 fi_3 fj_4 !_x_5 !l_6 = select l_6 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray _x_2_0 -> select _x_2_0 (_predefined._Cons xo_3_0 _x_3_1 -> select _x_3_1 (_predefined._Cons yo_4_0 _x_4_1 -> select _x_4_1 (_predefined._Cons zo_5_0 _x_5_1 -> select _x_5_1 (_predefined._Cons io_6_0 _x_6_1 -> select _x_6_1 (_predefined._Cons jo_7_0 _x_7_1 -> select _x_7_1 (_predefined._Nil -> <{Text.JSON._c;584;7_249}> (fx_0 False (_predefined._Cons xo_3_0 _predefined._Nil)) fy_1 yo_4_0 fz_2 zo_5_0 fi_3 io_6_0 fj_4 jo_7_0 xs_1_1 l_6) ) ) ) ) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_6)
<{Text.JSON._c;584;7_249}> !_x_0 fy_1 yo_2 fz_3 zo_4 fi_5 io_6 fj_7 jo_8 xs_9 l_10 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{Text.JSON._c;585;23_248}> (fy_1 False (_predefined._Cons yo_2 _predefined._Nil)) fz_3 zo_4 fi_5 io_6 fj_7 jo_8 x_2_0 xs_9 l_10) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_10)
<{Text.JSON._c;585;23_248}> !_x_0 fz_1 zo_2 fi_3 io_4 fj_5 jo_6 x_7 xs_8 l_9 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> <{Text.JSON._c;586;27_247}> (fz_1 False (_predefined._Cons zo_2 _predefined._Nil)) fi_3 io_4 fj_5 jo_6 x_7 y_2_0 xs_8 l_9) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_9)
<{Text.JSON._c;586;27_247}> !_x_0 fi_1 io_2 fj_3 jo_4 x_5 y_6 xs_7 l_8 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just z_2_0 -> <{Text.JSON._c;587;30_246}> (fi_1 False (_predefined._Cons io_2 _predefined._Nil)) fj_3 jo_4 x_5 y_6 z_2_0 xs_7 l_8) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_8)
<{Text.JSON._c;587;30_246}> !_x_0 fj_1 jo_2 x_3 y_4 z_5 xs_6 l_7 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just i_2_0 -> <{Text.JSON._c;588;35_245}> (fj_1 False (_predefined._Cons jo_2 _predefined._Nil)) x_3 y_4 z_5 i_2_0 xs_6 l_7) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_7)
<{Text.JSON._c;588;35_245}> !_x_0 x_1 y_2 z_3 i_4 xs_5 l_6 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just j_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (_Tuple5 x_1 y_2 z_3 i_4 j_2_0)) xs_5) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_6)
<{Text.JSON.cu;599;36_105}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{Text.JSON.g_c1;599;41_250}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{Text.JSON.g_c1;599;41_250}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;599;36_105}> _vone_1 <{_v+_2}> (<{StdOverloaded.get_+_0}> <{_v+_2}> c_l_i_3 (StdOverloaded.get_one_5 _vone_1)) g_t_1_1) (_ -> c_l_i_3)
<{Text.JSON.cu;599;36_104}> !_vArray_0 c_a_1 g_i_2 !g_l_3 = <{Text.JSON.g_c1;599;41_251}> g_l_3 _vArray_0 c_a_1 g_i_2
<{Text.JSON.g_c1;599;41_251}> !g_l_0 _vArray_1 c_a_2 g_i_3 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;599;36_104}> _vArray_1 (_SystemArray.get_update_5 _vArray_1 c_a_2 g_i_3 g_h_1_0) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
<{Text.JSON.cu;599;36_206}> !<{_v+_0}> c_l_i_1 !g_l_2 = <{Text.JSON.g_c1;599;41_252}> g_l_2 <{_v+_0}> c_l_i_1
<{Text.JSON.g_c1;599;41_252}> !g_l_0 <{_v+_1}> c_l_i_2 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;599;36_206}> <{_v+_1}> (<{StdOverloaded.get_+_0}> <{_v+_1}> c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{Text.JSON.cu;599;36_207}> !c_a_0 g_i_1 !g_l_2 = <{Text.JSON.g_c1;599;41_253}> g_l_2 c_a_0 g_i_1
<{Text.JSON.g_c1;599;41_253}> !g_l_0 !c_a_1 g_i_2 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;599;36_207}> (_SystemArray.update_77 c_a_1 g_i_2 g_h_1_0) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
<{Text.JSON.cu;599;36_208}> !c_l_i_0 !g_l_1 = <{Text.JSON.g_c1;599;41_254}> g_l_1 c_l_i_0
<{Text.JSON.g_c1;599;41_254}> !g_l_0 !c_l_i_1 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;599;36_208}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
Text.JSON.JSONDecode__Array_45 fx_0 !_x_1 !l_2 = select l_2 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray items_2_0 -> <{Text.JSON._c;598;7_255}> (Text.JSON.decodeItems fx_0 items_2_0) xs_1_1 l_2) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
<{Text.JSON._c;598;7_255}> !_x_0 xs_1 l_2 = select _x_0 (Data.Maybe.Just x_1_0 -> <{_Tuple2!3}> (Data.Maybe.Just (<{Text.JSON.cu;599;36_207}> (_SystemArray._createArray_72 (<{Text.JSON.cu;599;36_208}> 0 x_1_0)) 0 x_1_0)) xs_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
<{Text.JSON.cu;605;36_107}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{Text.JSON.g_c1;605;41_256}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{Text.JSON.g_c1;605;41_256}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;605;36_107}> _vone_1 <{_v+_2}> (<{StdOverloaded.get_+_0}> <{_v+_2}> c_l_i_3 (StdOverloaded.get_one_5 _vone_1)) g_t_1_1) (_ -> c_l_i_3)
<{Text.JSON.cu;605;36_106}> !_vArray_0 c_a_1 g_i_2 !g_l_3 = <{Text.JSON.g_c1;605;41_257}> g_l_3 _vArray_0 c_a_1 g_i_2
<{Text.JSON.g_c1;605;41_257}> !g_l_0 _vArray_1 c_a_2 g_i_3 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;605;36_106}> _vArray_1 (_SystemArray.get_update_5 _vArray_1 c_a_2 g_i_3 g_h_1_0) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
<{Text.JSON.cu;605;36_209}> !<{_v+_0}> c_l_i_1 !g_l_2 = <{Text.JSON.g_c1;605;41_258}> g_l_2 <{_v+_0}> c_l_i_1
<{Text.JSON.g_c1;605;41_258}> !g_l_0 <{_v+_1}> c_l_i_2 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;605;36_209}> <{_v+_1}> (<{StdOverloaded.get_+_0}> <{_v+_1}> c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{Text.JSON.cu;605;36_210}> !c_a_0 g_i_1 !g_l_2 = <{Text.JSON.g_c1;605;41_259}> g_l_2 c_a_0 g_i_1
<{Text.JSON.g_c1;605;41_259}> !g_l_0 !c_a_1 g_i_2 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;605;36_210}> (_SystemArray.update_5 c_a_1 g_i_2 g_h_1_0) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
<{Text.JSON.cu;605;36_211}> !c_l_i_0 !g_l_1 = <{Text.JSON.g_c1;605;41_260}> g_l_1 c_l_i_0
<{Text.JSON.g_c1;605;41_260}> !g_l_0 !c_l_i_1 = select g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{Text.JSON.cu;605;36_211}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
<{Text.JSON.JSONDecode__!Array_46}> fx_0 !_x_1 !l_2 = select l_2 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (Text.JSON.JSONArray items_2_0 -> <{Text.JSON._c;604;7_261}> (Text.JSON.decodeItems fx_0 items_2_0) xs_1_1 l_2) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
<{Text.JSON._c;604;7_261}> !_x_0 xs_1 l_2 = select _x_0 (Data.Maybe.Just x_1_0 -> <{_Tuple2!3}> (Data.Maybe.Just (<{Text.JSON.cu;605;36_210}> (_SystemArray._createArray_0 (<{Text.JSON.cu;605;36_211}> 0 x_1_0)) 0 x_1_0)) xs_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
Text.JSON.JSONDecode_Maybe_47 fx_0 !_x_1 !_x_2 = select _x_1 (False -> select _x_2 (_predefined._Cons _x_2_0 xs_2_1 -> select _x_2_0 (Text.JSON.JSONArray _x_3_0 -> select _x_3_0 (_predefined._Cons _x_4_0 _x_4_1 -> select _x_4_0 (Text.JSON.JSONString _x_5_0 -> select _x_5_0 ("Nothing" -> select _x_4_1 (_predefined._Nil -> <{_Tuple2!3}> (Data.Maybe.Just Data.Maybe.Nothing) xs_2_1) ) ("Just" -> <{Text.JSON._c;619;5_262}> (fx_0 False _x_4_1) xs_2_1 _x_4_1) ) ) ) ) ) (True -> select _x_2 (_predefined._Cons _x_2_0 xs_2_1 -> select _x_2_0 (Text.JSON.JSONNull -> <{_Tuple2!3}> (Data.Maybe.Just Data.Maybe.Nothing) xs_2_1) ) (_predefined._Nil -> <{_Tuple2!3}> (Data.Maybe.Just Data.Maybe.Nothing) _predefined._Nil) (_ -> <{Text.JSON._c;626;5_263}> (fx_0 False _x_2) _x_2)) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_2)
<{Text.JSON._c;626;5_263}> !_x_0 _x_1 = select _x_0 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (Data.Maybe.Just x_2_0)) xs_1_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
<{Text.JSON._c;619;5_262}> !_x_0 xs_1 _x_2 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (Data.Maybe.Just x_2_0)) xs_1) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_2)
Text.JSON.JSONDecode_JSONNode_48 !_x_0 !_x_1 = select _x_1 (_predefined._Cons node_1_0 xs_1_1 -> <{_Tuple2!3}> (Data.Maybe.Just node_1_0) xs_1_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
Text.JSON.d2_101 x_0 !_x_1 l_2 = select _x_1 (_Tuple2 _x_1_0 ys_1_1 -> select _x_1_0 (Data.Maybe.Just y_2_0 -> _Tuple2 (Data.Maybe.Just (StdGeneric.PAIR x_0 y_2_0)) ys_1_1) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Text.JSON.d1_100 fy_0 !_x_1 l_2 = select _x_1 (_Tuple2 _x_1_0 xs_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> Text.JSON.d2_101 x_2_0 (fy_0 False xs_1_1) l_2) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Text.JSON.JSONDecode_PAIR_49 !fx_0 fy_1 !_x_2 !l_3 = Text.JSON.d1_100 fy_1 (fx_0 False l_3) l_3
Text.JSON.d_102 !_x_0 xs_1 l_2 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> _Tuple2 (Data.Maybe.Just (StdGeneric.RECORD x_2_0)) xs_1) (Data.Maybe.Nothing -> _Tuple2 Data.Maybe.Nothing l_2) ) 
Text.JSON.JSONDecode_RECORD_50 fx_0 !_x_1 !l_2 = select l_2 (_predefined._Cons obj_1_0 xs_1_1 -> select obj_1_0 (Text.JSON.JSONObject fields_2_0 -> Text.JSON.d_102 (fx_0 False (_predefined._Cons obj_1_0 _predefined._Nil)) xs_1_1 l_2) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_2)
Text.JSON.findField_103 !<{_v==_0}> match_1 !_x_2 = select _x_2 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> if (<{StdOverloaded.get_==_6}> <{_v==_0}> l_2_0 match_1) (_predefined._Cons x_2_1 _predefined._Nil) (Text.JSON.findField_103 <{_v==_0}> match_1 xs_1_1)) ) (_predefined._Nil -> _predefined._Nil) 
Text.JSON.findField_212 match_0 !_x_1 = select _x_1 (_predefined._Cons _x_1_0 xs_1_1 -> select _x_1_0 (_Tuple2 l_2_0 x_2_1 -> if (<{StdString.==_2}> l_2_0 match_0) (_predefined._Cons x_2_1 _predefined._Nil) (Text.JSON.findField_212 match_0 xs_1_1)) ) (_predefined._Nil -> _predefined._Nil) 
Text.JSON.JSONDecode_FIELD_51 gfd_name_0 fx_1 !_x_2 !l_3 = select l_3 (_predefined._Cons _x_1_0 _x_1_1 -> select _x_1_0 (Text.JSON.JSONObject fields_2_0 -> select _x_1_1 (_predefined._Nil -> <{Text.JSON._c;537;7_264}> (fx_1 True (Text.JSON.findField_212 gfd_name_0 fields_2_0)) l_3) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_3)
<{Text.JSON._c;537;7_264}> !_x_0 !l_1 = select _x_0 (_Tuple2 _x_1_0 _x_1_1 -> select _x_1_0 (Data.Maybe.Just x_2_0 -> <{_Tuple2!3}> (Data.Maybe.Just (StdGeneric.FIELD x_2_0)) l_1) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing l_1)) 
<{Text.JSON.TD;JSONNode}> _x_0 = _predefined._Nil

:: Text.JSON.JSONNode = Text.JSON.JSONNull | Text.JSON.JSONBool !a1 | Text.JSON.JSONInt !a1 | Text.JSON.JSONReal !a1 | Text.JSON.JSONString !a1 | Text.JSON.JSONArray !a1 | Text.JSON.JSONObject !a1 | Text.JSON.JSONRaw !a1 | Text.JSON.JSONError

|| Converted Records
:: <{Text.JSON.JSONEncode_s;}> = {!Text.JSON.JSONEncode_s}
Text.JSON.get_JSONEncode_s_0 rec = select rec (<{Text.JSON.JSONEncode_s;}> a1 -> a1)
Text.JSON.set_JSONEncode_s_0 rec !val = select rec (<{Text.JSON.JSONEncode_s;}>  a1 -> <{Text.JSON.JSONEncode_s;}> val)

:: <{Text.JSON.JSONEncode_ss;}> = {Text.JSON.JSONEncode_ss}
Text.JSON.get_JSONEncode_ss_1 rec = select rec (<{Text.JSON.JSONEncode_ss;}> a1 -> a1)
Text.JSON.set_JSONEncode_ss_1 rec val = select rec (<{Text.JSON.JSONEncode_ss;}>  a1 -> <{Text.JSON.JSONEncode_ss;}> val)

:: <{Text.JSON.JSONEncode_sss;}> = {Text.JSON.JSONEncode_sss}
Text.JSON.get_JSONEncode_sss_2 rec = select rec (<{Text.JSON.JSONEncode_sss;}> a1 -> a1)
Text.JSON.set_JSONEncode_sss_2 rec val = select rec (<{Text.JSON.JSONEncode_sss;}>  a1 -> <{Text.JSON.JSONEncode_sss;}> val)

:: <{Text.JSON.JSONEncode_ssss;}> = {Text.JSON.JSONEncode_ssss}
Text.JSON.get_JSONEncode_ssss_3 rec = select rec (<{Text.JSON.JSONEncode_ssss;}> a1 -> a1)
Text.JSON.set_JSONEncode_ssss_3 rec val = select rec (<{Text.JSON.JSONEncode_ssss;}>  a1 -> <{Text.JSON.JSONEncode_ssss;}> val)

:: <{Text.JSON.JSONEncode_sssss;}> = {Text.JSON.JSONEncode_sssss}
Text.JSON.get_JSONEncode_sssss_4 rec = select rec (<{Text.JSON.JSONEncode_sssss;}> a1 -> a1)
Text.JSON.set_JSONEncode_sssss_4 rec val = select rec (<{Text.JSON.JSONEncode_sssss;}>  a1 -> <{Text.JSON.JSONEncode_sssss;}> val)

:: <{Text.JSON.JSONEncode_ssssss;}> = {Text.JSON.JSONEncode_ssssss}
Text.JSON.get_JSONEncode_ssssss_5 rec = select rec (<{Text.JSON.JSONEncode_ssssss;}> a1 -> a1)
Text.JSON.set_JSONEncode_ssssss_5 rec val = select rec (<{Text.JSON.JSONEncode_ssssss;}>  a1 -> <{Text.JSON.JSONEncode_ssssss;}> val)

:: <{Text.JSON.JSONDecode_s;}> = {Text.JSON.JSONDecode_s}
Text.JSON.get_JSONDecode_s_6 rec = select rec (<{Text.JSON.JSONDecode_s;}> a1 -> a1)
Text.JSON.set_JSONDecode_s_6 rec val = select rec (<{Text.JSON.JSONDecode_s;}>  a1 -> <{Text.JSON.JSONDecode_s;}> val)

:: <{Text.JSON.JSONDecode_ss;}> = {Text.JSON.JSONDecode_ss}
Text.JSON.get_JSONDecode_ss_7 rec = select rec (<{Text.JSON.JSONDecode_ss;}> a1 -> a1)
Text.JSON.set_JSONDecode_ss_7 rec val = select rec (<{Text.JSON.JSONDecode_ss;}>  a1 -> <{Text.JSON.JSONDecode_ss;}> val)

:: <{Text.JSON.JSONDecode_sss;}> = {Text.JSON.JSONDecode_sss}
Text.JSON.get_JSONDecode_sss_8 rec = select rec (<{Text.JSON.JSONDecode_sss;}> a1 -> a1)
Text.JSON.set_JSONDecode_sss_8 rec val = select rec (<{Text.JSON.JSONDecode_sss;}>  a1 -> <{Text.JSON.JSONDecode_sss;}> val)

:: <{Text.JSON.JSONDecode_ssss;}> = {Text.JSON.JSONDecode_ssss}
Text.JSON.get_JSONDecode_ssss_9 rec = select rec (<{Text.JSON.JSONDecode_ssss;}> a1 -> a1)
Text.JSON.set_JSONDecode_ssss_9 rec val = select rec (<{Text.JSON.JSONDecode_ssss;}>  a1 -> <{Text.JSON.JSONDecode_ssss;}> val)

:: <{Text.JSON.JSONDecode_sssss;}> = {Text.JSON.JSONDecode_sssss}
Text.JSON.get_JSONDecode_sssss_10 rec = select rec (<{Text.JSON.JSONDecode_sssss;}> a1 -> a1)
Text.JSON.set_JSONDecode_sssss_10 rec val = select rec (<{Text.JSON.JSONDecode_sssss;}>  a1 -> <{Text.JSON.JSONDecode_sssss;}> val)

:: <{Text.JSON.JSONDecode_ssssss;}> = {Text.JSON.JSONDecode_ssssss}
Text.JSON.get_JSONDecode_ssssss_11 rec = select rec (<{Text.JSON.JSONDecode_ssssss;}> a1 -> a1)
Text.JSON.set_JSONDecode_ssssss_11 rec val = select rec (<{Text.JSON.JSONDecode_ssssss;}>  a1 -> <{Text.JSON.JSONDecode_ssssss;}> val)

:: <{Text.JSON.bimap_s;}> = {Text.JSON.bimap_s}
Text.JSON.get_bimap_s_12 rec = select rec (<{Text.JSON.bimap_s;}> a1 -> a1)
Text.JSON.set_bimap_s_12 rec val = select rec (<{Text.JSON.bimap_s;}>  a1 -> <{Text.JSON.bimap_s;}> val)

:: <{Text.JSON.bimap_ss;}> = {Text.JSON.bimap_ss}
Text.JSON.get_bimap_ss_13 rec = select rec (<{Text.JSON.bimap_ss;}> a1 -> a1)
Text.JSON.set_bimap_ss_13 rec val = select rec (<{Text.JSON.bimap_ss;}>  a1 -> <{Text.JSON.bimap_ss;}> val)

:: <{Text.JSON.bimap_sss;}> = {Text.JSON.bimap_sss}
Text.JSON.get_bimap_sss_14 rec = select rec (<{Text.JSON.bimap_sss;}> a1 -> a1)
Text.JSON.set_bimap_sss_14 rec val = select rec (<{Text.JSON.bimap_sss;}>  a1 -> <{Text.JSON.bimap_sss;}> val)

:: <{Text.JSON.gEq_s;}> = {Text.JSON.gEq_s}
Text.JSON.get_gEq_s_15 rec = select rec (<{Text.JSON.gEq_s;}> a1 -> a1)
Text.JSON.set_gEq_s_15 rec val = select rec (<{Text.JSON.gEq_s;}>  a1 -> <{Text.JSON.gEq_s;}> val)

:: <{Text.JSON.gEq_ss;}> = {Text.JSON.gEq_ss}
Text.JSON.get_gEq_ss_16 rec = select rec (<{Text.JSON.gEq_ss;}> a1 -> a1)
Text.JSON.set_gEq_ss_16 rec val = select rec (<{Text.JSON.gEq_ss;}>  a1 -> <{Text.JSON.gEq_ss;}> val)

:: <{Text.JSON.gEq_sss;}> = {Text.JSON.gEq_sss}
Text.JSON.get_gEq_sss_17 rec = select rec (<{Text.JSON.gEq_sss;}> a1 -> a1)
Text.JSON.set_gEq_sss_17 rec val = select rec (<{Text.JSON.gEq_sss;}>  a1 -> <{Text.JSON.gEq_sss;}> val)

:: <{Text.JSON.gEq_ssss;}> = {Text.JSON.gEq_ssss}
Text.JSON.get_gEq_ssss_18 rec = select rec (<{Text.JSON.gEq_ssss;}> a1 -> a1)
Text.JSON.set_gEq_ssss_18 rec val = select rec (<{Text.JSON.gEq_ssss;}>  a1 -> <{Text.JSON.gEq_ssss;}> val)

:: <{Text.JSON.gEq_sssss;}> = {Text.JSON.gEq_sssss}
Text.JSON.get_gEq_sssss_19 rec = select rec (<{Text.JSON.gEq_sssss;}> a1 -> a1)
Text.JSON.set_gEq_sssss_19 rec val = select rec (<{Text.JSON.gEq_sssss;}>  a1 -> <{Text.JSON.gEq_sssss;}> val)

:: <{Text.JSON.gEq_ssssss;}> = {Text.JSON.gEq_ssssss}
Text.JSON.get_gEq_ssssss_20 rec = select rec (<{Text.JSON.gEq_ssssss;}> a1 -> a1)
Text.JSON.set_gEq_ssssss_20 rec val = select rec (<{Text.JSON.gEq_ssssss;}>  a1 -> <{Text.JSON.gEq_ssssss;}> val)

:: <{Text.JSON.gEq_sssssss;}> = {Text.JSON.gEq_sssssss}
Text.JSON.get_gEq_sssssss_21 rec = select rec (<{Text.JSON.gEq_sssssss;}> a1 -> a1)
Text.JSON.set_gEq_sssssss_21 rec val = select rec (<{Text.JSON.gEq_sssssss;}>  a1 -> <{Text.JSON.gEq_sssssss;}> val)

:: <{Text.JSON.gEq_ssssssss;}> = {Text.JSON.gEq_ssssssss}
Text.JSON.get_gEq_ssssssss_22 rec = select rec (<{Text.JSON.gEq_ssssssss;}> a1 -> a1)
Text.JSON.set_gEq_ssssssss_22 rec val = select rec (<{Text.JSON.gEq_ssssssss;}>  a1 -> <{Text.JSON.gEq_ssssssss;}> val)

:: <{Text.JSON.gEq_sssssssss;}> = {Text.JSON.gEq_sssssssss}
Text.JSON.get_gEq_sssssssss_23 rec = select rec (<{Text.JSON.gEq_sssssssss;}> a1 -> a1)
Text.JSON.set_gEq_sssssssss_23 rec val = select rec (<{Text.JSON.gEq_sssssssss;}>  a1 -> <{Text.JSON.gEq_sssssssss;}> val)

