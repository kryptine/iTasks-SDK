|| ?module? Text.Unicode.UChar


Text.Unicode.UChar.wgencat !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.generalCategory !_vto_0 !_vfrom_1 c_2 = StdOverloaded.get_fromInt_26 _vfrom_1 (Text.Unicode.UChar.wgencat (StdOverloaded.get_toInt_21 _vto_0 c_2))
Text.Unicode.UChar.toInt_28 !i_0 = i_0
Text.Unicode.UChar.fromInt_42 !_x_0 = select _x_0 (0 -> Text.Unicode.UChar.UppercaseLetter) (1 -> Text.Unicode.UChar.LowercaseLetter) (2 -> Text.Unicode.UChar.TitlecaseLetter) (3 -> Text.Unicode.UChar.ModifierLetter) (4 -> Text.Unicode.UChar.OtherLetter) (5 -> Text.Unicode.UChar.NonSpacingMark) (6 -> Text.Unicode.UChar.SpacingCombiningMark) (7 -> Text.Unicode.UChar.EnclosingMark) (8 -> Text.Unicode.UChar.DecimalNumber) (9 -> Text.Unicode.UChar.LetterNumber) (10 -> Text.Unicode.UChar.OtherNumber) (11 -> Text.Unicode.UChar.ConnectorPunctuation) (12 -> Text.Unicode.UChar.DashPunctuation) (13 -> Text.Unicode.UChar.OpenPunctuation) (14 -> Text.Unicode.UChar.ClosePunctuation) (15 -> Text.Unicode.UChar.InitialQuote) (16 -> Text.Unicode.UChar.FinalQuote) (17 -> Text.Unicode.UChar.OtherPunctuation) (18 -> Text.Unicode.UChar.MathSymbol) (19 -> Text.Unicode.UChar.CurrencySymbol) (20 -> Text.Unicode.UChar.ModifierSymbol) (21 -> Text.Unicode.UChar.OtherSymbol) (22 -> Text.Unicode.UChar.Space) (23 -> Text.Unicode.UChar.LineSeparator) (24 -> Text.Unicode.UChar.ParagraphSeparator) (25 -> Text.Unicode.UChar.Control) (26 -> Text.Unicode.UChar.Format) (27 -> Text.Unicode.UChar.Surrogate) (28 -> Text.Unicode.UChar.PrivateUse) (29 -> Text.Unicode.UChar.NotAssigned) 
Text.Unicode.UChar.generalCategory_44 !_vfrom_0 c_1 = StdOverloaded.get_fromInt_26 _vfrom_0 (Text.Unicode.UChar.wgencat (Text.Unicode.UChar.toInt_28 c_1))
Text.Unicode.UChar.generalCategory_45 !c_0 = Text.Unicode.UChar.fromInt_42 (Text.Unicode.UChar.wgencat (Text.Unicode.UChar.toInt_28 c_0))
Text.Unicode.UChar.isLetter !c_0 = <{Text.Unicode.UChar._c;136;14_46}> (Text.Unicode.UChar.generalCategory_45 c_0)
<{Text.Unicode.UChar._c;136;14_46}> !_x_0 = select _x_0 (Text.Unicode.UChar.UppercaseLetter -> True) (Text.Unicode.UChar.LowercaseLetter -> True) (Text.Unicode.UChar.TitlecaseLetter -> True) (Text.Unicode.UChar.ModifierLetter -> True) (Text.Unicode.UChar.OtherLetter -> True) (_ -> False)
Text.Unicode.UChar.isMark !c_0 = <{Text.Unicode.UChar._c;147;12_47}> (Text.Unicode.UChar.generalCategory_45 c_0)
<{Text.Unicode.UChar._c;147;12_47}> !_x_0 = select _x_0 (Text.Unicode.UChar.NonSpacingMark -> True) (Text.Unicode.UChar.SpacingCombiningMark -> True) (Text.Unicode.UChar.EnclosingMark -> True) (_ -> False)
Text.Unicode.UChar.isNumber !c_0 = <{Text.Unicode.UChar._c;156;14_48}> (Text.Unicode.UChar.generalCategory_45 c_0)
<{Text.Unicode.UChar._c;156;14_48}> !_x_0 = select _x_0 (Text.Unicode.UChar.DecimalNumber -> True) (Text.Unicode.UChar.LetterNumber -> True) (Text.Unicode.UChar.OtherNumber -> True) (_ -> False)
Text.Unicode.UChar.isPunctuation !c_0 = <{Text.Unicode.UChar._c;165;19_49}> (Text.Unicode.UChar.generalCategory_45 c_0)
<{Text.Unicode.UChar._c;165;19_49}> !_x_0 = select _x_0 (Text.Unicode.UChar.ConnectorPunctuation -> True) (Text.Unicode.UChar.DashPunctuation -> True) (Text.Unicode.UChar.OpenPunctuation -> True) (Text.Unicode.UChar.ClosePunctuation -> True) (Text.Unicode.UChar.InitialQuote -> True) (Text.Unicode.UChar.FinalQuote -> True) (Text.Unicode.UChar.OtherPunctuation -> True) (_ -> False)
Text.Unicode.UChar.isSymbol !c_0 = <{Text.Unicode.UChar._c;178;14_50}> (Text.Unicode.UChar.generalCategory_45 c_0)
<{Text.Unicode.UChar._c;178;14_50}> !_x_0 = select _x_0 (Text.Unicode.UChar.MathSymbol -> True) (Text.Unicode.UChar.CurrencySymbol -> True) (Text.Unicode.UChar.ModifierSymbol -> True) (Text.Unicode.UChar.OtherSymbol -> True) (_ -> False)
Text.Unicode.UChar.isSeparator !c_0 = <{Text.Unicode.UChar._c;187;17_51}> (Text.Unicode.UChar.generalCategory_45 c_0)
<{Text.Unicode.UChar._c;187;17_51}> !_x_0 = select _x_0 (Text.Unicode.UChar.Space -> True) (Text.Unicode.UChar.LineSeparator -> True) (Text.Unicode.UChar.ParagraphSeparator -> True) (_ -> False)
Text.Unicode.UChar.iswalpha !ch_0 = error "no AnyCodeExpr"
<{Text.Unicode.UChar.==_23}> !a_0 !b_1 = error "no AnyCodeExpr"
Text.Unicode.UChar.isAlpha !c_0 = StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswalpha c_0) 0)
Text.Unicode.UChar.iswalnum !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isAlphaNum !c_0 = StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswalnum c_0) 0)
<{Text.Unicode.UChar.<_24}> !x_0 !y_1 = error "no AnyCodeExpr"
Text.Unicode.UChar.isAscii !c_0 = <{Text.Unicode.UChar.<_24}> c_0 128
Text.Unicode.UChar.isLatin1 !c_0 = StdBool.not (<{Text.Unicode.UChar.<_24}> 255 c_0)
Text.Unicode.UChar.fromChar_26 !c_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isAsciiLower !c_0 = if (StdBool.not (<{Text.Unicode.UChar.<_24}> c_0 (Text.Unicode.UChar.fromChar_26 'a'))) (StdBool.not (<{Text.Unicode.UChar.<_24}> (Text.Unicode.UChar.fromChar_26 'z') c_0)) False
Text.Unicode.UChar.isAsciiUpper !c_0 = if (StdBool.not (<{Text.Unicode.UChar.<_24}> c_0 (Text.Unicode.UChar.fromChar_26 'A'))) (StdBool.not (<{Text.Unicode.UChar.<_24}> (Text.Unicode.UChar.fromChar_26 'Z') c_0)) False
Text.Unicode.UChar.iswspace !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isSpace !c_0 = if (<{Text.Unicode.UChar.==_23}> c_0 (Text.Unicode.UChar.fromChar_26 ' ')) True (if (<{Text.Unicode.UChar.==_23}> c_0 (Text.Unicode.UChar.fromChar_26 '\t')) True (if (<{Text.Unicode.UChar.==_23}> c_0 (Text.Unicode.UChar.fromChar_26 '\n')) True (if (<{Text.Unicode.UChar.==_23}> c_0 (Text.Unicode.UChar.fromChar_26 '\r')) True (if (<{Text.Unicode.UChar.==_23}> c_0 (Text.Unicode.UChar.fromChar_26 '\f')) True (if (<{Text.Unicode.UChar.==_23}> c_0 (Text.Unicode.UChar.fromChar_26 '\v')) True (if (<{Text.Unicode.UChar.==_23}> c_0 160) True (StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswspace c_0) 0))))))))
Text.Unicode.UChar.iswcntrl !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isControl !c_0 = StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswcntrl c_0) 0)
Text.Unicode.UChar.iswprint !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isPrint !c_0 = StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswprint c_0) 0)
Text.Unicode.UChar.iswupper !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isUpper !c_0 = StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswupper c_0) 0)
Text.Unicode.UChar.iswlower !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.isLower !c_0 = StdBool.not (<{Text.Unicode.UChar.==_23}> (Text.Unicode.UChar.iswlower c_0) 0)
Text.Unicode.UChar.isDigit !c_0 = if (StdBool.not (<{Text.Unicode.UChar.<_24}> c_0 (Text.Unicode.UChar.fromChar_26 '0'))) (StdBool.not (<{Text.Unicode.UChar.<_24}> (Text.Unicode.UChar.fromChar_26 '9') c_0)) False
Text.Unicode.UChar.isOctDigit !c_0 = if (StdBool.not (<{Text.Unicode.UChar.<_24}> c_0 (Text.Unicode.UChar.fromChar_26 '0'))) (StdBool.not (<{Text.Unicode.UChar.<_24}> (Text.Unicode.UChar.fromChar_26 '7') c_0)) False
Text.Unicode.UChar.isHexDigit !c_0 = if (Text.Unicode.UChar.isDigit c_0) True (if (Text.Unicode.UChar.isHexDigit_select0 c_0) True (if (StdBool.not (<{Text.Unicode.UChar.<_24}> c_0 (Text.Unicode.UChar.fromChar_26 'a'))) (StdBool.not (<{Text.Unicode.UChar.<_24}> (Text.Unicode.UChar.fromChar_26 'f') c_0)) False))
Text.Unicode.UChar.isHexDigit_select0 !c_0 = if (StdBool.not (<{Text.Unicode.UChar.<_24}> c_0 (Text.Unicode.UChar.fromChar_26 'A'))) (StdBool.not (<{Text.Unicode.UChar.<_24}> (Text.Unicode.UChar.fromChar_26 'F') c_0)) False
Text.Unicode.UChar.towlower !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.toLower !c_0 = Text.Unicode.UChar.towlower c_0
Text.Unicode.UChar.towupper !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.toUpper !c_0 = Text.Unicode.UChar.towupper c_0
Text.Unicode.UChar.towtitle !ch_0 = error "no AnyCodeExpr"
Text.Unicode.UChar.toTitle !c_0 = Text.Unicode.UChar.towtitle c_0
Text.Unicode.UChar.fromInt_25 !i_0 = i_0
Text.Unicode.UChar.toChar_27 !i_0 = error "no AnyCodeExpr"
<{Text.Unicode.UChar.TD;UChar}> _x_0 = _predefined._Nil
<{Text.Unicode.UChar.TD;GeneralCategory}> _x_0 = _predefined._Nil

:: Text.Unicode.UChar.GeneralCategory = Text.Unicode.UChar.UppercaseLetter | Text.Unicode.UChar.LowercaseLetter | Text.Unicode.UChar.TitlecaseLetter | Text.Unicode.UChar.ModifierLetter | Text.Unicode.UChar.OtherLetter | Text.Unicode.UChar.NonSpacingMark | Text.Unicode.UChar.SpacingCombiningMark | Text.Unicode.UChar.EnclosingMark | Text.Unicode.UChar.DecimalNumber | Text.Unicode.UChar.LetterNumber | Text.Unicode.UChar.OtherNumber | Text.Unicode.UChar.ConnectorPunctuation | Text.Unicode.UChar.DashPunctuation | Text.Unicode.UChar.OpenPunctuation | Text.Unicode.UChar.ClosePunctuation | Text.Unicode.UChar.InitialQuote | Text.Unicode.UChar.FinalQuote | Text.Unicode.UChar.OtherPunctuation | Text.Unicode.UChar.MathSymbol | Text.Unicode.UChar.CurrencySymbol | Text.Unicode.UChar.ModifierSymbol | Text.Unicode.UChar.OtherSymbol | Text.Unicode.UChar.Space | Text.Unicode.UChar.LineSeparator | Text.Unicode.UChar.ParagraphSeparator | Text.Unicode.UChar.Control | Text.Unicode.UChar.Format | Text.Unicode.UChar.Surrogate | Text.Unicode.UChar.PrivateUse | Text.Unicode.UChar.NotAssigned

|| Converted Records
