|| ?module? memory


memory.getMemory !world_0 = <{_Tuple2!3}> memory.Mem world_0
memory.putMemory !mem_0 !world_1 = world_1
memory.readByte !address_0 !mem_1 = error "no AnyCodeExpr"
memory.readWord !address_0 !mem_1 = error "no AnyCodeExpr"
memory.readHalfWord !address_0 !mem_1 = error "no AnyCodeExpr"
memory.readWord1 !address_0 !mem_1 = error "no AnyCodeExpr"
memory.readHalfWord1 !address_0 !mem_1 = error "no AnyCodeExpr"
memory.readByte1 !address_0 !mem_1 = error "no AnyCodeExpr"
memory.address_of_buffer !mem_0 = error "no AnyCodeExpr"
memory.writeWord1 !value_0 !ptr_1 !_x_2 = error "no AnyCodeExpr"
memory.writeByte1 !value_0 !ptr_1 !_x_2 = error "no AnyCodeExpr"
memory.get_module_id1_13 !_x_0 = error "no AnyCodeExpr"
memory.collect_14 !_vArray_0 !i_1 !limit_2 address_3 module_name_4 mem_5 = if (<{StdInt.==_16}> i_1 limit_2) (_Tuple2 module_name_4 mem_5) (let _x_1_0 = memory.readByte address_3 mem_5 in memory.collect_14 _vArray_0 (<{StdInt.+_6}> i_1 StdInt.one_11) limit_2 (<{StdInt.+_6}> address_3 StdInt.one_11) (_SystemArray.get_update_5 _vArray_0 module_name_4 i_1 (StdChar.toChar_21 (_predefined.tupsels2v0 _x_1_0))) (_predefined.tupsels2v1 _x_1_0))
memory.collect_58 !i_0 !limit_1 address_2 module_name_3 mem_4 = if (<{StdInt.==_16}> i_0 limit_1) (_Tuple2 module_name_3 mem_4) (let _x_1_0 = memory.readByte address_2 mem_4 in memory.collect_58 (<{StdInt.+_6}> i_0 StdInt.one_11) limit_1 (<{StdInt.+_6}> address_2 StdInt.one_11) (_SystemArray.update_21 module_name_3 i_0 (StdChar.toChar_21 (_predefined.tupsels2v0 _x_1_0))) (_predefined.tupsels2v1 _x_1_0))
memory.get_module_id !module_id_0 = let address_1_0 = memory.get_module_id1_13 module_id_0, _x_1_1 = memory.readWord address_1_0 memory.Mem, length_1_2 = _predefined.tupsels2v0 _x_1_1 in <{_Tuple2!3}> (_predefined.tupsels2v0 (memory.collect_58 0 length_1_2 (<{StdInt.+_6}> address_1_0 4) (_SystemArray.createArray_17 length_1_2 ' ') (_predefined.tupsels2v1 _x_1_1))) address_1_0
<{memory.TD;Mem}> _x_0 = _predefined._Nil

:: memory.Mem = memory.Mem

|| Converted Records
:: <{memory.bimap_s;}> = {!memory.bimap_s}
memory.get_bimap_s_0 rec = select rec (<{memory.bimap_s;}> a1 -> a1)
memory.set_bimap_s_0 rec !val = select rec (<{memory.bimap_s;}>  a1 -> <{memory.bimap_s;}> val)

:: <{memory.bimap_ss;}> = {memory.bimap_ss}
memory.get_bimap_ss_1 rec = select rec (<{memory.bimap_ss;}> a1 -> a1)
memory.set_bimap_ss_1 rec val = select rec (<{memory.bimap_ss;}>  a1 -> <{memory.bimap_ss;}> val)

:: <{memory.bimap_sss;}> = {memory.bimap_sss}
memory.get_bimap_sss_2 rec = select rec (<{memory.bimap_sss;}> a1 -> a1)
memory.set_bimap_sss_2 rec val = select rec (<{memory.bimap_sss;}>  a1 -> <{memory.bimap_sss;}> val)

:: <{memory.gEq_s;}> = {memory.gEq_s}
memory.get_gEq_s_3 rec = select rec (<{memory.gEq_s;}> a1 -> a1)
memory.set_gEq_s_3 rec val = select rec (<{memory.gEq_s;}>  a1 -> <{memory.gEq_s;}> val)

:: <{memory.gEq_ss;}> = {memory.gEq_ss}
memory.get_gEq_ss_4 rec = select rec (<{memory.gEq_ss;}> a1 -> a1)
memory.set_gEq_ss_4 rec val = select rec (<{memory.gEq_ss;}>  a1 -> <{memory.gEq_ss;}> val)

:: <{memory.gEq_sss;}> = {memory.gEq_sss}
memory.get_gEq_sss_5 rec = select rec (<{memory.gEq_sss;}> a1 -> a1)
memory.set_gEq_sss_5 rec val = select rec (<{memory.gEq_sss;}>  a1 -> <{memory.gEq_sss;}> val)

:: <{memory.gEq_ssss;}> = {memory.gEq_ssss}
memory.get_gEq_ssss_6 rec = select rec (<{memory.gEq_ssss;}> a1 -> a1)
memory.set_gEq_ssss_6 rec val = select rec (<{memory.gEq_ssss;}>  a1 -> <{memory.gEq_ssss;}> val)

:: <{memory.gEq_sssss;}> = {memory.gEq_sssss}
memory.get_gEq_sssss_7 rec = select rec (<{memory.gEq_sssss;}> a1 -> a1)
memory.set_gEq_sssss_7 rec val = select rec (<{memory.gEq_sssss;}>  a1 -> <{memory.gEq_sssss;}> val)

:: <{memory.gEq_ssssss;}> = {memory.gEq_ssssss}
memory.get_gEq_ssssss_8 rec = select rec (<{memory.gEq_ssssss;}> a1 -> a1)
memory.set_gEq_ssssss_8 rec val = select rec (<{memory.gEq_ssssss;}>  a1 -> <{memory.gEq_ssssss;}> val)

:: <{memory.gEq_sssssss;}> = {memory.gEq_sssssss}
memory.get_gEq_sssssss_9 rec = select rec (<{memory.gEq_sssssss;}> a1 -> a1)
memory.set_gEq_sssssss_9 rec val = select rec (<{memory.gEq_sssssss;}>  a1 -> <{memory.gEq_sssssss;}> val)

:: <{memory.gEq_ssssssss;}> = {memory.gEq_ssssssss}
memory.get_gEq_ssssssss_10 rec = select rec (<{memory.gEq_ssssssss;}> a1 -> a1)
memory.set_gEq_ssssssss_10 rec val = select rec (<{memory.gEq_ssssssss;}>  a1 -> <{memory.gEq_ssssssss;}> val)

:: <{memory.gEq_sssssssss;}> = {memory.gEq_sssssssss}
memory.get_gEq_sssssssss_11 rec = select rec (<{memory.gEq_sssssssss;}> a1 -> a1)
memory.set_gEq_sssssssss_11 rec val = select rec (<{memory.gEq_sssssssss;}>  a1 -> <{memory.gEq_sssssssss;}> val)

