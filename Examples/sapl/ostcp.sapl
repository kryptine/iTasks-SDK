|| ?module? ostcp


ostcp.os_eom32 !er_0 !e_1 = error "no AnyCodeExpr"
ostcp.os_eom64 !er_0 !e_1 = error "no AnyCodeExpr"
ostcp.os_eom !er_0 !e_1 = ostcp.os_eom32 er_0 e_1
ostcp.os_disconnected32 !er_0 !e_1 = error "no AnyCodeExpr"
ostcp.os_disconnected64 !er_0 !e_1 = error "no AnyCodeExpr"
ostcp.os_disconnected !er_0 !e_1 = ostcp.os_disconnected32 er_0 e_1
ostcp.os_connectrequestavailable32 !er_0 !e_1 = error "no AnyCodeExpr"
ostcp.os_connectrequestavailable64 !er_0 !e_1 = error "no AnyCodeExpr"
ostcp.os_connectrequestavailable !er_0 !e_1 = ostcp.os_connectrequestavailable32 er_0 e_1
ostcp.os_connectTCP_sync32 !onlyForMac_0 !time_1 !addr_2 !e_3 = error "no AnyCodeExpr"
ostcp.os_connectTCP_sync64 !onlyForMac_0 !time_1 !addr_2 !e_3 = error "no AnyCodeExpr"
ostcp.os_connectTCP_sync !onlyForMac_0 !time_1 !addr_2 !e_3 = ostcp.os_connectTCP_sync32 onlyForMac_0 time_1 addr_2 e_3
ostcp.os_connectTCP_async32 !onlyForMac_0 !addr_1 !e_2 = error "no AnyCodeExpr"
ostcp.os_connectTCP_async64 !onlyForMac_0 !addr_1 !e_2 = error "no AnyCodeExpr"
ostcp.os_connectTCP_async !onlyForMac_0 !addr_1 !e_2 = ostcp.os_connectTCP_async32 onlyForMac_0 addr_1 e_2
ostcp.os_select_inetevents32 !endpointRef_0 !receiverType_1 !referenceCount_2 !get_receive_events_3 !get_sendable_events_4 !alreadyEom_5 !env_6 = error "no AnyCodeExpr"
ostcp.os_select_inetevents64 !endpointRef_0 !receiverType_1 !referenceCount_2 !get_receive_events_3 !get_sendable_events_4 !alreadyEom_5 !env_6 = error "no AnyCodeExpr"
ostcp.os_select_inetevents !endpointRef_0 !receiverType_1 !referenceCount_2 !get_receive_events_3 !get_sendable_events_4 !alreadyEom_5 !env_6 = ostcp.os_select_inetevents32 endpointRef_0 receiverType_1 referenceCount_2 get_receive_events_3 get_sendable_events_4 alreadyEom_5 env_6
ostcp.getMbStopTime !_vChannelEnv_0 !_x_1 !env_2 = select _x_1 (Data.Maybe.Nothing -> <{_Tuple2!3}> (_Tuple2 False 0) env_2) (Data.Maybe.Just timeout_1_0 -> let _x_2_0 = tcp.get_channel_env_get_current_tick_7 _vChannelEnv_0 env_2 in <{_Tuple2!3}> (_Tuple2 True (<{StdInt.+_6}> timeout_1_0 (_predefined.tupsels2v0 _x_2_0))) (_predefined.tupsels2v1 _x_2_0)) 
ostcp.GetTickCount = error "no AnyCodeExpr"
ostcp.tcp_getcurrenttick !world_0 = <{_Tuple2!3}> ostcp.GetTickCount world_0


|| Converted Records
:: <{ostcp.bimap_s;}> = {!ostcp.bimap_s}
ostcp.get_bimap_s_0 rec = select rec (<{ostcp.bimap_s;}> a1 -> a1)
ostcp.set_bimap_s_0 rec !val = select rec (<{ostcp.bimap_s;}>  a1 -> <{ostcp.bimap_s;}> val)

:: <{ostcp.bimap_ss;}> = {ostcp.bimap_ss}
ostcp.get_bimap_ss_1 rec = select rec (<{ostcp.bimap_ss;}> a1 -> a1)
ostcp.set_bimap_ss_1 rec val = select rec (<{ostcp.bimap_ss;}>  a1 -> <{ostcp.bimap_ss;}> val)

:: <{ostcp.bimap_sss;}> = {ostcp.bimap_sss}
ostcp.get_bimap_sss_2 rec = select rec (<{ostcp.bimap_sss;}> a1 -> a1)
ostcp.set_bimap_sss_2 rec val = select rec (<{ostcp.bimap_sss;}>  a1 -> <{ostcp.bimap_sss;}> val)

:: <{ostcp.gEq_s;}> = {ostcp.gEq_s}
ostcp.get_gEq_s_3 rec = select rec (<{ostcp.gEq_s;}> a1 -> a1)
ostcp.set_gEq_s_3 rec val = select rec (<{ostcp.gEq_s;}>  a1 -> <{ostcp.gEq_s;}> val)

:: <{ostcp.gEq_ss;}> = {ostcp.gEq_ss}
ostcp.get_gEq_ss_4 rec = select rec (<{ostcp.gEq_ss;}> a1 -> a1)
ostcp.set_gEq_ss_4 rec val = select rec (<{ostcp.gEq_ss;}>  a1 -> <{ostcp.gEq_ss;}> val)

:: <{ostcp.gEq_sss;}> = {ostcp.gEq_sss}
ostcp.get_gEq_sss_5 rec = select rec (<{ostcp.gEq_sss;}> a1 -> a1)
ostcp.set_gEq_sss_5 rec val = select rec (<{ostcp.gEq_sss;}>  a1 -> <{ostcp.gEq_sss;}> val)

:: <{ostcp.gEq_ssss;}> = {ostcp.gEq_ssss}
ostcp.get_gEq_ssss_6 rec = select rec (<{ostcp.gEq_ssss;}> a1 -> a1)
ostcp.set_gEq_ssss_6 rec val = select rec (<{ostcp.gEq_ssss;}>  a1 -> <{ostcp.gEq_ssss;}> val)

:: <{ostcp.gEq_sssss;}> = {ostcp.gEq_sssss}
ostcp.get_gEq_sssss_7 rec = select rec (<{ostcp.gEq_sssss;}> a1 -> a1)
ostcp.set_gEq_sssss_7 rec val = select rec (<{ostcp.gEq_sssss;}>  a1 -> <{ostcp.gEq_sssss;}> val)

:: <{ostcp.gEq_ssssss;}> = {ostcp.gEq_ssssss}
ostcp.get_gEq_ssssss_8 rec = select rec (<{ostcp.gEq_ssssss;}> a1 -> a1)
ostcp.set_gEq_ssssss_8 rec val = select rec (<{ostcp.gEq_ssssss;}>  a1 -> <{ostcp.gEq_ssssss;}> val)

:: <{ostcp.gEq_sssssss;}> = {ostcp.gEq_sssssss}
ostcp.get_gEq_sssssss_9 rec = select rec (<{ostcp.gEq_sssssss;}> a1 -> a1)
ostcp.set_gEq_sssssss_9 rec val = select rec (<{ostcp.gEq_sssssss;}>  a1 -> <{ostcp.gEq_sssssss;}> val)

:: <{ostcp.gEq_ssssssss;}> = {ostcp.gEq_ssssssss}
ostcp.get_gEq_ssssssss_10 rec = select rec (<{ostcp.gEq_ssssssss;}> a1 -> a1)
ostcp.set_gEq_ssssssss_10 rec val = select rec (<{ostcp.gEq_ssssssss;}>  a1 -> <{ostcp.gEq_ssssssss;}> val)

:: <{ostcp.gEq_sssssssss;}> = {ostcp.gEq_sssssssss}
ostcp.get_gEq_sssssssss_11 rec = select rec (<{ostcp.gEq_sssssssss;}> a1 -> a1)
ostcp.set_gEq_sssssssss_11 rec val = select rec (<{ostcp.gEq_sssssssss;}>  a1 -> <{ostcp.gEq_sssssssss;}> val)

